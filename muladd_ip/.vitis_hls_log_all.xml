<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <simLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xA;## set cinoutgroup [add_wave_group &quot;C InOuts&quot; -into $designtopgroup]&#xA;## set a__b__ap_return__return_group [add_wave_group a__b__ap_return__return(axi_slave) -into $cinoutgroup]&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/interrupt -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_BRESP -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_BREADY -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_BVALID -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_RRESP -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_RDATA -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_RREADY -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_RVALID -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_ARREADY -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_ARVALID -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_ARADDR -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_WSTRB -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_WDATA -into $a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_WREADY -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_WVALID -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_AWREADY -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_AWVALID -into $a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/s_axi_control_AWADDR -into $a__b__ap_return__return_group -radix hex&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake(internal)&quot; -into $designtopgroup]&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_done -into $blocksiggroup&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_idle -into $blocksiggroup&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_ready -into $blocksiggroup&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_start -into $blocksiggroup&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_rst_n -into $resetgroup&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xA;## add_wave /apatb_muladd_top/AESL_inst_muladd/ap_clk -into $clockgroup&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xA;## add_wave /apatb_muladd_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_muladd_top/ready_cnt -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_muladd_top/done_cnt -into $tb_simstatus_group -radix hex&#xA;## add_wave /apatb_muladd_top/LENGTH_a -into $tb_portdepth_group -radix hex&#xA;## add_wave /apatb_muladd_top/LENGTH_ap_return -into $tb_portdepth_group -radix hex&#xA;## add_wave /apatb_muladd_top/LENGTH_b -into $tb_portdepth_group -radix hex&#xA;## set tbcinoutgroup [add_wave_group &quot;C InOuts&quot; -into $testbenchgroup]&#xA;## set tb_a__b__ap_return__return_group [add_wave_group a__b__ap_return__return(axi_slave) -into $tbcinoutgroup]&#xA;## add_wave /apatb_muladd_top/control_INTERRUPT -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_BRESP -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_BREADY -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_BVALID -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_RRESP -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_RDATA -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_RREADY -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_RVALID -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_ARREADY -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_ARVALID -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_ARADDR -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_WSTRB -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_WDATA -into $tb_a__b__ap_return__return_group -radix hex&#xA;## add_wave /apatb_muladd_top/control_WREADY -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_WVALID -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_AWREADY -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_AWVALID -into $tb_a__b__ap_return__return_group -color #ffff00 -radix hex&#xA;## add_wave /apatb_muladd_top/control_AWADDR -into $tb_a__b__ap_return__return_group -radix hex&#xA;## save_wave_config muladd.wcfg&#xA;## run all&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xA;//&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;// RTL Simulation : 0 / 1 [0.00%] @ &quot;125000&quot;&#xA;// RTL Simulation : 1 / 1 [100.00%] @ &quot;3635000&quot;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xA;$finish called at time : 3695 ns : File &quot;/home/reon/work/xilinx/muladd_ip/solution3/sim/verilog/muladd.autotb.v&quot; Line 308&#xA;## quit" projectName="muladd_ip" solutionName="solution3" date="2022-12-18T20:44:10.045+0900" type="Warning"/>
        <logs message="WARNING: [XSIM 43-3373] &quot;/home/reon/work/xilinx/muladd_ip/solution3/sim/verilog/AESL_axi_slave_control.v&quot; Line 825. System function $fread is used as system task. This system function should have a LHS e.g. x=$fread().&#xA;Compiling module xil_defaultlib.nodf_module_intf&#xA;Compiling module xil_defaultlib.upc_loop_intf(FSM_WIDTH=1)&#xA;Compiling module xil_defaultlib.dataflow_monitor_1&#xA;Compiling module xil_defaultlib.apatb_muladd_top&#xA;Compiling module work.glbl&#xA;Built simulation snapshot muladd&#xA;&#xA;&#xA;****** xsim v2022.2 (64-bit)&#xA;  **** SW Build 3671981 on Fri Oct 14 04:59:54 MDT 2022&#xA;  **** IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022&#xA;    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.&#xA;&#xA;&#xA;source xsim.dir/muladd/xsim_script.tcl&#xA;# xsim {muladd} -view {{muladd_dataflow_ana.wcfg}} -tclbatch {muladd.tcl} -protoinst {muladd.protoinst}" projectName="muladd_ip" solutionName="solution3" date="2022-12-18T20:44:09.933+0900" type="Warning"/>
        <logs message="WARNING: [XSIM 43-3373] &quot;/home/reon/work/xilinx/muladd_ip/solution3/sim/verilog/AESL_axi_slave_control.v&quot; Line 784. System function $fread is used as system task. This system function should have a LHS e.g. x=$fread()." projectName="muladd_ip" solutionName="solution3" date="2022-12-18T20:44:03.858+0900" type="Warning"/>
        <logs message="WARNING: [XSIM 43-3373] &quot;/home/reon/work/xilinx/muladd_ip/solution3/sim/verilog/AESL_axi_slave_control.v&quot; Line 775. System function $fread is used as system task. This system function should have a LHS e.g. x=$fread()." projectName="muladd_ip" solutionName="solution3" date="2022-12-18T20:44:03.855+0900" type="Warning"/>
        <logs message="WARNING: [XSIM 43-3373] &quot;/home/reon/work/xilinx/muladd_ip/solution3/sim/verilog/AESL_axi_slave_control.v&quot; Line 708. System function $fread is used as system task. This system function should have a LHS e.g. x=$fread()." projectName="muladd_ip" solutionName="solution3" date="2022-12-18T20:44:03.852+0900" type="Warning"/>
      </simLog>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
