// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_conv2d_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        weight0_address0,
        weight0_ce0,
        weight0_q0,
        bias0_address0,
        bias0_ce0,
        bias0_q0,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_873_p_din0,
        grp_fu_873_p_din1,
        grp_fu_873_p_opcode,
        grp_fu_873_p_dout0,
        grp_fu_873_p_ce,
        grp_fu_877_p_din0,
        grp_fu_877_p_din1,
        grp_fu_877_p_opcode,
        grp_fu_877_p_dout0,
        grp_fu_877_p_ce,
        grp_fu_881_p_din0,
        grp_fu_881_p_din1,
        grp_fu_881_p_dout0,
        grp_fu_881_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [5:0] weight0_address0;
output   weight0_ce0;
input  [31:0] weight0_q0;
output  [1:0] bias0_address0;
output   bias0_ce0;
input  [31:0] bias0_q0;
output  [11:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_873_p_din0;
output  [31:0] grp_fu_873_p_din1;
output  [1:0] grp_fu_873_p_opcode;
input  [31:0] grp_fu_873_p_dout0;
output   grp_fu_873_p_ce;
output  [31:0] grp_fu_877_p_din0;
output  [31:0] grp_fu_877_p_din1;
output  [1:0] grp_fu_877_p_opcode;
input  [31:0] grp_fu_877_p_dout0;
output   grp_fu_877_p_ce;
output  [31:0] grp_fu_881_p_din0;
output  [31:0] grp_fu_881_p_din1;
input  [31:0] grp_fu_881_p_dout0;
output   grp_fu_881_p_ce;

reg ap_idle;
reg[9:0] x_address0;
reg x_ce0;
reg[5:0] weight0_address0;
reg weight0_ce0;
reg bias0_ce0;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state18_pp0_stage8_iter1;
wire    ap_block_state27_pp0_stage8_iter2;
wire    ap_block_state36_pp0_stage8_iter3;
wire    ap_block_state45_pp0_stage8_iter4;
wire    ap_block_state54_pp0_stage8_iter5;
wire    ap_block_state63_pp0_stage8_iter6;
wire    ap_block_pp0_stage8_subdone;
reg   [0:0] icmp_ln31_reg_1648;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_323;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state22_pp0_stage3_iter2;
wire    ap_block_state31_pp0_stage3_iter3;
wire    ap_block_state40_pp0_stage3_iter4;
wire    ap_block_state49_pp0_stage3_iter5;
wire    ap_block_state58_pp0_stage3_iter6;
wire    ap_block_state67_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state24_pp0_stage5_iter2;
wire    ap_block_state33_pp0_stage5_iter3;
wire    ap_block_state42_pp0_stage5_iter4;
wire    ap_block_state51_pp0_stage5_iter5;
wire    ap_block_state60_pp0_stage5_iter6;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state26_pp0_stage7_iter2;
wire    ap_block_state35_pp0_stage7_iter3;
wire    ap_block_state44_pp0_stage7_iter4;
wire    ap_block_state53_pp0_stage7_iter5;
wire    ap_block_state62_pp0_stage7_iter6;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state28_pp0_stage0_iter3;
wire    ap_block_state37_pp0_stage0_iter4;
wire    ap_block_state46_pp0_stage0_iter5;
wire    ap_block_state55_pp0_stage0_iter6;
wire    ap_block_state64_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] select_ln33_23_reg_1879;
reg   [31:0] reg_327;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state20_pp0_stage1_iter2;
wire    ap_block_state29_pp0_stage1_iter3;
wire    ap_block_state38_pp0_stage1_iter4;
wire    ap_block_state47_pp0_stage1_iter5;
wire    ap_block_state56_pp0_stage1_iter6;
wire    ap_block_state65_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] reg_331;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state23_pp0_stage4_iter2;
wire    ap_block_state32_pp0_stage4_iter3;
wire    ap_block_state41_pp0_stage4_iter4;
wire    ap_block_state50_pp0_stage4_iter5;
wire    ap_block_state59_pp0_stage4_iter6;
wire    ap_block_state68_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] select_ln33_25_reg_1765;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state25_pp0_stage6_iter2;
wire    ap_block_state34_pp0_stage6_iter3;
wire    ap_block_state43_pp0_stage6_iter4;
wire    ap_block_state52_pp0_stage6_iter5;
wire    ap_block_state61_pp0_stage6_iter6;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] tmp_6_reg_1782;
reg   [31:0] reg_335;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state21_pp0_stage2_iter2;
wire    ap_block_state30_pp0_stage2_iter3;
wire    ap_block_state39_pp0_stage2_iter4;
wire    ap_block_state48_pp0_stage2_iter5;
wire    ap_block_state57_pp0_stage2_iter6;
wire    ap_block_state66_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] reg_339;
reg   [0:0] select_ln33_25_reg_1765_pp0_iter1_reg;
reg   [0:0] icmp_ln49_reg_1981;
reg   [0:0] icmp_ln49_reg_1981_pp0_iter4_reg;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter4_reg;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter5_reg;
reg   [31:0] reg_343;
reg   [0:0] tmp_6_reg_1782_pp0_iter3_reg;
reg   [4:0] h_4_reg_1615;
reg   [2:0] och_2_reg_1622;
reg   [11:0] indvar_flatten134_load_reg_1627;
wire   [1:0] empty_fu_386_p1;
reg   [1:0] empty_reg_1632;
wire   [3:0] p_shl3_fu_390_p3;
reg   [3:0] p_shl3_reg_1637;
wire  signed [4:0] empty_155_fu_402_p2;
reg  signed [4:0] empty_155_reg_1642;
wire   [0:0] icmp_ln31_fu_456_p2;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter1_reg;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter2_reg;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter3_reg;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter4_reg;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter5_reg;
reg   [0:0] icmp_ln31_reg_1648_pp0_iter6_reg;
reg   [9:0] indvar_flatten_load_reg_1652;
wire   [2:0] add_ln31_fu_468_p2;
reg   [2:0] add_ln31_reg_1657;
wire   [0:0] icmp_ln33_fu_474_p2;
reg   [0:0] icmp_ln33_reg_1662;
reg   [0:0] icmp_ln33_reg_1662_pp0_iter1_reg;
wire   [4:0] select_ln31_fu_480_p3;
reg   [4:0] select_ln31_reg_1676;
wire   [1:0] empty_174_fu_492_p1;
reg   [1:0] empty_174_reg_1682;
wire   [3:0] p_shl3_mid1_fu_496_p3;
reg   [3:0] p_shl3_mid1_reg_1687;
wire  signed [4:0] p_mid152_fu_508_p2;
reg  signed [4:0] p_mid152_reg_1692;
wire   [5:0] select_ln31_33_fu_536_p3;
reg   [5:0] select_ln31_33_reg_1698;
wire   [0:0] xor_ln31_fu_552_p2;
reg   [0:0] xor_ln31_reg_1705;
wire   [0:0] and_ln31_2_fu_564_p2;
reg   [0:0] and_ln31_2_reg_1710;
reg   [0:0] and_ln31_2_reg_1710_pp0_iter1_reg;
wire   [4:0] p_dup7_fu_570_p2;
reg   [4:0] p_dup7_reg_1721;
wire   [4:0] select_ln33_fu_582_p3;
reg   [4:0] select_ln33_reg_1728;
wire   [9:0] select_ln33_22_fu_616_p3;
reg   [9:0] select_ln33_22_reg_1736;
wire   [5:0] empty_167_fu_686_p2;
reg   [5:0] empty_167_reg_1743;
reg   [5:0] empty_167_reg_1743_pp0_iter1_reg;
wire   [5:0] p_mid111_fu_859_p2;
reg   [5:0] p_mid111_reg_1753;
reg   [5:0] p_mid111_reg_1753_pp0_iter1_reg;
wire   [9:0] select_ln33_21_fu_895_p3;
reg   [9:0] select_ln33_21_reg_1758;
wire   [0:0] select_ln33_25_fu_910_p3;
reg   [0:0] select_ln33_25_reg_1765_pp0_iter2_reg;
wire  signed [5:0] add_ln46_fu_923_p2;
reg  signed [5:0] add_ln46_reg_1771;
reg  signed [5:0] add_ln46_reg_1771_pp0_iter1_reg;
wire  signed [9:0] sext_ln49_fu_929_p1;
reg  signed [9:0] sext_ln49_reg_1776;
reg   [0:0] tmp_6_reg_1782_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_1782_pp0_iter2_reg;
reg   [0:0] tmp_6_reg_1782_pp0_iter4_reg;
reg   [0:0] tmp_6_reg_1782_pp0_iter5_reg;
wire   [11:0] add_ln65_fu_951_p2;
reg   [11:0] add_ln65_reg_1793;
reg   [11:0] add_ln65_reg_1793_pp0_iter1_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter2_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter3_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter4_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter5_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter6_reg;
reg   [11:0] add_ln65_reg_1793_pp0_iter7_reg;
wire   [5:0] select_ln31_31_fu_1057_p3;
reg   [5:0] select_ln31_31_reg_1808;
wire   [5:0] select_ln31_32_fu_1091_p3;
reg   [5:0] select_ln31_32_reg_1815;
wire   [9:0] trunc_ln46_cast18_fu_1108_p1;
reg   [9:0] trunc_ln46_cast18_reg_1827;
wire   [31:0] bitcast_ln31_45_fu_1125_p1;
wire   [31:0] bitcast_ln57_fu_1130_p1;
wire   [4:0] add_ln46_2_fu_1135_p2;
reg   [4:0] add_ln46_2_reg_1853;
wire   [9:0] zext_ln49_fu_1140_p1;
reg   [9:0] zext_ln49_reg_1858;
wire   [31:0] bitcast_ln31_44_fu_1211_p1;
wire   [0:0] select_ln33_23_fu_1239_p3;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter1_reg;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter2_reg;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter3_reg;
reg   [0:0] select_ln33_23_reg_1879_pp0_iter6_reg;
wire   [31:0] bitcast_ln57_1_fu_1279_p1;
wire   [9:0] add_ln54_5_fu_1293_p2;
reg   [9:0] add_ln54_5_reg_1896;
wire   [9:0] add_ln54_6_fu_1297_p2;
reg   [9:0] add_ln54_6_reg_1901;
wire   [9:0] add_ln54_7_fu_1302_p2;
reg   [9:0] add_ln54_7_reg_1906;
wire   [9:0] add_ln54_8_fu_1307_p2;
reg   [9:0] add_ln54_8_reg_1911;
wire   [31:0] bitcast_ln31_43_fu_1327_p1;
wire   [31:0] bitcast_ln57_2_fu_1332_p1;
wire   [31:0] bitcast_ln31_42_fu_1345_p1;
reg   [31:0] mul_reg_1946;
wire   [31:0] bitcast_ln57_3_fu_1350_p1;
wire   [2:0] select_ln31_30_fu_1359_p3;
reg   [2:0] select_ln31_30_reg_1961;
reg   [2:0] select_ln31_30_reg_1961_pp0_iter2_reg;
reg   [2:0] select_ln31_30_reg_1961_pp0_iter3_reg;
reg   [2:0] select_ln31_30_reg_1961_pp0_iter4_reg;
reg   [2:0] select_ln31_30_reg_1961_pp0_iter5_reg;
reg   [2:0] select_ln31_30_reg_1961_pp0_iter6_reg;
wire   [31:0] bitcast_ln31_37_fu_1364_p1;
reg   [31:0] mul_0_0_1_reg_1976;
wire   [0:0] icmp_ln49_fu_1384_p2;
reg   [0:0] icmp_ln49_reg_1981_pp0_iter2_reg;
reg   [0:0] icmp_ln49_reg_1981_pp0_iter3_reg;
reg   [0:0] icmp_ln49_reg_1981_pp0_iter5_reg;
reg   [0:0] icmp_ln49_reg_1981_pp0_iter6_reg;
wire   [31:0] bitcast_ln57_4_fu_1389_p1;
wire   [31:0] bitcast_ln31_41_fu_1435_p1;
reg   [31:0] mul_0_0_2_reg_2008;
reg   [31:0] mul_0_0_2_reg_2008_pp0_iter2_reg;
wire   [31:0] bitcast_ln57_5_fu_1440_p1;
reg   [31:0] weight0_load_1_reg_2023;
wire   [31:0] bitcast_ln31_40_fu_1449_p1;
reg   [31:0] mul_0_1_reg_2033;
reg   [31:0] mul_0_1_reg_2033_pp0_iter2_reg;
wire   [31:0] bitcast_ln57_6_fu_1454_p1;
wire   [31:0] bitcast_ln31_39_fu_1459_p1;
reg   [31:0] mul_0_1_1_reg_2048;
reg   [31:0] mul_0_1_1_reg_2048_pp0_iter2_reg;
reg   [31:0] mul_0_1_1_reg_2048_pp0_iter3_reg;
wire   [31:0] bitcast_ln57_7_fu_1464_p1;
wire   [31:0] bitcast_ln31_38_fu_1469_p1;
reg   [31:0] mul_0_1_2_reg_2063;
reg   [31:0] mul_0_1_2_reg_2063_pp0_iter2_reg;
reg   [31:0] mul_0_1_2_reg_2063_pp0_iter3_reg;
wire   [31:0] bitcast_ln57_8_fu_1473_p1;
wire   [31:0] select_ln49_fu_1503_p3;
reg   [31:0] select_ln49_reg_2073;
reg   [31:0] mul_0_2_reg_2079;
reg   [31:0] mul_0_2_reg_2079_pp0_iter2_reg;
reg   [31:0] mul_0_2_reg_2079_pp0_iter3_reg;
reg   [31:0] mul_0_2_reg_2079_pp0_iter4_reg;
reg   [31:0] mul_0_2_1_reg_2084;
reg   [31:0] mul_0_2_1_reg_2084_pp0_iter2_reg;
reg   [31:0] mul_0_2_1_reg_2084_pp0_iter3_reg;
reg   [31:0] mul_0_2_1_reg_2084_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_2089;
reg   [31:0] mul_0_2_2_reg_2089_pp0_iter2_reg;
reg   [31:0] mul_0_2_2_reg_2089_pp0_iter3_reg;
reg   [31:0] mul_0_2_2_reg_2089_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_2089_pp0_iter5_reg;
wire   [31:0] select_ln49_28_fu_1511_p3;
reg   [31:0] select_ln49_28_reg_2094;
wire   [31:0] select_ln49_29_fu_1521_p3;
reg   [31:0] select_ln49_29_reg_2100;
wire   [31:0] select_ln49_30_fu_1528_p3;
reg   [31:0] select_ln49_30_reg_2106;
reg   [31:0] sum_9_0_1_1_reg_2111;
wire   [31:0] select_ln49_31_fu_1534_p3;
reg   [31:0] select_ln49_31_reg_2117;
reg   [31:0] select_ln49_31_reg_2117_pp0_iter5_reg;
wire   [31:0] select_ln49_32_fu_1544_p3;
reg   [31:0] select_ln49_32_reg_2124;
wire   [31:0] sum_3_0_2_1_fu_1555_p3;
reg   [31:0] sum_3_0_2_1_reg_2134;
reg   [31:0] bias0_load_reg_2140;
wire   [31:0] select_ln49_33_fu_1565_p3;
reg   [31:0] select_ln49_33_reg_2145;
wire   [31:0] bitcast_ln31_fu_1572_p1;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage4_subdone;
wire   [63:0] zext_ln31_46_fu_757_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln57_29_fu_946_p1;
wire   [63:0] zext_ln31_45_fu_962_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln57_fu_971_p1;
wire   [63:0] zext_ln31_44_fu_1103_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln57_27_fu_1116_p1;
wire   [63:0] zext_ln31_43_fu_1121_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln57_28_fu_1149_p1;
wire   [63:0] zext_ln31_38_fu_1206_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln57_30_fu_1288_p1;
wire   [63:0] zext_ln31_42_fu_1322_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln57_31_fu_1337_p1;
wire   [63:0] zext_ln31_41_fu_1341_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln57_32_fu_1355_p1;
wire   [63:0] zext_ln31_40_fu_1374_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln57_33_fu_1394_p1;
wire   [63:0] zext_ln31_39_fu_1430_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln57_34_fu_1445_p1;
wire   [63:0] zext_ln31_37_fu_1551_p1;
wire   [63:0] zext_ln65_fu_1576_p1;
reg   [4:0] w_fu_110;
wire    ap_loop_init;
reg   [4:0] h_fu_114;
wire   [4:0] select_ln33_26_fu_1379_p3;
reg   [9:0] indvar_flatten_fu_118;
wire   [9:0] select_ln33_27_fu_1403_p3;
reg   [2:0] och_fu_122;
reg   [11:0] indvar_flatten134_fu_126;
wire   [11:0] add_ln31_27_fu_1196_p2;
reg   [31:0] grp_fu_310_p0;
reg   [31:0] grp_fu_310_p1;
reg   [31:0] grp_fu_315_p0;
reg   [31:0] grp_fu_315_p1;
reg   [31:0] grp_fu_319_p0;
reg   [31:0] grp_fu_319_p1;
wire   [4:0] p_shl3_cast2_fu_398_p1;
wire   [4:0] zext_ln31_3_fu_382_p1;
wire   [3:0] empty_156_fu_412_p1;
wire   [5:0] p_shl9_fu_416_p3;
wire  signed [5:0] p_cast_fu_408_p1;
wire   [6:0] p_shl11_0_1_fu_438_p3;
wire   [9:0] p_shl10_0_1_fu_430_p3;
wire   [9:0] p_shl11_0_1_cast_fu_446_p1;
wire   [4:0] p_shl3_cast2_mid1_fu_504_p1;
wire   [4:0] zext_ln31_fu_488_p1;
wire   [3:0] empty_175_fu_518_p1;
wire   [5:0] p_shl9_0_0_mid1_fu_522_p3;
wire  signed [5:0] p_cast_mid1_fu_514_p1;
wire   [5:0] p_mid154_fu_530_p2;
wire   [5:0] empty_157_fu_424_p2;
wire   [9:0] empty_170_fu_450_p2;
wire   [0:0] icmp_ln35_fu_558_p2;
wire   [0:0] or_ln33_fu_576_p2;
wire   [6:0] p_shl11_0_1_mid1_fu_598_p3;
wire   [9:0] p_shl10_0_1_mid1_fu_590_p3;
wire   [9:0] p_shl11_0_1_cast_mid1_fu_606_p1;
wire   [9:0] p_mid117_fu_610_p2;
wire   [9:0] select_ln31_37_fu_544_p3;
wire   [6:0] p_shl_fu_624_p3;
wire   [7:0] p_shl_cast_fu_631_p1;
wire   [7:0] p_shl3_cast_fu_635_p1;
wire   [7:0] zext_ln33_5_fu_647_p1;
wire   [7:0] empty_154_fu_638_p2;
wire   [7:0] empty_164_fu_650_p2;
wire   [6:0] empty_165_fu_656_p1;
wire   [9:0] p_shl5_fu_668_p3;
wire   [11:0] p_shl4_fu_660_p3;
wire  signed [11:0] p_shl5_cast_fu_676_p1;
wire   [5:0] zext_ln33_4_fu_644_p1;
wire   [4:0] empty_168_fu_692_p1;
wire   [7:0] p_shl11_fu_704_p3;
wire   [9:0] p_shl10_fu_696_p3;
wire  signed [9:0] p_shl11_0_0_cast_fu_712_p1;
wire   [6:0] p_shl_mid1_fu_730_p3;
wire   [7:0] p_shl_cast_mid1_fu_737_p1;
wire   [7:0] p_shl3_cast_mid1_fu_741_p1;
wire   [7:0] p_mid148_fu_744_p2;
wire   [6:0] empty_178_fu_761_p1;
wire   [9:0] p_shl5_mid_fu_773_p3;
wire   [11:0] p_shl4_mid_fu_765_p3;
wire  signed [11:0] p_shl5_cast_mid182_fu_781_p1;
wire   [11:0] p_mid184_fu_785_p2;
wire   [11:0] empty_166_fu_680_p2;
wire   [9:0] empty_169_fu_716_p2;
wire   [0:0] tmp_fu_722_p3;
wire   [7:0] zext_ln33_6_fu_813_p1;
wire   [7:0] select_ln31_29_fu_750_p3;
wire   [7:0] p_mid1_fu_816_p2;
wire   [6:0] empty_179_fu_822_p1;
wire   [9:0] p_shl5_mid1_fu_834_p3;
wire   [11:0] p_shl4_mid1_fu_826_p3;
wire  signed [11:0] p_shl5_cast_mid1_fu_842_p1;
wire   [11:0] p_mid19_fu_846_p2;
wire   [11:0] select_ln31_34_fu_791_p3;
wire   [5:0] zext_ln33_fu_810_p1;
wire   [4:0] empty_180_fu_865_p1;
wire   [7:0] p_shl11_0_0_mid1_fu_877_p3;
wire   [9:0] p_shl10_0_0_mid1_fu_869_p3;
wire  signed [9:0] p_shl11_0_0_cast_mid1_fu_885_p1;
wire   [9:0] p_mid115_fu_889_p2;
wire   [9:0] select_ln31_36_fu_798_p3;
wire   [0:0] tmp_4_fu_902_p3;
wire   [0:0] or_ln31_fu_805_p2;
wire   [5:0] trunc_ln46_cast_fu_920_p1;
wire   [9:0] add_ln54_3_fu_941_p2;
wire   [11:0] trunc_ln46_cast20_fu_917_p1;
wire   [11:0] select_ln33_19_fu_852_p3;
wire   [5:0] add_ln31_26_fu_957_p2;
wire   [9:0] add_ln54_fu_967_p2;
wire  signed [4:0] empty_158_fu_976_p2;
wire   [3:0] empty_159_fu_985_p1;
wire   [5:0] p_shl9_0_1_fu_989_p3;
wire  signed [5:0] p_cast4_fu_981_p1;
wire  signed [4:0] empty_161_fu_1003_p2;
wire   [3:0] empty_162_fu_1012_p1;
wire   [5:0] p_shl9_0_2_fu_1016_p3;
wire  signed [5:0] p_cast5_fu_1008_p1;
wire  signed [4:0] p_mid156_fu_1030_p2;
wire   [3:0] empty_176_fu_1039_p1;
wire   [5:0] p_shl9_0_1_mid1_fu_1043_p3;
wire  signed [5:0] p_cast4_mid1_fu_1035_p1;
wire   [5:0] p_mid158_fu_1051_p2;
wire   [5:0] empty_160_fu_997_p2;
wire  signed [4:0] p_mid160_fu_1064_p2;
wire   [3:0] empty_177_fu_1073_p1;
wire   [5:0] p_shl9_0_2_mid1_fu_1077_p3;
wire  signed [5:0] p_cast5_mid1_fu_1069_p1;
wire   [5:0] p_mid162_fu_1085_p2;
wire   [5:0] empty_163_fu_1024_p2;
wire   [5:0] add_ln31_25_fu_1098_p2;
wire   [9:0] add_ln54_1_fu_1111_p2;
wire   [9:0] add_ln54_2_fu_1144_p2;
wire   [4:0] empty_171_fu_1159_p2;
wire   [6:0] p_shl11_0_2_fu_1178_p3;
wire   [9:0] p_shl10_0_2_fu_1170_p3;
wire   [9:0] p_shl11_0_2_cast_fu_1186_p1;
wire   [5:0] add_ln31_21_fu_1201_p2;
wire   [0:0] cmp25_0_2_fu_1164_p2;
wire   [9:0] empty_172_fu_1190_p2;
wire   [4:0] p_mid119_fu_1228_p2;
wire   [0:0] cmp25_0_2_mid1_fu_1233_p2;
wire   [0:0] and_ln31_fu_1216_p2;
wire   [6:0] p_shl11_0_2_mid1_fu_1254_p3;
wire   [9:0] p_shl10_0_2_mid1_fu_1246_p3;
wire   [9:0] p_shl11_0_2_cast_mid1_fu_1262_p1;
wire   [9:0] p_mid121_fu_1266_p2;
wire   [9:0] select_ln31_38_fu_1221_p3;
wire   [9:0] add_ln54_4_fu_1284_p2;
wire   [9:0] select_ln33_24_fu_1272_p3;
wire   [5:0] add_ln31_24_fu_1317_p2;
wire   [5:0] add_ln31_23_fu_1369_p2;
wire   [9:0] add_ln33_fu_1398_p2;
wire   [5:0] add_ln31_22_fu_1425_p2;
wire   [5:0] select_ln31_35_fu_1478_p3;
wire   [5:0] select_ln33_20_fu_1484_p3;
wire   [5:0] or_ln49_fu_1490_p2;
wire   [0:0] tmp_5_fu_1495_p3;
wire   [0:0] or_ln49_4_fu_1517_p2;
wire   [0:0] or_ln49_5_fu_1540_p2;
wire   [0:0] or_ln49_6_fu_1561_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter6_stage4;
reg    ap_idle_pp0_0to5;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            h_fu_114 <= 5'd0;
        end else if (((icmp_ln31_reg_1648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            h_fu_114 <= select_ln33_26_fu_1379_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten134_fu_126 <= 12'd0;
    end else if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        indvar_flatten134_fu_126 <= add_ln31_27_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 10'd0;
        end else if (((icmp_ln31_reg_1648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_118 <= select_ln33_27_fu_1403_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            och_fu_122 <= 3'd0;
        end else if (((icmp_ln31_reg_1648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            och_fu_122 <= select_ln31_30_fu_1359_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_fu_110 <= 5'd0;
    end else if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        w_fu_110 <= add_ln46_2_fu_1135_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln31_fu_456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln31_reg_1657 <= add_ln31_fu_468_p2;
        and_ln31_2_reg_1710 <= and_ln31_2_fu_564_p2;
        empty_174_reg_1682 <= empty_174_fu_492_p1;
        icmp_ln33_reg_1662 <= icmp_ln33_fu_474_p2;
        indvar_flatten_load_reg_1652 <= indvar_flatten_fu_118;
        p_dup7_reg_1721 <= p_dup7_fu_570_p2;
        p_mid152_reg_1692 <= p_mid152_fu_508_p2;
        p_shl3_mid1_reg_1687[3 : 2] <= p_shl3_mid1_fu_496_p3[3 : 2];
        select_ln31_33_reg_1698 <= select_ln31_33_fu_536_p3;
        select_ln31_reg_1676 <= select_ln31_fu_480_p3;
        select_ln33_22_reg_1736[9 : 2] <= select_ln33_22_fu_616_p3[9 : 2];
        select_ln33_reg_1728 <= select_ln33_fu_582_p3;
        xor_ln31_reg_1705 <= xor_ln31_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln46_2_reg_1853 <= add_ln46_2_fu_1135_p2;
        zext_ln49_reg_1858[4 : 0] <= zext_ln49_fu_1140_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1771 <= add_ln46_fu_923_p2;
        add_ln65_reg_1793 <= add_ln65_fu_951_p2;
        p_mid111_reg_1753 <= p_mid111_fu_859_p2;
        select_ln33_21_reg_1758[9 : 2] <= select_ln33_21_fu_895_p3[9 : 2];
        select_ln33_25_reg_1765 <= select_ln33_25_fu_910_p3;
        sext_ln49_reg_1776 <= sext_ln49_fu_929_p1;
        tmp_6_reg_1782 <= add_ln46_fu_923_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1771_pp0_iter1_reg <= add_ln46_reg_1771;
        add_ln65_reg_1793_pp0_iter1_reg <= add_ln65_reg_1793;
        add_ln65_reg_1793_pp0_iter2_reg <= add_ln65_reg_1793_pp0_iter1_reg;
        add_ln65_reg_1793_pp0_iter3_reg <= add_ln65_reg_1793_pp0_iter2_reg;
        add_ln65_reg_1793_pp0_iter4_reg <= add_ln65_reg_1793_pp0_iter3_reg;
        add_ln65_reg_1793_pp0_iter5_reg <= add_ln65_reg_1793_pp0_iter4_reg;
        add_ln65_reg_1793_pp0_iter6_reg <= add_ln65_reg_1793_pp0_iter5_reg;
        add_ln65_reg_1793_pp0_iter7_reg <= add_ln65_reg_1793_pp0_iter6_reg;
        bias0_load_reg_2140 <= bias0_q0;
        empty_167_reg_1743 <= empty_167_fu_686_p2;
        empty_167_reg_1743_pp0_iter1_reg <= empty_167_reg_1743;
        mul_0_1_reg_2033_pp0_iter2_reg <= mul_0_1_reg_2033;
        p_mid111_reg_1753_pp0_iter1_reg <= p_mid111_reg_1753;
        select_ln33_25_reg_1765_pp0_iter1_reg <= select_ln33_25_reg_1765;
        select_ln33_25_reg_1765_pp0_iter2_reg <= select_ln33_25_reg_1765_pp0_iter1_reg;
        select_ln49_28_reg_2094 <= select_ln49_28_fu_1511_p3;
        tmp_6_reg_1782_pp0_iter1_reg <= tmp_6_reg_1782;
        tmp_6_reg_1782_pp0_iter2_reg <= tmp_6_reg_1782_pp0_iter1_reg;
        tmp_6_reg_1782_pp0_iter3_reg <= tmp_6_reg_1782_pp0_iter2_reg;
        tmp_6_reg_1782_pp0_iter4_reg <= tmp_6_reg_1782_pp0_iter3_reg;
        tmp_6_reg_1782_pp0_iter5_reg <= tmp_6_reg_1782_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln54_5_reg_1896 <= add_ln54_5_fu_1293_p2;
        add_ln54_6_reg_1901 <= add_ln54_6_fu_1297_p2;
        add_ln54_7_reg_1906 <= add_ln54_7_fu_1302_p2;
        add_ln54_8_reg_1911 <= add_ln54_8_fu_1307_p2;
        select_ln33_23_reg_1879 <= select_ln33_23_fu_1239_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln31_2_reg_1710_pp0_iter1_reg <= and_ln31_2_reg_1710;
        empty_155_reg_1642 <= empty_155_fu_402_p2;
        empty_reg_1632 <= empty_fu_386_p1;
        h_4_reg_1615 <= h_fu_114;
        icmp_ln31_reg_1648 <= icmp_ln31_fu_456_p2;
        icmp_ln31_reg_1648_pp0_iter1_reg <= icmp_ln31_reg_1648;
        icmp_ln31_reg_1648_pp0_iter2_reg <= icmp_ln31_reg_1648_pp0_iter1_reg;
        icmp_ln31_reg_1648_pp0_iter3_reg <= icmp_ln31_reg_1648_pp0_iter2_reg;
        icmp_ln31_reg_1648_pp0_iter4_reg <= icmp_ln31_reg_1648_pp0_iter3_reg;
        icmp_ln31_reg_1648_pp0_iter5_reg <= icmp_ln31_reg_1648_pp0_iter4_reg;
        icmp_ln31_reg_1648_pp0_iter6_reg <= icmp_ln31_reg_1648_pp0_iter5_reg;
        icmp_ln33_reg_1662_pp0_iter1_reg <= icmp_ln33_reg_1662;
        indvar_flatten134_load_reg_1627 <= indvar_flatten134_fu_126;
        mul_0_0_2_reg_2008_pp0_iter2_reg <= mul_0_0_2_reg_2008;
        och_2_reg_1622 <= och_fu_122;
        p_shl3_reg_1637[3 : 2] <= p_shl3_fu_390_p3[3 : 2];
        sum_3_0_2_1_reg_2134 <= sum_3_0_2_1_fu_1555_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln49_reg_1981 <= icmp_ln49_fu_1384_p2;
        select_ln31_30_reg_1961 <= select_ln31_30_fu_1359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln49_reg_1981_pp0_iter2_reg <= icmp_ln49_reg_1981;
        icmp_ln49_reg_1981_pp0_iter3_reg <= icmp_ln49_reg_1981_pp0_iter2_reg;
        icmp_ln49_reg_1981_pp0_iter4_reg <= icmp_ln49_reg_1981_pp0_iter3_reg;
        icmp_ln49_reg_1981_pp0_iter5_reg <= icmp_ln49_reg_1981_pp0_iter4_reg;
        icmp_ln49_reg_1981_pp0_iter6_reg <= icmp_ln49_reg_1981_pp0_iter5_reg;
        select_ln31_30_reg_1961_pp0_iter2_reg <= select_ln31_30_reg_1961;
        select_ln31_30_reg_1961_pp0_iter3_reg <= select_ln31_30_reg_1961_pp0_iter2_reg;
        select_ln31_30_reg_1961_pp0_iter4_reg <= select_ln31_30_reg_1961_pp0_iter3_reg;
        select_ln31_30_reg_1961_pp0_iter5_reg <= select_ln31_30_reg_1961_pp0_iter4_reg;
        select_ln31_30_reg_1961_pp0_iter6_reg <= select_ln31_30_reg_1961_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln33_25_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_0_0_1_reg_1976 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_0_0_2_reg_2008 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_1_1_reg_2048 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_1_1_reg_2048_pp0_iter2_reg <= mul_0_1_1_reg_2048;
        mul_0_1_1_reg_2048_pp0_iter3_reg <= mul_0_1_1_reg_2048_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln49_reg_1981 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_1_2_reg_2063 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_1_2_reg_2063_pp0_iter2_reg <= mul_0_1_2_reg_2063;
        mul_0_1_2_reg_2063_pp0_iter3_reg <= mul_0_1_2_reg_2063_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_6_reg_1782 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_1_reg_2033 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (select_ln33_23_reg_1879 == 1'd0))) begin
        mul_0_2_1_reg_2084 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_0_2_1_reg_2084_pp0_iter2_reg <= mul_0_2_1_reg_2084;
        mul_0_2_1_reg_2084_pp0_iter3_reg <= mul_0_2_1_reg_2084_pp0_iter2_reg;
        mul_0_2_1_reg_2084_pp0_iter4_reg <= mul_0_2_1_reg_2084_pp0_iter3_reg;
        select_ln33_23_reg_1879_pp0_iter1_reg <= select_ln33_23_reg_1879;
        select_ln33_23_reg_1879_pp0_iter2_reg <= select_ln33_23_reg_1879_pp0_iter1_reg;
        select_ln33_23_reg_1879_pp0_iter3_reg <= select_ln33_23_reg_1879_pp0_iter2_reg;
        select_ln33_23_reg_1879_pp0_iter4_reg <= select_ln33_23_reg_1879_pp0_iter3_reg;
        select_ln33_23_reg_1879_pp0_iter5_reg <= select_ln33_23_reg_1879_pp0_iter4_reg;
        select_ln33_23_reg_1879_pp0_iter6_reg <= select_ln33_23_reg_1879_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_0_2_2_reg_2089 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_0_2_2_reg_2089_pp0_iter2_reg <= mul_0_2_2_reg_2089;
        mul_0_2_2_reg_2089_pp0_iter3_reg <= mul_0_2_2_reg_2089_pp0_iter2_reg;
        mul_0_2_2_reg_2089_pp0_iter4_reg <= mul_0_2_2_reg_2089_pp0_iter3_reg;
        mul_0_2_2_reg_2089_pp0_iter5_reg <= mul_0_2_2_reg_2089_pp0_iter4_reg;
        select_ln49_31_reg_2117 <= select_ln49_31_fu_1534_p3;
        select_ln49_31_reg_2117_pp0_iter5_reg <= select_ln49_31_reg_2117;
        select_ln49_33_reg_2145 <= select_ln49_33_fu_1565_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (select_ln33_23_reg_1879 == 1'd0))) begin
        mul_0_2_reg_2079 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_0_2_reg_2079_pp0_iter2_reg <= mul_0_2_reg_2079;
        mul_0_2_reg_2079_pp0_iter3_reg <= mul_0_2_reg_2079_pp0_iter2_reg;
        mul_0_2_reg_2079_pp0_iter4_reg <= mul_0_2_reg_2079_pp0_iter3_reg;
        select_ln49_30_reg_2106 <= select_ln49_30_fu_1528_p3;
        select_ln49_reg_2073 <= select_ln49_fu_1503_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_reg_1946 <= grp_fu_881_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln33_23_reg_1879 == 1'd0)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_323 <= weight0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln33_23_reg_1879 == 1'd0)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_327 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln33_23_reg_1879 == 1'd0)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_reg_1782 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln33_25_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_331 <= weight0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln33_23_reg_1879 == 1'd0)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln33_25_reg_1765 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_335 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln49_reg_1981_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln33_25_reg_1765_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln33_23_reg_1879_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (select_ln33_23_reg_1879_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_339 <= grp_fu_873_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_6_reg_1782_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_343 <= grp_fu_877_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln31_31_reg_1808 <= select_ln31_31_fu_1057_p3;
        select_ln31_32_reg_1815 <= select_ln31_32_fu_1091_p3;
        trunc_ln46_cast18_reg_1827[4 : 0] <= trunc_ln46_cast18_fu_1108_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln49_29_reg_2100 <= select_ln49_29_fu_1521_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (select_ln33_23_reg_1879_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln49_32_reg_2124 <= select_ln49_32_fu_1544_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sum_9_0_1_1_reg_2111 <= grp_fu_877_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weight0_load_1_reg_2023 <= weight0_q0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1648 == 1'd1) & (1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln31_reg_1648_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter6_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias0_ce0 = 1'b1;
    end else begin
        bias0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_310_p0 = select_ln49_32_reg_2124;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_310_p0 = select_ln49_31_reg_2117;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_310_p0 = sum_9_0_1_1_reg_2111;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_310_p0 = select_ln49_28_reg_2094;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_310_p0 = select_ln49_reg_2073;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_310_p0 = mul_reg_1946;
    end else begin
        grp_fu_310_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_310_p1 = mul_0_2_1_reg_2084_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_310_p1 = mul_0_2_reg_2079_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_310_p1 = mul_0_1_2_reg_2063_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_310_p1 = mul_0_0_2_reg_2008_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_310_p1 = mul_0_0_1_reg_1976;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_310_p1 = 32'd0;
    end else begin
        grp_fu_310_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_315_p0 = select_ln49_33_reg_2145;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_315_p0 = sum_3_0_2_1_reg_2134;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_315_p0 = select_ln49_30_reg_2106;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_315_p0 = select_ln49_29_reg_2100;
    end else begin
        grp_fu_315_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_315_p1 = bitcast_ln31_fu_1572_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_315_p1 = mul_0_2_2_reg_2089_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_315_p1 = mul_0_1_1_reg_2048_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_315_p1 = mul_0_1_reg_2033_pp0_iter2_reg;
    end else begin
        grp_fu_315_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_319_p0 = bitcast_ln57_8_fu_1473_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_319_p0 = bitcast_ln57_7_fu_1464_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_319_p0 = bitcast_ln57_6_fu_1454_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_319_p0 = bitcast_ln57_5_fu_1440_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_319_p0 = bitcast_ln57_4_fu_1389_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_319_p0 = bitcast_ln57_3_fu_1350_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_319_p0 = bitcast_ln57_2_fu_1332_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_319_p0 = bitcast_ln57_1_fu_1279_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_319_p0 = bitcast_ln57_fu_1130_p1;
    end else begin
        grp_fu_319_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_319_p1 = bitcast_ln31_38_fu_1469_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_319_p1 = bitcast_ln31_39_fu_1459_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_319_p1 = bitcast_ln31_40_fu_1449_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_319_p1 = bitcast_ln31_41_fu_1435_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_319_p1 = bitcast_ln31_37_fu_1364_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_319_p1 = bitcast_ln31_42_fu_1345_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_319_p1 = bitcast_ln31_43_fu_1327_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_319_p1 = bitcast_ln31_44_fu_1211_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_319_p1 = bitcast_ln31_45_fu_1125_p1;
    end else begin
        grp_fu_319_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight0_address0 = zext_ln31_39_fu_1430_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight0_address0 = zext_ln31_40_fu_1374_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        weight0_address0 = zext_ln31_41_fu_1341_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        weight0_address0 = zext_ln31_42_fu_1322_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        weight0_address0 = zext_ln31_38_fu_1206_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        weight0_address0 = zext_ln31_43_fu_1121_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weight0_address0 = zext_ln31_44_fu_1103_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weight0_address0 = zext_ln31_45_fu_962_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weight0_address0 = zext_ln31_46_fu_757_p1;
    end else begin
        weight0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        weight0_ce0 = 1'b1;
    end else begin
        weight0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_address0 = zext_ln57_34_fu_1445_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_address0 = zext_ln57_33_fu_1394_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        x_address0 = zext_ln57_32_fu_1355_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        x_address0 = zext_ln57_31_fu_1337_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        x_address0 = zext_ln57_30_fu_1288_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        x_address0 = zext_ln57_28_fu_1149_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_address0 = zext_ln57_27_fu_1116_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_address0 = zext_ln57_fu_971_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_address0 = zext_ln57_29_fu_946_p1;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter6_stage4) & (ap_idle_pp0_0to5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_21_fu_1201_p2 = (select_ln31_31_reg_1808 + 6'd1);

assign add_ln31_22_fu_1425_p2 = (select_ln31_32_reg_1815 + 6'd2);

assign add_ln31_23_fu_1369_p2 = (select_ln31_32_reg_1815 + 6'd1);

assign add_ln31_24_fu_1317_p2 = (select_ln31_31_reg_1808 + 6'd2);

assign add_ln31_25_fu_1098_p2 = (select_ln31_33_reg_1698 + 6'd2);

assign add_ln31_26_fu_957_p2 = (select_ln31_33_reg_1698 + 6'd1);

assign add_ln31_27_fu_1196_p2 = (indvar_flatten134_load_reg_1627 + 12'd1);

assign add_ln31_fu_468_p2 = (och_fu_122 + 3'd1);

assign add_ln33_fu_1398_p2 = (indvar_flatten_load_reg_1652 + 10'd1);

assign add_ln46_2_fu_1135_p2 = (select_ln33_reg_1728 + 5'd1);

assign add_ln46_fu_923_p2 = ($signed(trunc_ln46_cast_fu_920_p1) + $signed(6'd63));

assign add_ln54_1_fu_1111_p2 = (trunc_ln46_cast18_fu_1108_p1 + select_ln33_21_reg_1758);

assign add_ln54_2_fu_1144_p2 = (zext_ln49_fu_1140_p1 + select_ln33_21_reg_1758);

assign add_ln54_3_fu_941_p2 = ($signed(sext_ln49_fu_929_p1) + $signed(select_ln33_22_reg_1736));

assign add_ln54_4_fu_1284_p2 = (trunc_ln46_cast18_reg_1827 + select_ln33_22_reg_1736);

assign add_ln54_5_fu_1293_p2 = (zext_ln49_reg_1858 + select_ln33_22_reg_1736);

assign add_ln54_6_fu_1297_p2 = ($signed(sext_ln49_reg_1776) + $signed(select_ln33_24_fu_1272_p3));

assign add_ln54_7_fu_1302_p2 = (trunc_ln46_cast18_reg_1827 + select_ln33_24_fu_1272_p3);

assign add_ln54_8_fu_1307_p2 = (zext_ln49_reg_1858 + select_ln33_24_fu_1272_p3);

assign add_ln54_fu_967_p2 = ($signed(sext_ln49_reg_1776) + $signed(select_ln33_21_reg_1758));

assign add_ln65_fu_951_p2 = (trunc_ln46_cast20_fu_917_p1 + select_ln33_19_fu_852_p3);

assign and_ln31_2_fu_564_p2 = (xor_ln31_fu_552_p2 & icmp_ln35_fu_558_p2);

assign and_ln31_fu_1216_p2 = (xor_ln31_reg_1705 & cmp25_0_2_fu_1164_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign bias0_address0 = zext_ln31_37_fu_1551_p1;

assign bitcast_ln31_37_fu_1364_p1 = reg_323;

assign bitcast_ln31_38_fu_1469_p1 = weight0_load_1_reg_2023;

assign bitcast_ln31_39_fu_1459_p1 = reg_331;

assign bitcast_ln31_40_fu_1449_p1 = reg_323;

assign bitcast_ln31_41_fu_1435_p1 = reg_331;

assign bitcast_ln31_42_fu_1345_p1 = reg_331;

assign bitcast_ln31_43_fu_1327_p1 = reg_323;

assign bitcast_ln31_44_fu_1211_p1 = reg_331;

assign bitcast_ln31_45_fu_1125_p1 = reg_323;

assign bitcast_ln31_fu_1572_p1 = bias0_load_reg_2140;

assign bitcast_ln57_1_fu_1279_p1 = reg_335;

assign bitcast_ln57_2_fu_1332_p1 = reg_335;

assign bitcast_ln57_3_fu_1350_p1 = reg_327;

assign bitcast_ln57_4_fu_1389_p1 = reg_335;

assign bitcast_ln57_5_fu_1440_p1 = reg_327;

assign bitcast_ln57_6_fu_1454_p1 = reg_335;

assign bitcast_ln57_7_fu_1464_p1 = reg_327;

assign bitcast_ln57_8_fu_1473_p1 = reg_335;

assign bitcast_ln57_fu_1130_p1 = reg_335;

assign cmp25_0_2_fu_1164_p2 = ((empty_171_fu_1159_p2 > 5'd27) ? 1'b1 : 1'b0);

assign cmp25_0_2_mid1_fu_1233_p2 = ((p_mid119_fu_1228_p2 > 5'd27) ? 1'b1 : 1'b0);

assign empty_154_fu_638_p2 = (p_shl_cast_fu_631_p1 - p_shl3_cast_fu_635_p1);

assign empty_155_fu_402_p2 = (p_shl3_cast2_fu_398_p1 - zext_ln31_3_fu_382_p1);

assign empty_156_fu_412_p1 = empty_155_fu_402_p2[3:0];

assign empty_157_fu_424_p2 = ($signed(p_shl9_fu_416_p3) - $signed(p_cast_fu_408_p1));

assign empty_158_fu_976_p2 = ($signed(empty_155_reg_1642) + $signed(5'd1));

assign empty_159_fu_985_p1 = empty_158_fu_976_p2[3:0];

assign empty_160_fu_997_p2 = ($signed(p_shl9_0_1_fu_989_p3) - $signed(p_cast4_fu_981_p1));

assign empty_161_fu_1003_p2 = ($signed(empty_155_reg_1642) + $signed(5'd2));

assign empty_162_fu_1012_p1 = empty_161_fu_1003_p2[3:0];

assign empty_163_fu_1024_p2 = ($signed(p_shl9_0_2_fu_1016_p3) - $signed(p_cast5_fu_1008_p1));

assign empty_164_fu_650_p2 = (zext_ln33_5_fu_647_p1 + empty_154_fu_638_p2);

assign empty_165_fu_656_p1 = empty_164_fu_650_p2[6:0];

assign empty_166_fu_680_p2 = ($signed(p_shl4_fu_660_p3) - $signed(p_shl5_cast_fu_676_p1));

assign empty_167_fu_686_p2 = ($signed(zext_ln33_4_fu_644_p1) + $signed(6'd63));

assign empty_168_fu_692_p1 = empty_167_fu_686_p2[4:0];

assign empty_169_fu_716_p2 = ($signed(p_shl10_fu_696_p3) - $signed(p_shl11_0_0_cast_fu_712_p1));

assign empty_170_fu_450_p2 = (p_shl10_0_1_fu_430_p3 - p_shl11_0_1_cast_fu_446_p1);

assign empty_171_fu_1159_p2 = (h_4_reg_1615 + 5'd1);

assign empty_172_fu_1190_p2 = (p_shl10_0_2_fu_1170_p3 - p_shl11_0_2_cast_fu_1186_p1);

assign empty_174_fu_492_p1 = add_ln31_fu_468_p2[1:0];

assign empty_175_fu_518_p1 = p_mid152_fu_508_p2[3:0];

assign empty_176_fu_1039_p1 = p_mid156_fu_1030_p2[3:0];

assign empty_177_fu_1073_p1 = p_mid160_fu_1064_p2[3:0];

assign empty_178_fu_761_p1 = p_mid148_fu_744_p2[6:0];

assign empty_179_fu_822_p1 = p_mid1_fu_816_p2[6:0];

assign empty_180_fu_865_p1 = p_mid111_fu_859_p2[4:0];

assign empty_fu_386_p1 = och_fu_122[1:0];

assign grp_fu_873_p_ce = 1'b1;

assign grp_fu_873_p_din0 = grp_fu_310_p0;

assign grp_fu_873_p_din1 = grp_fu_310_p1;

assign grp_fu_873_p_opcode = 2'd0;

assign grp_fu_877_p_ce = 1'b1;

assign grp_fu_877_p_din0 = grp_fu_315_p0;

assign grp_fu_877_p_din1 = grp_fu_315_p1;

assign grp_fu_877_p_opcode = 2'd0;

assign grp_fu_881_p_ce = 1'b1;

assign grp_fu_881_p_din0 = grp_fu_319_p0;

assign grp_fu_881_p_din1 = grp_fu_319_p1;

assign icmp_ln31_fu_456_p2 = ((indvar_flatten134_fu_126 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_474_p2 = ((indvar_flatten_fu_118 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_558_p2 = ((w_fu_110 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1384_p2 = ((add_ln46_2_reg_1853 > 5'd27) ? 1'b1 : 1'b0);

assign or_ln31_fu_805_p2 = (tmp_fu_722_p3 | icmp_ln33_reg_1662);

assign or_ln33_fu_576_p2 = (icmp_ln33_fu_474_p2 | and_ln31_2_fu_564_p2);

assign or_ln49_4_fu_1517_p2 = (select_ln33_25_reg_1765_pp0_iter2_reg | icmp_ln49_reg_1981_pp0_iter2_reg);

assign or_ln49_5_fu_1540_p2 = (tmp_6_reg_1782_pp0_iter5_reg | select_ln33_23_reg_1879_pp0_iter4_reg);

assign or_ln49_6_fu_1561_p2 = (select_ln33_23_reg_1879_pp0_iter6_reg | icmp_ln49_reg_1981_pp0_iter6_reg);

assign or_ln49_fu_1490_p2 = (select_ln33_20_fu_1484_p3 | add_ln46_reg_1771_pp0_iter1_reg);

assign p_cast4_fu_981_p1 = empty_158_fu_976_p2;

assign p_cast4_mid1_fu_1035_p1 = p_mid156_fu_1030_p2;

assign p_cast5_fu_1008_p1 = empty_161_fu_1003_p2;

assign p_cast5_mid1_fu_1069_p1 = p_mid160_fu_1064_p2;

assign p_cast_fu_408_p1 = empty_155_fu_402_p2;

assign p_cast_mid1_fu_514_p1 = p_mid152_fu_508_p2;

assign p_dup7_fu_570_p2 = (select_ln31_fu_480_p3 + 5'd1);

assign p_mid111_fu_859_p2 = ($signed(zext_ln33_fu_810_p1) + $signed(6'd63));

assign p_mid115_fu_889_p2 = ($signed(p_shl10_0_0_mid1_fu_869_p3) - $signed(p_shl11_0_0_cast_mid1_fu_885_p1));

assign p_mid117_fu_610_p2 = (p_shl10_0_1_mid1_fu_590_p3 - p_shl11_0_1_cast_mid1_fu_606_p1);

assign p_mid119_fu_1228_p2 = (select_ln31_reg_1676 + 5'd2);

assign p_mid121_fu_1266_p2 = (p_shl10_0_2_mid1_fu_1246_p3 - p_shl11_0_2_cast_mid1_fu_1262_p1);

assign p_mid148_fu_744_p2 = (p_shl_cast_mid1_fu_737_p1 - p_shl3_cast_mid1_fu_741_p1);

assign p_mid152_fu_508_p2 = (p_shl3_cast2_mid1_fu_504_p1 - zext_ln31_fu_488_p1);

assign p_mid154_fu_530_p2 = ($signed(p_shl9_0_0_mid1_fu_522_p3) - $signed(p_cast_mid1_fu_514_p1));

assign p_mid156_fu_1030_p2 = ($signed(p_mid152_reg_1692) + $signed(5'd1));

assign p_mid158_fu_1051_p2 = ($signed(p_shl9_0_1_mid1_fu_1043_p3) - $signed(p_cast4_mid1_fu_1035_p1));

assign p_mid160_fu_1064_p2 = ($signed(p_mid152_reg_1692) + $signed(5'd2));

assign p_mid162_fu_1085_p2 = ($signed(p_shl9_0_2_mid1_fu_1077_p3) - $signed(p_cast5_mid1_fu_1069_p1));

assign p_mid184_fu_785_p2 = ($signed(p_shl4_mid_fu_765_p3) - $signed(p_shl5_cast_mid182_fu_781_p1));

assign p_mid19_fu_846_p2 = ($signed(p_shl4_mid1_fu_826_p3) - $signed(p_shl5_cast_mid1_fu_842_p1));

assign p_mid1_fu_816_p2 = (zext_ln33_6_fu_813_p1 + select_ln31_29_fu_750_p3);

assign p_shl10_0_0_mid1_fu_869_p3 = {{empty_180_fu_865_p1}, {5'd0}};

assign p_shl10_0_1_fu_430_p3 = {{h_fu_114}, {5'd0}};

assign p_shl10_0_1_mid1_fu_590_p3 = {{p_dup7_fu_570_p2}, {5'd0}};

assign p_shl10_0_2_fu_1170_p3 = {{empty_171_fu_1159_p2}, {5'd0}};

assign p_shl10_0_2_mid1_fu_1246_p3 = {{p_mid119_fu_1228_p2}, {5'd0}};

assign p_shl10_fu_696_p3 = {{empty_168_fu_692_p1}, {5'd0}};

assign p_shl11_0_0_cast_fu_712_p1 = $signed(p_shl11_fu_704_p3);

assign p_shl11_0_0_cast_mid1_fu_885_p1 = $signed(p_shl11_0_0_mid1_fu_877_p3);

assign p_shl11_0_0_mid1_fu_877_p3 = {{p_mid111_fu_859_p2}, {2'd0}};

assign p_shl11_0_1_cast_fu_446_p1 = p_shl11_0_1_fu_438_p3;

assign p_shl11_0_1_cast_mid1_fu_606_p1 = p_shl11_0_1_mid1_fu_598_p3;

assign p_shl11_0_1_fu_438_p3 = {{h_fu_114}, {2'd0}};

assign p_shl11_0_1_mid1_fu_598_p3 = {{p_dup7_fu_570_p2}, {2'd0}};

assign p_shl11_0_2_cast_fu_1186_p1 = p_shl11_0_2_fu_1178_p3;

assign p_shl11_0_2_cast_mid1_fu_1262_p1 = p_shl11_0_2_mid1_fu_1254_p3;

assign p_shl11_0_2_fu_1178_p3 = {{empty_171_fu_1159_p2}, {2'd0}};

assign p_shl11_0_2_mid1_fu_1254_p3 = {{p_mid119_fu_1228_p2}, {2'd0}};

assign p_shl11_fu_704_p3 = {{empty_167_fu_686_p2}, {2'd0}};

assign p_shl3_cast2_fu_398_p1 = p_shl3_fu_390_p3;

assign p_shl3_cast2_mid1_fu_504_p1 = p_shl3_mid1_fu_496_p3;

assign p_shl3_cast_fu_635_p1 = p_shl3_reg_1637;

assign p_shl3_cast_mid1_fu_741_p1 = p_shl3_mid1_reg_1687;

assign p_shl3_fu_390_p3 = {{empty_fu_386_p1}, {2'd0}};

assign p_shl3_mid1_fu_496_p3 = {{empty_174_fu_492_p1}, {2'd0}};

assign p_shl4_fu_660_p3 = {{empty_165_fu_656_p1}, {5'd0}};

assign p_shl4_mid1_fu_826_p3 = {{empty_179_fu_822_p1}, {5'd0}};

assign p_shl4_mid_fu_765_p3 = {{empty_178_fu_761_p1}, {5'd0}};

assign p_shl5_cast_fu_676_p1 = $signed(p_shl5_fu_668_p3);

assign p_shl5_cast_mid182_fu_781_p1 = $signed(p_shl5_mid_fu_773_p3);

assign p_shl5_cast_mid1_fu_842_p1 = $signed(p_shl5_mid1_fu_834_p3);

assign p_shl5_fu_668_p3 = {{empty_164_fu_650_p2}, {2'd0}};

assign p_shl5_mid1_fu_834_p3 = {{p_mid1_fu_816_p2}, {2'd0}};

assign p_shl5_mid_fu_773_p3 = {{p_mid148_fu_744_p2}, {2'd0}};

assign p_shl9_0_0_mid1_fu_522_p3 = {{empty_175_fu_518_p1}, {2'd0}};

assign p_shl9_0_1_fu_989_p3 = {{empty_159_fu_985_p1}, {2'd0}};

assign p_shl9_0_1_mid1_fu_1043_p3 = {{empty_176_fu_1039_p1}, {2'd0}};

assign p_shl9_0_2_fu_1016_p3 = {{empty_162_fu_1012_p1}, {2'd0}};

assign p_shl9_0_2_mid1_fu_1077_p3 = {{empty_177_fu_1073_p1}, {2'd0}};

assign p_shl9_fu_416_p3 = {{empty_156_fu_412_p1}, {2'd0}};

assign p_shl_cast_fu_631_p1 = p_shl_fu_624_p3;

assign p_shl_cast_mid1_fu_737_p1 = p_shl_mid1_fu_730_p3;

assign p_shl_fu_624_p3 = {{empty_reg_1632}, {5'd0}};

assign p_shl_mid1_fu_730_p3 = {{empty_174_reg_1682}, {5'd0}};

assign select_ln31_29_fu_750_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? p_mid148_fu_744_p2 : empty_154_fu_638_p2);

assign select_ln31_30_fu_1359_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? add_ln31_reg_1657 : och_2_reg_1622);

assign select_ln31_31_fu_1057_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? p_mid158_fu_1051_p2 : empty_160_fu_997_p2);

assign select_ln31_32_fu_1091_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? p_mid162_fu_1085_p2 : empty_163_fu_1024_p2);

assign select_ln31_33_fu_536_p3 = ((icmp_ln33_fu_474_p2[0:0] == 1'b1) ? p_mid154_fu_530_p2 : empty_157_fu_424_p2);

assign select_ln31_34_fu_791_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? p_mid184_fu_785_p2 : empty_166_fu_680_p2);

assign select_ln31_35_fu_1478_p3 = ((icmp_ln33_reg_1662_pp0_iter1_reg[0:0] == 1'b1) ? 6'd32 : empty_167_reg_1743_pp0_iter1_reg);

assign select_ln31_36_fu_798_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? 10'd996 : empty_169_fu_716_p2);

assign select_ln31_37_fu_544_p3 = ((icmp_ln33_fu_474_p2[0:0] == 1'b1) ? 10'd0 : empty_170_fu_450_p2);

assign select_ln31_38_fu_1221_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? 10'd28 : empty_172_fu_1190_p2);

assign select_ln31_fu_480_p3 = ((icmp_ln33_fu_474_p2[0:0] == 1'b1) ? 5'd0 : h_fu_114);

assign select_ln33_19_fu_852_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? p_mid19_fu_846_p2 : select_ln31_34_fu_791_p3);

assign select_ln33_20_fu_1484_p3 = ((and_ln31_2_reg_1710_pp0_iter1_reg[0:0] == 1'b1) ? p_mid111_reg_1753_pp0_iter1_reg : select_ln31_35_fu_1478_p3);

assign select_ln33_21_fu_895_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? p_mid115_fu_889_p2 : select_ln31_36_fu_798_p3);

assign select_ln33_22_fu_616_p3 = ((and_ln31_2_fu_564_p2[0:0] == 1'b1) ? p_mid117_fu_610_p2 : select_ln31_37_fu_544_p3);

assign select_ln33_23_fu_1239_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? cmp25_0_2_mid1_fu_1233_p2 : and_ln31_fu_1216_p2);

assign select_ln33_24_fu_1272_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? p_mid121_fu_1266_p2 : select_ln31_38_fu_1221_p3);

assign select_ln33_25_fu_910_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? tmp_4_fu_902_p3 : or_ln31_fu_805_p2);

assign select_ln33_26_fu_1379_p3 = ((and_ln31_2_reg_1710[0:0] == 1'b1) ? p_dup7_reg_1721 : select_ln31_reg_1676);

assign select_ln33_27_fu_1403_p3 = ((icmp_ln33_reg_1662[0:0] == 1'b1) ? 10'd1 : add_ln33_fu_1398_p2);

assign select_ln33_fu_582_p3 = ((or_ln33_fu_576_p2[0:0] == 1'b1) ? 5'd0 : w_fu_110);

assign select_ln49_28_fu_1511_p3 = ((select_ln33_25_reg_1765_pp0_iter1_reg[0:0] == 1'b1) ? select_ln49_reg_2073 : reg_339);

assign select_ln49_29_fu_1521_p3 = ((or_ln49_4_fu_1517_p2[0:0] == 1'b1) ? select_ln49_28_reg_2094 : reg_339);

assign select_ln49_30_fu_1528_p3 = ((tmp_6_reg_1782_pp0_iter3_reg[0:0] == 1'b1) ? select_ln49_29_reg_2100 : reg_343);

assign select_ln49_31_fu_1534_p3 = ((icmp_ln49_reg_1981_pp0_iter4_reg[0:0] == 1'b1) ? sum_9_0_1_1_reg_2111 : reg_339);

assign select_ln49_32_fu_1544_p3 = ((or_ln49_5_fu_1540_p2[0:0] == 1'b1) ? select_ln49_31_reg_2117 : reg_339);

assign select_ln49_33_fu_1565_p3 = ((or_ln49_6_fu_1561_p2[0:0] == 1'b1) ? sum_3_0_2_1_reg_2134 : reg_343);

assign select_ln49_fu_1503_p3 = ((tmp_5_fu_1495_p3[0:0] == 1'b1) ? 32'd0 : reg_339);

assign sext_ln49_fu_929_p1 = add_ln46_fu_923_p2;

assign sum_3_0_2_1_fu_1555_p3 = ((select_ln33_23_reg_1879_pp0_iter5_reg[0:0] == 1'b1) ? select_ln49_31_reg_2117_pp0_iter5_reg : reg_339);

assign tmp_4_fu_902_p3 = p_mid111_fu_859_p2[32'd5];

assign tmp_5_fu_1495_p3 = or_ln49_fu_1490_p2[32'd5];

assign tmp_fu_722_p3 = empty_167_fu_686_p2[32'd5];

assign trunc_ln46_cast18_fu_1108_p1 = select_ln33_reg_1728;

assign trunc_ln46_cast20_fu_917_p1 = select_ln33_reg_1728;

assign trunc_ln46_cast_fu_920_p1 = select_ln33_reg_1728;

assign xor_ln31_fu_552_p2 = (icmp_ln33_fu_474_p2 ^ 1'd1);

assign y_address0 = zext_ln65_fu_1576_p1;

assign y_d0 = reg_343;

assign zext_ln31_37_fu_1551_p1 = select_ln31_30_reg_1961_pp0_iter6_reg;

assign zext_ln31_38_fu_1206_p1 = add_ln31_21_fu_1201_p2;

assign zext_ln31_39_fu_1430_p1 = add_ln31_22_fu_1425_p2;

assign zext_ln31_3_fu_382_p1 = och_fu_122;

assign zext_ln31_40_fu_1374_p1 = add_ln31_23_fu_1369_p2;

assign zext_ln31_41_fu_1341_p1 = select_ln31_32_reg_1815;

assign zext_ln31_42_fu_1322_p1 = add_ln31_24_fu_1317_p2;

assign zext_ln31_43_fu_1121_p1 = select_ln31_31_reg_1808;

assign zext_ln31_44_fu_1103_p1 = add_ln31_25_fu_1098_p2;

assign zext_ln31_45_fu_962_p1 = add_ln31_26_fu_957_p2;

assign zext_ln31_46_fu_757_p1 = select_ln31_33_reg_1698;

assign zext_ln31_fu_488_p1 = add_ln31_fu_468_p2;

assign zext_ln33_4_fu_644_p1 = h_4_reg_1615;

assign zext_ln33_5_fu_647_p1 = h_4_reg_1615;

assign zext_ln33_6_fu_813_p1 = p_dup7_reg_1721;

assign zext_ln33_fu_810_p1 = p_dup7_reg_1721;

assign zext_ln49_fu_1140_p1 = add_ln46_2_fu_1135_p2;

assign zext_ln57_27_fu_1116_p1 = add_ln54_1_fu_1111_p2;

assign zext_ln57_28_fu_1149_p1 = add_ln54_2_fu_1144_p2;

assign zext_ln57_29_fu_946_p1 = add_ln54_3_fu_941_p2;

assign zext_ln57_30_fu_1288_p1 = add_ln54_4_fu_1284_p2;

assign zext_ln57_31_fu_1337_p1 = add_ln54_5_reg_1896;

assign zext_ln57_32_fu_1355_p1 = add_ln54_6_reg_1901;

assign zext_ln57_33_fu_1394_p1 = add_ln54_7_reg_1906;

assign zext_ln57_34_fu_1445_p1 = add_ln54_8_reg_1911;

assign zext_ln57_fu_971_p1 = add_ln54_fu_967_p2;

assign zext_ln65_fu_1576_p1 = add_ln65_reg_1793_pp0_iter7_reg;

always @ (posedge ap_clk) begin
    p_shl3_reg_1637[1:0] <= 2'b00;
    p_shl3_mid1_reg_1687[1:0] <= 2'b00;
    select_ln33_22_reg_1736[1:0] <= 2'b00;
    select_ln33_21_reg_1758[1:0] <= 2'b00;
    trunc_ln46_cast18_reg_1827[9:5] <= 5'b00000;
    zext_ln49_reg_1858[9:5] <= 5'b00000;
end

endmodule //cnn_top_conv2d_1
