// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_conv2d_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        x_address1,
        x_ce1,
        x_q1,
        weight0_address0,
        weight0_ce0,
        weight0_q0,
        weight0_address1,
        weight0_ce1,
        weight0_q1,
        bias0_address0,
        bias0_ce0,
        bias0_q0,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_841_p_din0,
        grp_fu_841_p_din1,
        grp_fu_841_p_opcode,
        grp_fu_841_p_dout0,
        grp_fu_841_p_ce,
        grp_fu_845_p_din0,
        grp_fu_845_p_din1,
        grp_fu_845_p_opcode,
        grp_fu_845_p_dout0,
        grp_fu_845_p_ce,
        grp_fu_849_p_din0,
        grp_fu_849_p_din1,
        grp_fu_849_p_dout0,
        grp_fu_849_p_ce,
        grp_fu_853_p_din0,
        grp_fu_853_p_din1,
        grp_fu_853_p_dout0,
        grp_fu_853_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [9:0] x_address1;
output   x_ce1;
input  [31:0] x_q1;
output  [5:0] weight0_address0;
output   weight0_ce0;
input  [31:0] weight0_q0;
output  [5:0] weight0_address1;
output   weight0_ce1;
input  [31:0] weight0_q1;
output  [1:0] bias0_address0;
output   bias0_ce0;
input  [31:0] bias0_q0;
output  [11:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_841_p_din0;
output  [31:0] grp_fu_841_p_din1;
output  [1:0] grp_fu_841_p_opcode;
input  [31:0] grp_fu_841_p_dout0;
output   grp_fu_841_p_ce;
output  [31:0] grp_fu_845_p_din0;
output  [31:0] grp_fu_845_p_din1;
output  [1:0] grp_fu_845_p_opcode;
input  [31:0] grp_fu_845_p_dout0;
output   grp_fu_845_p_ce;
output  [31:0] grp_fu_849_p_din0;
output  [31:0] grp_fu_849_p_din1;
input  [31:0] grp_fu_849_p_dout0;
output   grp_fu_849_p_ce;
output  [31:0] grp_fu_853_p_din0;
output  [31:0] grp_fu_853_p_din1;
input  [31:0] grp_fu_853_p_dout0;
output   grp_fu_853_p_ce;

reg ap_idle;
reg[9:0] x_address0;
reg x_ce0;
reg[9:0] x_address1;
reg x_ce1;
reg[5:0] weight0_address0;
reg weight0_ce0;
reg[5:0] weight0_address1;
reg weight0_ce1;
reg bias0_ce0;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_state55_pp0_stage4_iter10;
wire    ap_block_state60_pp0_stage4_iter11;
wire    ap_block_state65_pp0_stage4_iter12;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln31_reg_1670;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_327;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_state54_pp0_stage3_iter10;
wire    ap_block_state59_pp0_stage3_iter11;
wire    ap_block_state64_pp0_stage3_iter12;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_state56_pp0_stage0_iter11;
wire    ap_block_state61_pp0_stage0_iter12;
wire    ap_block_state66_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_331;
reg   [31:0] reg_335;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_state52_pp0_stage1_iter10;
wire    ap_block_state57_pp0_stage1_iter11;
wire    ap_block_state62_pp0_stage1_iter12;
wire    ap_block_state67_pp0_stage1_iter13;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] select_ln33_23_reg_1885;
reg   [31:0] reg_340;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] tmp_6_reg_1829;
reg   [31:0] reg_345;
reg   [31:0] reg_350;
reg   [31:0] reg_354;
reg   [0:0] select_ln33_25_reg_1806;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_state53_pp0_stage2_iter10;
wire    ap_block_state58_pp0_stage2_iter11;
wire    ap_block_state63_pp0_stage2_iter12;
wire    ap_block_state68_pp0_stage2_iter13;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] reg_359;
reg   [0:0] select_ln33_25_reg_1806_pp0_iter3_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter5_reg;
reg   [31:0] reg_363;
reg   [0:0] icmp_ln49_reg_1982;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter8_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter8_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter9_reg;
reg   [4:0] h_4_reg_1637;
reg   [2:0] och_2_reg_1644;
reg   [11:0] indvar_flatten134_load_reg_1649;
wire   [1:0] empty_fu_406_p1;
reg   [1:0] empty_reg_1654;
wire   [3:0] p_shl3_fu_410_p3;
reg   [3:0] p_shl3_reg_1659;
wire  signed [4:0] empty_143_fu_422_p2;
reg  signed [4:0] empty_143_reg_1664;
wire   [0:0] icmp_ln31_fu_476_p2;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter1_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter2_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter3_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter4_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter5_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter6_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter7_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter8_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter9_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter10_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter11_reg;
reg   [0:0] icmp_ln31_reg_1670_pp0_iter12_reg;
reg   [9:0] indvar_flatten_load_reg_1674;
wire   [2:0] add_ln31_fu_488_p2;
reg   [2:0] add_ln31_reg_1679;
wire   [0:0] icmp_ln33_fu_494_p2;
reg   [0:0] icmp_ln33_reg_1684;
reg   [0:0] icmp_ln33_reg_1684_pp0_iter1_reg;
reg   [0:0] icmp_ln33_reg_1684_pp0_iter2_reg;
wire   [4:0] select_ln31_fu_500_p3;
reg   [4:0] select_ln31_reg_1698;
wire   [1:0] empty_162_fu_512_p1;
reg   [1:0] empty_162_reg_1704;
wire   [3:0] p_shl3_mid1_fu_516_p3;
reg   [3:0] p_shl3_mid1_reg_1709;
wire  signed [4:0] p_mid152_fu_528_p2;
reg  signed [4:0] p_mid152_reg_1714;
wire   [5:0] select_ln31_33_fu_556_p3;
reg   [5:0] select_ln31_33_reg_1720;
wire   [0:0] xor_ln31_fu_572_p2;
reg   [0:0] xor_ln31_reg_1727;
wire   [0:0] and_ln31_2_fu_584_p2;
reg   [0:0] and_ln31_2_reg_1732;
reg   [0:0] and_ln31_2_reg_1732_pp0_iter1_reg;
reg   [0:0] and_ln31_2_reg_1732_pp0_iter2_reg;
wire   [4:0] p_dup7_fu_590_p2;
reg   [4:0] p_dup7_reg_1743;
wire   [4:0] select_ln33_fu_602_p3;
reg   [4:0] select_ln33_reg_1750;
wire   [9:0] select_ln33_22_fu_636_p3;
reg   [9:0] select_ln33_22_reg_1758;
wire   [5:0] empty_155_fu_760_p2;
reg   [5:0] empty_155_reg_1765;
reg   [5:0] empty_155_reg_1765_pp0_iter1_reg;
reg   [5:0] empty_155_reg_1765_pp0_iter2_reg;
wire   [5:0] select_ln31_31_fu_858_p3;
reg   [5:0] select_ln31_31_reg_1770;
wire   [5:0] select_ln31_32_fu_892_p3;
reg   [5:0] select_ln31_32_reg_1777;
wire   [5:0] p_mid111_fu_1011_p2;
reg   [5:0] p_mid111_reg_1794;
reg   [5:0] p_mid111_reg_1794_pp0_iter1_reg;
reg   [5:0] p_mid111_reg_1794_pp0_iter2_reg;
wire   [9:0] select_ln33_21_fu_1047_p3;
reg   [9:0] select_ln33_21_reg_1799;
wire   [0:0] select_ln33_25_fu_1062_p3;
reg   [0:0] select_ln33_25_reg_1806_pp0_iter1_reg;
reg   [0:0] select_ln33_25_reg_1806_pp0_iter2_reg;
reg   [0:0] select_ln33_25_reg_1806_pp0_iter4_reg;
wire   [9:0] trunc_ln46_cast18_fu_1072_p1;
reg   [9:0] trunc_ln46_cast18_reg_1812;
wire  signed [5:0] add_ln46_fu_1078_p2;
reg  signed [5:0] add_ln46_reg_1818;
reg  signed [5:0] add_ln46_reg_1818_pp0_iter1_reg;
reg  signed [5:0] add_ln46_reg_1818_pp0_iter2_reg;
wire  signed [9:0] sext_ln49_fu_1084_p1;
reg  signed [9:0] sext_ln49_reg_1823;
reg   [0:0] tmp_6_reg_1829_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter2_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter3_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter4_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter6_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter7_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter8_reg;
reg   [0:0] tmp_6_reg_1829_pp0_iter9_reg;
wire   [11:0] add_ln65_fu_1116_p2;
reg   [11:0] add_ln65_reg_1845;
reg   [11:0] add_ln65_reg_1845_pp0_iter1_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter2_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter3_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter4_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter5_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter6_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter7_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter8_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter9_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter10_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter11_reg;
reg   [11:0] add_ln65_reg_1845_pp0_iter12_reg;
reg   [31:0] x_load_45_reg_1870;
wire   [0:0] select_ln33_23_fu_1239_p3;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter1_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter2_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter3_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter4_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter5_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter6_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter7_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter10_reg;
reg   [0:0] select_ln33_23_reg_1885_pp0_iter11_reg;
wire   [4:0] add_ln46_2_fu_1279_p2;
reg   [4:0] add_ln46_2_reg_1892;
wire   [9:0] add_ln54_6_fu_1308_p2;
reg   [9:0] add_ln54_6_reg_1907;
wire   [9:0] add_ln54_7_fu_1313_p2;
reg   [9:0] add_ln54_7_reg_1912;
wire   [9:0] add_ln54_8_fu_1318_p2;
reg   [9:0] add_ln54_8_reg_1917;
wire   [2:0] select_ln31_30_fu_1334_p3;
reg   [2:0] select_ln31_30_reg_1922;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter2_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter3_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter4_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter5_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter6_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter7_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter8_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter9_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter10_reg;
reg   [2:0] select_ln31_30_reg_1922_pp0_iter11_reg;
wire   [31:0] bitcast_ln31_44_fu_1353_p1;
wire   [31:0] bitcast_ln31_45_fu_1358_p1;
wire   [31:0] bitcast_ln57_fu_1368_p1;
wire   [31:0] bitcast_ln57_1_fu_1373_p1;
wire   [31:0] bitcast_ln31_42_fu_1423_p1;
wire   [31:0] bitcast_ln31_43_fu_1428_p1;
wire   [0:0] icmp_ln49_fu_1433_p2;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter2_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter3_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter4_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter5_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter6_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter7_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter9_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter10_reg;
reg   [0:0] icmp_ln49_reg_1982_pp0_iter11_reg;
wire   [31:0] bitcast_ln57_2_fu_1438_p1;
wire   [31:0] bitcast_ln57_3_fu_1443_p1;
wire   [31:0] bitcast_ln31_37_fu_1452_p1;
reg   [31:0] weight0_load_1_reg_2009;
wire   [31:0] bitcast_ln31_41_fu_1457_p1;
wire   [31:0] bitcast_ln57_4_fu_1462_p1;
wire   [31:0] bitcast_ln57_5_fu_1466_p1;
wire   [31:0] bitcast_ln31_39_fu_1471_p1;
wire   [31:0] bitcast_ln31_40_fu_1476_p1;
reg   [31:0] mul_reg_2039;
reg   [31:0] mul_0_0_1_reg_2044;
reg   [31:0] mul_0_0_1_reg_2044_pp0_iter2_reg;
wire   [31:0] bitcast_ln57_6_fu_1481_p1;
wire   [31:0] bitcast_ln57_7_fu_1486_p1;
wire   [31:0] bitcast_ln31_38_fu_1491_p1;
reg   [31:0] mul_0_0_2_reg_2064;
reg   [31:0] mul_0_0_2_reg_2064_pp0_iter2_reg;
reg   [31:0] mul_0_0_2_reg_2064_pp0_iter3_reg;
reg   [31:0] mul_0_1_reg_2069;
reg   [31:0] mul_0_1_reg_2069_pp0_iter2_reg;
reg   [31:0] mul_0_1_reg_2069_pp0_iter3_reg;
reg   [31:0] mul_0_1_reg_2069_pp0_iter4_reg;
wire   [31:0] bitcast_ln57_8_fu_1495_p1;
reg   [31:0] mul_0_1_1_reg_2079;
reg   [31:0] mul_0_1_1_reg_2079_pp0_iter3_reg;
reg   [31:0] mul_0_1_1_reg_2079_pp0_iter4_reg;
reg   [31:0] mul_0_1_1_reg_2079_pp0_iter5_reg;
reg   [31:0] mul_0_1_1_reg_2079_pp0_iter6_reg;
reg   [31:0] mul_0_1_2_reg_2084;
reg   [31:0] mul_0_1_2_reg_2084_pp0_iter3_reg;
reg   [31:0] mul_0_1_2_reg_2084_pp0_iter4_reg;
reg   [31:0] mul_0_1_2_reg_2084_pp0_iter5_reg;
reg   [31:0] mul_0_1_2_reg_2084_pp0_iter6_reg;
reg   [31:0] mul_0_1_2_reg_2084_pp0_iter7_reg;
reg   [31:0] mul_0_2_reg_2089;
reg   [31:0] mul_0_2_reg_2089_pp0_iter3_reg;
reg   [31:0] mul_0_2_reg_2089_pp0_iter4_reg;
reg   [31:0] mul_0_2_reg_2089_pp0_iter5_reg;
reg   [31:0] mul_0_2_reg_2089_pp0_iter6_reg;
reg   [31:0] mul_0_2_reg_2089_pp0_iter7_reg;
reg   [31:0] mul_0_2_reg_2089_pp0_iter8_reg;
reg   [31:0] mul_0_2_1_reg_2094;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter3_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter4_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter5_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter6_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter7_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter8_reg;
reg   [31:0] mul_0_2_1_reg_2094_pp0_iter9_reg;
reg   [31:0] mul_0_2_2_reg_2099;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter3_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter5_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter6_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter7_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter8_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter9_reg;
reg   [31:0] mul_0_2_2_reg_2099_pp0_iter10_reg;
wire   [31:0] select_ln49_fu_1525_p3;
reg   [31:0] select_ln49_reg_2104;
reg   [31:0] select_ln49_reg_2104_pp0_iter3_reg;
wire   [31:0] select_ln49_28_fu_1533_p3;
reg   [31:0] select_ln49_28_reg_2110;
reg   [31:0] select_ln49_28_reg_2110_pp0_iter5_reg;
wire   [31:0] select_ln49_29_fu_1543_p3;
reg   [31:0] select_ln49_29_reg_2116;
reg   [31:0] select_ln49_29_reg_2116_pp0_iter6_reg;
wire   [31:0] select_ln49_30_fu_1550_p3;
reg   [31:0] select_ln49_30_reg_2122;
reg   [31:0] sum_9_0_1_1_reg_2127;
reg   [31:0] sum_9_0_1_1_reg_2127_pp0_iter8_reg;
wire   [31:0] select_ln49_31_fu_1556_p3;
reg   [31:0] select_ln49_31_reg_2133;
reg   [31:0] select_ln49_31_reg_2133_pp0_iter9_reg;
reg   [31:0] select_ln49_31_reg_2133_pp0_iter10_reg;
wire   [31:0] select_ln49_32_fu_1566_p3;
reg   [31:0] select_ln49_32_reg_2140;
wire   [31:0] sum_3_0_2_1_fu_1573_p3;
reg   [31:0] sum_3_0_2_1_reg_2145;
reg   [31:0] sum_3_0_2_1_reg_2145_pp0_iter12_reg;
reg   [31:0] bias0_load_reg_2156;
wire   [31:0] select_ln49_33_fu_1587_p3;
reg   [31:0] select_ln49_33_reg_2161;
wire   [31:0] bitcast_ln31_fu_1594_p1;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] zext_ln31_45_fu_904_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln31_46_fu_909_p1;
wire   [63:0] zext_ln57_29_fu_1101_p1;
wire   [63:0] zext_ln57_30_fu_1111_p1;
wire   [63:0] zext_ln31_43_fu_1122_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln31_44_fu_1131_p1;
wire   [63:0] zext_ln57_fu_1140_p1;
wire   [63:0] zext_ln57_27_fu_1149_p1;
wire   [63:0] zext_ln31_38_fu_1201_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln31_42_fu_1211_p1;
wire   [63:0] zext_ln57_28_fu_1293_p1;
wire   [63:0] zext_ln57_31_fu_1303_p1;
wire   [63:0] zext_ln31_40_fu_1344_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln31_41_fu_1349_p1;
wire   [63:0] zext_ln57_32_fu_1378_p1;
wire   [63:0] zext_ln57_33_fu_1382_p1;
wire   [63:0] zext_ln31_39_fu_1418_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln57_34_fu_1448_p1;
wire   [63:0] zext_ln31_37_fu_1579_p1;
wire   [63:0] zext_ln65_fu_1598_p1;
reg   [4:0] w_fu_102;
wire    ap_loop_init;
reg   [4:0] h_fu_106;
wire   [4:0] select_ln33_26_fu_1363_p3;
reg   [9:0] indvar_flatten_fu_110;
wire   [9:0] select_ln33_27_fu_1391_p3;
reg   [2:0] och_fu_114;
reg   [11:0] indvar_flatten134_fu_118;
wire   [11:0] add_ln31_27_fu_1191_p2;
reg   [31:0] grp_fu_310_p0;
reg   [31:0] grp_fu_310_p1;
reg   [31:0] grp_fu_315_p0;
reg   [31:0] grp_fu_315_p1;
reg   [31:0] grp_fu_319_p0;
reg   [31:0] grp_fu_319_p1;
reg   [31:0] grp_fu_323_p0;
reg   [31:0] grp_fu_323_p1;
wire   [4:0] p_shl3_cast2_fu_418_p1;
wire   [4:0] zext_ln31_3_fu_402_p1;
wire   [3:0] empty_144_fu_432_p1;
wire   [5:0] p_shl9_fu_436_p3;
wire  signed [5:0] p_cast_fu_428_p1;
wire   [6:0] p_shl11_0_1_fu_458_p3;
wire   [9:0] p_shl10_0_1_fu_450_p3;
wire   [9:0] p_shl11_0_1_cast_fu_466_p1;
wire   [4:0] p_shl3_cast2_mid1_fu_524_p1;
wire   [4:0] zext_ln31_fu_508_p1;
wire   [3:0] empty_163_fu_538_p1;
wire   [5:0] p_shl9_0_0_mid1_fu_542_p3;
wire  signed [5:0] p_cast_mid1_fu_534_p1;
wire   [5:0] p_mid154_fu_550_p2;
wire   [5:0] empty_145_fu_444_p2;
wire   [9:0] empty_158_fu_470_p2;
wire   [0:0] icmp_ln35_fu_578_p2;
wire   [0:0] or_ln33_fu_596_p2;
wire   [6:0] p_shl11_0_1_mid1_fu_618_p3;
wire   [9:0] p_shl10_0_1_mid1_fu_610_p3;
wire   [9:0] p_shl11_0_1_cast_mid1_fu_626_p1;
wire   [9:0] p_mid117_fu_630_p2;
wire   [9:0] select_ln31_37_fu_564_p3;
wire   [6:0] p_shl_fu_644_p3;
wire   [7:0] p_shl_cast_fu_651_p1;
wire   [7:0] p_shl3_cast_fu_655_p1;
wire  signed [4:0] empty_146_fu_664_p2;
wire   [3:0] empty_147_fu_673_p1;
wire   [5:0] p_shl9_0_1_fu_677_p3;
wire  signed [5:0] p_cast4_fu_669_p1;
wire  signed [4:0] empty_149_fu_691_p2;
wire   [3:0] empty_150_fu_700_p1;
wire   [5:0] p_shl9_0_2_fu_704_p3;
wire  signed [5:0] p_cast5_fu_696_p1;
wire   [7:0] zext_ln33_5_fu_721_p1;
wire   [7:0] empty_142_fu_658_p2;
wire   [7:0] empty_152_fu_724_p2;
wire   [6:0] empty_153_fu_730_p1;
wire   [9:0] p_shl5_fu_742_p3;
wire   [11:0] p_shl4_fu_734_p3;
wire  signed [11:0] p_shl5_cast_fu_750_p1;
wire   [5:0] zext_ln33_4_fu_718_p1;
wire   [4:0] empty_156_fu_766_p1;
wire   [7:0] p_shl11_fu_778_p3;
wire   [9:0] p_shl10_fu_770_p3;
wire  signed [9:0] p_shl11_0_0_cast_fu_786_p1;
wire   [6:0] p_shl_mid1_fu_804_p3;
wire   [7:0] p_shl_cast_mid1_fu_811_p1;
wire   [7:0] p_shl3_cast_mid1_fu_815_p1;
wire   [7:0] p_mid148_fu_818_p2;
wire  signed [4:0] p_mid156_fu_831_p2;
wire   [3:0] empty_164_fu_840_p1;
wire   [5:0] p_shl9_0_1_mid1_fu_844_p3;
wire  signed [5:0] p_cast4_mid1_fu_836_p1;
wire   [5:0] p_mid158_fu_852_p2;
wire   [5:0] empty_148_fu_685_p2;
wire  signed [4:0] p_mid160_fu_865_p2;
wire   [3:0] empty_165_fu_874_p1;
wire   [5:0] p_shl9_0_2_mid1_fu_878_p3;
wire  signed [5:0] p_cast5_mid1_fu_870_p1;
wire   [5:0] p_mid162_fu_886_p2;
wire   [5:0] empty_151_fu_712_p2;
wire   [5:0] add_ln31_26_fu_899_p2;
wire   [6:0] empty_166_fu_913_p1;
wire   [9:0] p_shl5_mid_fu_925_p3;
wire   [11:0] p_shl4_mid_fu_917_p3;
wire  signed [11:0] p_shl5_cast_mid182_fu_933_p1;
wire   [11:0] p_mid184_fu_937_p2;
wire   [11:0] empty_154_fu_754_p2;
wire   [9:0] empty_157_fu_790_p2;
wire   [0:0] tmp_fu_796_p3;
wire   [7:0] zext_ln33_6_fu_965_p1;
wire   [7:0] select_ln31_29_fu_824_p3;
wire   [7:0] p_mid1_fu_968_p2;
wire   [6:0] empty_167_fu_974_p1;
wire   [9:0] p_shl5_mid1_fu_986_p3;
wire   [11:0] p_shl4_mid1_fu_978_p3;
wire  signed [11:0] p_shl5_cast_mid1_fu_994_p1;
wire   [11:0] p_mid19_fu_998_p2;
wire   [11:0] select_ln31_34_fu_943_p3;
wire   [5:0] zext_ln33_fu_962_p1;
wire   [4:0] empty_168_fu_1017_p1;
wire   [7:0] p_shl11_0_0_mid1_fu_1029_p3;
wire   [9:0] p_shl10_0_0_mid1_fu_1021_p3;
wire  signed [9:0] p_shl11_0_0_cast_mid1_fu_1037_p1;
wire   [9:0] p_mid115_fu_1041_p2;
wire   [9:0] select_ln31_36_fu_950_p3;
wire   [0:0] tmp_4_fu_1054_p3;
wire   [0:0] or_ln31_fu_957_p2;
wire   [5:0] trunc_ln46_cast_fu_1075_p1;
wire   [9:0] add_ln54_3_fu_1096_p2;
wire   [9:0] add_ln54_4_fu_1106_p2;
wire   [11:0] trunc_ln46_cast20_fu_1069_p1;
wire   [11:0] select_ln33_19_fu_1004_p3;
wire   [5:0] add_ln31_25_fu_1126_p2;
wire   [9:0] add_ln54_fu_1136_p2;
wire   [9:0] add_ln54_1_fu_1145_p2;
wire   [4:0] empty_159_fu_1154_p2;
wire   [6:0] p_shl11_0_2_fu_1173_p3;
wire   [9:0] p_shl10_0_2_fu_1165_p3;
wire   [9:0] p_shl11_0_2_cast_fu_1181_p1;
wire   [5:0] add_ln31_21_fu_1196_p2;
wire   [5:0] add_ln31_24_fu_1206_p2;
wire   [0:0] cmp25_0_2_fu_1159_p2;
wire   [9:0] empty_160_fu_1185_p2;
wire   [4:0] p_mid119_fu_1228_p2;
wire   [0:0] cmp25_0_2_mid1_fu_1233_p2;
wire   [0:0] and_ln31_fu_1216_p2;
wire   [6:0] p_shl11_0_2_mid1_fu_1254_p3;
wire   [9:0] p_shl10_0_2_mid1_fu_1246_p3;
wire   [9:0] p_shl11_0_2_cast_mid1_fu_1262_p1;
wire   [9:0] p_mid121_fu_1266_p2;
wire   [9:0] select_ln31_38_fu_1221_p3;
wire   [9:0] zext_ln49_fu_1284_p1;
wire   [9:0] add_ln54_2_fu_1288_p2;
wire   [9:0] add_ln54_5_fu_1298_p2;
wire   [9:0] select_ln33_24_fu_1272_p3;
wire   [5:0] add_ln31_23_fu_1339_p2;
wire   [9:0] add_ln33_fu_1386_p2;
wire   [5:0] add_ln31_22_fu_1413_p2;
wire   [5:0] select_ln31_35_fu_1500_p3;
wire   [5:0] select_ln33_20_fu_1506_p3;
wire   [5:0] or_ln49_fu_1512_p2;
wire   [0:0] tmp_5_fu_1517_p3;
wire   [0:0] or_ln49_4_fu_1539_p2;
wire   [0:0] or_ln49_5_fu_1562_p2;
wire   [0:0] or_ln49_6_fu_1583_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter12_stage2;
reg    ap_idle_pp0_0to11;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to13;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            h_fu_106 <= 5'd0;
        end else if (((icmp_ln31_reg_1670 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            h_fu_106 <= select_ln33_26_fu_1363_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten134_fu_118 <= 12'd0;
    end else if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        indvar_flatten134_fu_118 <= add_ln31_27_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_110 <= 10'd0;
        end else if (((icmp_ln31_reg_1670 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_110 <= select_ln33_27_fu_1391_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            och_fu_114 <= 3'd0;
        end else if (((icmp_ln31_reg_1670 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            och_fu_114 <= select_ln31_30_fu_1334_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln33_23_reg_1885 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_335 <= x_q1;
    end else if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_335 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln33_23_reg_1885 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_340 <= weight0_q1;
    end else if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_reg_1829 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reg_340 <= weight0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln33_23_reg_1885 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_345 <= weight0_q0;
    end else if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reg_345 <= weight0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_354 <= x_q0;
    end else if ((((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln33_25_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_354 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_fu_102 <= 5'd0;
    end else if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        w_fu_102 <= add_ln46_2_fu_1279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln31_fu_476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln31_reg_1679 <= add_ln31_fu_488_p2;
        and_ln31_2_reg_1732 <= and_ln31_2_fu_584_p2;
        empty_162_reg_1704 <= empty_162_fu_512_p1;
        icmp_ln33_reg_1684 <= icmp_ln33_fu_494_p2;
        indvar_flatten_load_reg_1674 <= indvar_flatten_fu_110;
        p_dup7_reg_1743 <= p_dup7_fu_590_p2;
        p_mid152_reg_1714 <= p_mid152_fu_528_p2;
        p_shl3_mid1_reg_1709[3 : 2] <= p_shl3_mid1_fu_516_p3[3 : 2];
        select_ln31_33_reg_1720 <= select_ln31_33_fu_556_p3;
        select_ln31_reg_1698 <= select_ln31_fu_500_p3;
        select_ln33_22_reg_1758[9 : 2] <= select_ln33_22_fu_636_p3[9 : 2];
        select_ln33_reg_1750 <= select_ln33_fu_602_p3;
        xor_ln31_reg_1727 <= xor_ln31_fu_572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln46_2_reg_1892 <= add_ln46_2_fu_1279_p2;
        add_ln54_6_reg_1907 <= add_ln54_6_fu_1308_p2;
        add_ln54_7_reg_1912 <= add_ln54_7_fu_1313_p2;
        add_ln54_8_reg_1917 <= add_ln54_8_fu_1318_p2;
        select_ln33_23_reg_1885 <= select_ln33_23_fu_1239_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1818 <= add_ln46_fu_1078_p2;
        add_ln65_reg_1845 <= add_ln65_fu_1116_p2;
        p_mid111_reg_1794 <= p_mid111_fu_1011_p2;
        select_ln31_31_reg_1770 <= select_ln31_31_fu_858_p3;
        select_ln31_32_reg_1777 <= select_ln31_32_fu_892_p3;
        select_ln33_21_reg_1799[9 : 2] <= select_ln33_21_fu_1047_p3[9 : 2];
        select_ln33_25_reg_1806 <= select_ln33_25_fu_1062_p3;
        sext_ln49_reg_1823 <= sext_ln49_fu_1084_p1;
        tmp_6_reg_1829 <= add_ln46_fu_1078_p2[32'd5];
        trunc_ln46_cast18_reg_1812[4 : 0] <= trunc_ln46_cast18_fu_1072_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1818_pp0_iter1_reg <= add_ln46_reg_1818;
        add_ln46_reg_1818_pp0_iter2_reg <= add_ln46_reg_1818_pp0_iter1_reg;
        add_ln65_reg_1845_pp0_iter10_reg <= add_ln65_reg_1845_pp0_iter9_reg;
        add_ln65_reg_1845_pp0_iter11_reg <= add_ln65_reg_1845_pp0_iter10_reg;
        add_ln65_reg_1845_pp0_iter12_reg <= add_ln65_reg_1845_pp0_iter11_reg;
        add_ln65_reg_1845_pp0_iter1_reg <= add_ln65_reg_1845;
        add_ln65_reg_1845_pp0_iter2_reg <= add_ln65_reg_1845_pp0_iter1_reg;
        add_ln65_reg_1845_pp0_iter3_reg <= add_ln65_reg_1845_pp0_iter2_reg;
        add_ln65_reg_1845_pp0_iter4_reg <= add_ln65_reg_1845_pp0_iter3_reg;
        add_ln65_reg_1845_pp0_iter5_reg <= add_ln65_reg_1845_pp0_iter4_reg;
        add_ln65_reg_1845_pp0_iter6_reg <= add_ln65_reg_1845_pp0_iter5_reg;
        add_ln65_reg_1845_pp0_iter7_reg <= add_ln65_reg_1845_pp0_iter6_reg;
        add_ln65_reg_1845_pp0_iter8_reg <= add_ln65_reg_1845_pp0_iter7_reg;
        add_ln65_reg_1845_pp0_iter9_reg <= add_ln65_reg_1845_pp0_iter8_reg;
        bias0_load_reg_2156 <= bias0_q0;
        empty_155_reg_1765 <= empty_155_fu_760_p2;
        empty_155_reg_1765_pp0_iter1_reg <= empty_155_reg_1765;
        empty_155_reg_1765_pp0_iter2_reg <= empty_155_reg_1765_pp0_iter1_reg;
        mul_0_2_2_reg_2099_pp0_iter10_reg <= mul_0_2_2_reg_2099_pp0_iter9_reg;
        mul_0_2_2_reg_2099_pp0_iter3_reg <= mul_0_2_2_reg_2099;
        mul_0_2_2_reg_2099_pp0_iter4_reg <= mul_0_2_2_reg_2099_pp0_iter3_reg;
        mul_0_2_2_reg_2099_pp0_iter5_reg <= mul_0_2_2_reg_2099_pp0_iter4_reg;
        mul_0_2_2_reg_2099_pp0_iter6_reg <= mul_0_2_2_reg_2099_pp0_iter5_reg;
        mul_0_2_2_reg_2099_pp0_iter7_reg <= mul_0_2_2_reg_2099_pp0_iter6_reg;
        mul_0_2_2_reg_2099_pp0_iter8_reg <= mul_0_2_2_reg_2099_pp0_iter7_reg;
        mul_0_2_2_reg_2099_pp0_iter9_reg <= mul_0_2_2_reg_2099_pp0_iter8_reg;
        p_mid111_reg_1794_pp0_iter1_reg <= p_mid111_reg_1794;
        p_mid111_reg_1794_pp0_iter2_reg <= p_mid111_reg_1794_pp0_iter1_reg;
        select_ln33_25_reg_1806_pp0_iter1_reg <= select_ln33_25_reg_1806;
        select_ln33_25_reg_1806_pp0_iter2_reg <= select_ln33_25_reg_1806_pp0_iter1_reg;
        select_ln33_25_reg_1806_pp0_iter3_reg <= select_ln33_25_reg_1806_pp0_iter2_reg;
        select_ln33_25_reg_1806_pp0_iter4_reg <= select_ln33_25_reg_1806_pp0_iter3_reg;
        select_ln49_30_reg_2122 <= select_ln49_30_fu_1550_p3;
        sum_9_0_1_1_reg_2127_pp0_iter8_reg <= sum_9_0_1_1_reg_2127;
        tmp_6_reg_1829_pp0_iter1_reg <= tmp_6_reg_1829;
        tmp_6_reg_1829_pp0_iter2_reg <= tmp_6_reg_1829_pp0_iter1_reg;
        tmp_6_reg_1829_pp0_iter3_reg <= tmp_6_reg_1829_pp0_iter2_reg;
        tmp_6_reg_1829_pp0_iter4_reg <= tmp_6_reg_1829_pp0_iter3_reg;
        tmp_6_reg_1829_pp0_iter5_reg <= tmp_6_reg_1829_pp0_iter4_reg;
        tmp_6_reg_1829_pp0_iter6_reg <= tmp_6_reg_1829_pp0_iter5_reg;
        tmp_6_reg_1829_pp0_iter7_reg <= tmp_6_reg_1829_pp0_iter6_reg;
        tmp_6_reg_1829_pp0_iter8_reg <= tmp_6_reg_1829_pp0_iter7_reg;
        tmp_6_reg_1829_pp0_iter9_reg <= tmp_6_reg_1829_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln31_2_reg_1732_pp0_iter1_reg <= and_ln31_2_reg_1732;
        and_ln31_2_reg_1732_pp0_iter2_reg <= and_ln31_2_reg_1732_pp0_iter1_reg;
        empty_143_reg_1664 <= empty_143_fu_422_p2;
        empty_reg_1654 <= empty_fu_406_p1;
        h_4_reg_1637 <= h_fu_106;
        icmp_ln31_reg_1670 <= icmp_ln31_fu_476_p2;
        icmp_ln31_reg_1670_pp0_iter10_reg <= icmp_ln31_reg_1670_pp0_iter9_reg;
        icmp_ln31_reg_1670_pp0_iter11_reg <= icmp_ln31_reg_1670_pp0_iter10_reg;
        icmp_ln31_reg_1670_pp0_iter12_reg <= icmp_ln31_reg_1670_pp0_iter11_reg;
        icmp_ln31_reg_1670_pp0_iter1_reg <= icmp_ln31_reg_1670;
        icmp_ln31_reg_1670_pp0_iter2_reg <= icmp_ln31_reg_1670_pp0_iter1_reg;
        icmp_ln31_reg_1670_pp0_iter3_reg <= icmp_ln31_reg_1670_pp0_iter2_reg;
        icmp_ln31_reg_1670_pp0_iter4_reg <= icmp_ln31_reg_1670_pp0_iter3_reg;
        icmp_ln31_reg_1670_pp0_iter5_reg <= icmp_ln31_reg_1670_pp0_iter4_reg;
        icmp_ln31_reg_1670_pp0_iter6_reg <= icmp_ln31_reg_1670_pp0_iter5_reg;
        icmp_ln31_reg_1670_pp0_iter7_reg <= icmp_ln31_reg_1670_pp0_iter6_reg;
        icmp_ln31_reg_1670_pp0_iter8_reg <= icmp_ln31_reg_1670_pp0_iter7_reg;
        icmp_ln31_reg_1670_pp0_iter9_reg <= icmp_ln31_reg_1670_pp0_iter8_reg;
        icmp_ln33_reg_1684_pp0_iter1_reg <= icmp_ln33_reg_1684;
        icmp_ln33_reg_1684_pp0_iter2_reg <= icmp_ln33_reg_1684_pp0_iter1_reg;
        icmp_ln49_reg_1982 <= icmp_ln49_fu_1433_p2;
        icmp_ln49_reg_1982_pp0_iter10_reg <= icmp_ln49_reg_1982_pp0_iter9_reg;
        icmp_ln49_reg_1982_pp0_iter11_reg <= icmp_ln49_reg_1982_pp0_iter10_reg;
        icmp_ln49_reg_1982_pp0_iter2_reg <= icmp_ln49_reg_1982;
        icmp_ln49_reg_1982_pp0_iter3_reg <= icmp_ln49_reg_1982_pp0_iter2_reg;
        icmp_ln49_reg_1982_pp0_iter4_reg <= icmp_ln49_reg_1982_pp0_iter3_reg;
        icmp_ln49_reg_1982_pp0_iter5_reg <= icmp_ln49_reg_1982_pp0_iter4_reg;
        icmp_ln49_reg_1982_pp0_iter6_reg <= icmp_ln49_reg_1982_pp0_iter5_reg;
        icmp_ln49_reg_1982_pp0_iter7_reg <= icmp_ln49_reg_1982_pp0_iter6_reg;
        icmp_ln49_reg_1982_pp0_iter8_reg <= icmp_ln49_reg_1982_pp0_iter7_reg;
        icmp_ln49_reg_1982_pp0_iter9_reg <= icmp_ln49_reg_1982_pp0_iter8_reg;
        indvar_flatten134_load_reg_1649 <= indvar_flatten134_fu_118;
        mul_0_2_1_reg_2094_pp0_iter3_reg <= mul_0_2_1_reg_2094;
        mul_0_2_1_reg_2094_pp0_iter4_reg <= mul_0_2_1_reg_2094_pp0_iter3_reg;
        mul_0_2_1_reg_2094_pp0_iter5_reg <= mul_0_2_1_reg_2094_pp0_iter4_reg;
        mul_0_2_1_reg_2094_pp0_iter6_reg <= mul_0_2_1_reg_2094_pp0_iter5_reg;
        mul_0_2_1_reg_2094_pp0_iter7_reg <= mul_0_2_1_reg_2094_pp0_iter6_reg;
        mul_0_2_1_reg_2094_pp0_iter8_reg <= mul_0_2_1_reg_2094_pp0_iter7_reg;
        mul_0_2_1_reg_2094_pp0_iter9_reg <= mul_0_2_1_reg_2094_pp0_iter8_reg;
        mul_0_2_reg_2089_pp0_iter3_reg <= mul_0_2_reg_2089;
        mul_0_2_reg_2089_pp0_iter4_reg <= mul_0_2_reg_2089_pp0_iter3_reg;
        mul_0_2_reg_2089_pp0_iter5_reg <= mul_0_2_reg_2089_pp0_iter4_reg;
        mul_0_2_reg_2089_pp0_iter6_reg <= mul_0_2_reg_2089_pp0_iter5_reg;
        mul_0_2_reg_2089_pp0_iter7_reg <= mul_0_2_reg_2089_pp0_iter6_reg;
        mul_0_2_reg_2089_pp0_iter8_reg <= mul_0_2_reg_2089_pp0_iter7_reg;
        och_2_reg_1644 <= och_fu_114;
        p_shl3_reg_1659[3 : 2] <= p_shl3_fu_410_p3[3 : 2];
        select_ln49_29_reg_2116 <= select_ln49_29_fu_1543_p3;
        select_ln49_29_reg_2116_pp0_iter6_reg <= select_ln49_29_reg_2116;
        select_ln49_33_reg_2161 <= select_ln49_33_fu_1587_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (select_ln33_25_reg_1806_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_0_1_reg_2044 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_0_1_reg_2044_pp0_iter2_reg <= mul_0_0_1_reg_2044;
        select_ln49_31_reg_2133 <= select_ln49_31_fu_1556_p3;
        select_ln49_31_reg_2133_pp0_iter10_reg <= select_ln49_31_reg_2133_pp0_iter9_reg;
        select_ln49_31_reg_2133_pp0_iter9_reg <= select_ln49_31_reg_2133;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_0_2_reg_2064 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_0_2_reg_2064_pp0_iter2_reg <= mul_0_0_2_reg_2064;
        mul_0_0_2_reg_2064_pp0_iter3_reg <= mul_0_0_2_reg_2064_pp0_iter2_reg;
        mul_0_1_reg_2069_pp0_iter2_reg <= mul_0_1_reg_2069;
        mul_0_1_reg_2069_pp0_iter3_reg <= mul_0_1_reg_2069_pp0_iter2_reg;
        mul_0_1_reg_2069_pp0_iter4_reg <= mul_0_1_reg_2069_pp0_iter3_reg;
        select_ln33_23_reg_1885_pp0_iter10_reg <= select_ln33_23_reg_1885_pp0_iter9_reg;
        select_ln33_23_reg_1885_pp0_iter11_reg <= select_ln33_23_reg_1885_pp0_iter10_reg;
        select_ln33_23_reg_1885_pp0_iter1_reg <= select_ln33_23_reg_1885;
        select_ln33_23_reg_1885_pp0_iter2_reg <= select_ln33_23_reg_1885_pp0_iter1_reg;
        select_ln33_23_reg_1885_pp0_iter3_reg <= select_ln33_23_reg_1885_pp0_iter2_reg;
        select_ln33_23_reg_1885_pp0_iter4_reg <= select_ln33_23_reg_1885_pp0_iter3_reg;
        select_ln33_23_reg_1885_pp0_iter5_reg <= select_ln33_23_reg_1885_pp0_iter4_reg;
        select_ln33_23_reg_1885_pp0_iter6_reg <= select_ln33_23_reg_1885_pp0_iter5_reg;
        select_ln33_23_reg_1885_pp0_iter7_reg <= select_ln33_23_reg_1885_pp0_iter6_reg;
        select_ln33_23_reg_1885_pp0_iter8_reg <= select_ln33_23_reg_1885_pp0_iter7_reg;
        select_ln33_23_reg_1885_pp0_iter9_reg <= select_ln33_23_reg_1885_pp0_iter8_reg;
        select_ln49_reg_2104 <= select_ln49_fu_1525_p3;
        select_ln49_reg_2104_pp0_iter3_reg <= select_ln49_reg_2104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_0_1_1_reg_2079 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_0_1_1_reg_2079_pp0_iter3_reg <= mul_0_1_1_reg_2079;
        mul_0_1_1_reg_2079_pp0_iter4_reg <= mul_0_1_1_reg_2079_pp0_iter3_reg;
        mul_0_1_1_reg_2079_pp0_iter5_reg <= mul_0_1_1_reg_2079_pp0_iter4_reg;
        mul_0_1_1_reg_2079_pp0_iter6_reg <= mul_0_1_1_reg_2079_pp0_iter5_reg;
        mul_0_1_2_reg_2084_pp0_iter3_reg <= mul_0_1_2_reg_2084;
        mul_0_1_2_reg_2084_pp0_iter4_reg <= mul_0_1_2_reg_2084_pp0_iter3_reg;
        mul_0_1_2_reg_2084_pp0_iter5_reg <= mul_0_1_2_reg_2084_pp0_iter4_reg;
        mul_0_1_2_reg_2084_pp0_iter6_reg <= mul_0_1_2_reg_2084_pp0_iter5_reg;
        mul_0_1_2_reg_2084_pp0_iter7_reg <= mul_0_1_2_reg_2084_pp0_iter6_reg;
        select_ln31_30_reg_1922_pp0_iter10_reg <= select_ln31_30_reg_1922_pp0_iter9_reg;
        select_ln31_30_reg_1922_pp0_iter11_reg <= select_ln31_30_reg_1922_pp0_iter10_reg;
        select_ln31_30_reg_1922_pp0_iter2_reg <= select_ln31_30_reg_1922;
        select_ln31_30_reg_1922_pp0_iter3_reg <= select_ln31_30_reg_1922_pp0_iter2_reg;
        select_ln31_30_reg_1922_pp0_iter4_reg <= select_ln31_30_reg_1922_pp0_iter3_reg;
        select_ln31_30_reg_1922_pp0_iter5_reg <= select_ln31_30_reg_1922_pp0_iter4_reg;
        select_ln31_30_reg_1922_pp0_iter6_reg <= select_ln31_30_reg_1922_pp0_iter5_reg;
        select_ln31_30_reg_1922_pp0_iter7_reg <= select_ln31_30_reg_1922_pp0_iter6_reg;
        select_ln31_30_reg_1922_pp0_iter8_reg <= select_ln31_30_reg_1922_pp0_iter7_reg;
        select_ln31_30_reg_1922_pp0_iter9_reg <= select_ln31_30_reg_1922_pp0_iter8_reg;
        select_ln49_28_reg_2110 <= select_ln49_28_fu_1533_p3;
        select_ln49_28_reg_2110_pp0_iter5_reg <= select_ln49_28_reg_2110;
        sum_3_0_2_1_reg_2145 <= sum_3_0_2_1_fu_1573_p3;
        sum_3_0_2_1_reg_2145_pp0_iter12_reg <= sum_3_0_2_1_reg_2145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln49_reg_1982 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_0_1_2_reg_2084 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (tmp_6_reg_1829_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_1_reg_2069 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln33_23_reg_1885_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_0_2_1_reg_2094 <= grp_fu_853_p_dout0;
        mul_0_2_reg_2089 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_2_2_reg_2099 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_reg_2039 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_327 <= weight0_q0;
        reg_331 <= weight0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln33_23_reg_1885 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_350 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (select_ln33_25_reg_1806_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (tmp_6_reg_1829_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_359 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln49_reg_1982_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (select_ln33_23_reg_1885_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (select_ln33_23_reg_1885_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_363 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln31_30_reg_1922 <= select_ln31_30_fu_1334_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (select_ln33_23_reg_1885_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln49_32_reg_2140 <= select_ln49_32_fu_1566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sum_9_0_1_1_reg_2127 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weight0_load_1_reg_2009 <= weight0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1670 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_load_45_reg_1870 <= x_q1;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1670 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln31_reg_1670_pp0_iter12_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter12_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter12_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to13 = 1'b1;
    end else begin
        ap_idle_pp0_1to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias0_ce0 = 1'b1;
    end else begin
        bias0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_310_p0 = select_ln49_30_reg_2122;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_310_p0 = select_ln49_29_reg_2116;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_310_p0 = select_ln49_28_reg_2110;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_310_p0 = select_ln49_reg_2104;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_310_p0 = mul_reg_2039;
    end else begin
        grp_fu_310_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_310_p1 = mul_0_1_1_reg_2079_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_310_p1 = mul_0_1_reg_2069_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_310_p1 = mul_0_0_2_reg_2064_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_310_p1 = mul_0_0_1_reg_2044_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_310_p1 = 32'd0;
    end else begin
        grp_fu_310_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_315_p0 = select_ln49_33_reg_2161;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_315_p0 = sum_3_0_2_1_reg_2145;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_315_p0 = select_ln49_32_reg_2140;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_315_p0 = select_ln49_31_reg_2133;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_315_p0 = sum_9_0_1_1_reg_2127;
    end else begin
        grp_fu_315_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_315_p1 = bitcast_ln31_fu_1594_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_315_p1 = mul_0_2_2_reg_2099_pp0_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_315_p1 = mul_0_2_1_reg_2094_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_315_p1 = mul_0_2_reg_2089_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_315_p1 = mul_0_1_2_reg_2084_pp0_iter7_reg;
    end else begin
        grp_fu_315_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_319_p0 = bitcast_ln57_8_fu_1495_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_319_p0 = bitcast_ln57_6_fu_1481_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_319_p0 = bitcast_ln57_4_fu_1462_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_319_p0 = bitcast_ln57_2_fu_1438_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_319_p0 = bitcast_ln57_fu_1368_p1;
        end else begin
            grp_fu_319_p0 = 'bx;
        end
    end else begin
        grp_fu_319_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_319_p1 = bitcast_ln31_38_fu_1491_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_319_p1 = bitcast_ln31_40_fu_1476_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_319_p1 = bitcast_ln31_37_fu_1452_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_319_p1 = bitcast_ln31_43_fu_1428_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_319_p1 = bitcast_ln31_45_fu_1358_p1;
        end else begin
            grp_fu_319_p1 = 'bx;
        end
    end else begin
        grp_fu_319_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_323_p0 = bitcast_ln57_7_fu_1486_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_323_p0 = bitcast_ln57_5_fu_1466_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_323_p0 = bitcast_ln57_3_fu_1443_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_323_p0 = bitcast_ln57_1_fu_1373_p1;
        end else begin
            grp_fu_323_p0 = 'bx;
        end
    end else begin
        grp_fu_323_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_323_p1 = bitcast_ln31_39_fu_1471_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_323_p1 = bitcast_ln31_41_fu_1457_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_323_p1 = bitcast_ln31_42_fu_1423_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_323_p1 = bitcast_ln31_44_fu_1353_p1;
        end else begin
            grp_fu_323_p1 = 'bx;
        end
    end else begin
        grp_fu_323_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight0_address0 = zext_ln31_39_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight0_address0 = zext_ln31_41_fu_1349_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weight0_address0 = zext_ln31_38_fu_1201_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weight0_address0 = zext_ln31_43_fu_1122_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weight0_address0 = zext_ln31_45_fu_904_p1;
    end else begin
        weight0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight0_address1 = zext_ln31_40_fu_1344_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weight0_address1 = zext_ln31_42_fu_1211_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weight0_address1 = zext_ln31_44_fu_1131_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weight0_address1 = zext_ln31_46_fu_909_p1;
    end else begin
        weight0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        weight0_ce0 = 1'b1;
    end else begin
        weight0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        weight0_ce1 = 1'b1;
    end else begin
        weight0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_address0 = zext_ln57_34_fu_1448_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_address0 = zext_ln57_33_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_address0 = zext_ln57_28_fu_1293_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_address0 = zext_ln57_fu_1140_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_address0 = zext_ln57_29_fu_1101_p1;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_address1 = zext_ln57_32_fu_1378_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_address1 = zext_ln57_31_fu_1303_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_address1 = zext_ln57_27_fu_1149_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_address1 = zext_ln57_30_fu_1111_p1;
    end else begin
        x_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        x_ce1 = 1'b1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to13 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter12_stage2) & (ap_idle_pp0_0to11 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_21_fu_1196_p2 = (select_ln31_31_reg_1770 + 6'd1);

assign add_ln31_22_fu_1413_p2 = (select_ln31_32_reg_1777 + 6'd2);

assign add_ln31_23_fu_1339_p2 = (select_ln31_32_reg_1777 + 6'd1);

assign add_ln31_24_fu_1206_p2 = (select_ln31_31_reg_1770 + 6'd2);

assign add_ln31_25_fu_1126_p2 = (select_ln31_33_reg_1720 + 6'd2);

assign add_ln31_26_fu_899_p2 = (select_ln31_33_reg_1720 + 6'd1);

assign add_ln31_27_fu_1191_p2 = (indvar_flatten134_load_reg_1649 + 12'd1);

assign add_ln31_fu_488_p2 = (och_fu_114 + 3'd1);

assign add_ln33_fu_1386_p2 = (indvar_flatten_load_reg_1674 + 10'd1);

assign add_ln46_2_fu_1279_p2 = (select_ln33_reg_1750 + 5'd1);

assign add_ln46_fu_1078_p2 = ($signed(trunc_ln46_cast_fu_1075_p1) + $signed(6'd63));

assign add_ln54_1_fu_1145_p2 = (trunc_ln46_cast18_reg_1812 + select_ln33_21_reg_1799);

assign add_ln54_2_fu_1288_p2 = (zext_ln49_fu_1284_p1 + select_ln33_21_reg_1799);

assign add_ln54_3_fu_1096_p2 = ($signed(sext_ln49_fu_1084_p1) + $signed(select_ln33_22_reg_1758));

assign add_ln54_4_fu_1106_p2 = (trunc_ln46_cast18_fu_1072_p1 + select_ln33_22_reg_1758);

assign add_ln54_5_fu_1298_p2 = (zext_ln49_fu_1284_p1 + select_ln33_22_reg_1758);

assign add_ln54_6_fu_1308_p2 = ($signed(sext_ln49_reg_1823) + $signed(select_ln33_24_fu_1272_p3));

assign add_ln54_7_fu_1313_p2 = (trunc_ln46_cast18_reg_1812 + select_ln33_24_fu_1272_p3);

assign add_ln54_8_fu_1318_p2 = (zext_ln49_fu_1284_p1 + select_ln33_24_fu_1272_p3);

assign add_ln54_fu_1136_p2 = ($signed(sext_ln49_reg_1823) + $signed(select_ln33_21_reg_1799));

assign add_ln65_fu_1116_p2 = (trunc_ln46_cast20_fu_1069_p1 + select_ln33_19_fu_1004_p3);

assign and_ln31_2_fu_584_p2 = (xor_ln31_fu_572_p2 & icmp_ln35_fu_578_p2);

assign and_ln31_fu_1216_p2 = (xor_ln31_reg_1727 & cmp25_0_2_fu_1159_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bias0_address0 = zext_ln31_37_fu_1579_p1;

assign bitcast_ln31_37_fu_1452_p1 = reg_327;

assign bitcast_ln31_38_fu_1491_p1 = weight0_load_1_reg_2009;

assign bitcast_ln31_39_fu_1471_p1 = reg_340;

assign bitcast_ln31_40_fu_1476_p1 = reg_345;

assign bitcast_ln31_41_fu_1457_p1 = reg_331;

assign bitcast_ln31_42_fu_1423_p1 = reg_340;

assign bitcast_ln31_43_fu_1428_p1 = reg_345;

assign bitcast_ln31_44_fu_1353_p1 = reg_327;

assign bitcast_ln31_45_fu_1358_p1 = reg_331;

assign bitcast_ln31_fu_1594_p1 = bias0_load_reg_2156;

assign bitcast_ln57_1_fu_1373_p1 = reg_354;

assign bitcast_ln57_2_fu_1438_p1 = reg_350;

assign bitcast_ln57_3_fu_1443_p1 = reg_335;

assign bitcast_ln57_4_fu_1462_p1 = x_load_45_reg_1870;

assign bitcast_ln57_5_fu_1466_p1 = reg_354;

assign bitcast_ln57_6_fu_1481_p1 = reg_335;

assign bitcast_ln57_7_fu_1486_p1 = reg_350;

assign bitcast_ln57_8_fu_1495_p1 = reg_354;

assign bitcast_ln57_fu_1368_p1 = reg_350;

assign cmp25_0_2_fu_1159_p2 = ((empty_159_fu_1154_p2 > 5'd27) ? 1'b1 : 1'b0);

assign cmp25_0_2_mid1_fu_1233_p2 = ((p_mid119_fu_1228_p2 > 5'd27) ? 1'b1 : 1'b0);

assign empty_142_fu_658_p2 = (p_shl_cast_fu_651_p1 - p_shl3_cast_fu_655_p1);

assign empty_143_fu_422_p2 = (p_shl3_cast2_fu_418_p1 - zext_ln31_3_fu_402_p1);

assign empty_144_fu_432_p1 = empty_143_fu_422_p2[3:0];

assign empty_145_fu_444_p2 = ($signed(p_shl9_fu_436_p3) - $signed(p_cast_fu_428_p1));

assign empty_146_fu_664_p2 = ($signed(empty_143_reg_1664) + $signed(5'd1));

assign empty_147_fu_673_p1 = empty_146_fu_664_p2[3:0];

assign empty_148_fu_685_p2 = ($signed(p_shl9_0_1_fu_677_p3) - $signed(p_cast4_fu_669_p1));

assign empty_149_fu_691_p2 = ($signed(empty_143_reg_1664) + $signed(5'd2));

assign empty_150_fu_700_p1 = empty_149_fu_691_p2[3:0];

assign empty_151_fu_712_p2 = ($signed(p_shl9_0_2_fu_704_p3) - $signed(p_cast5_fu_696_p1));

assign empty_152_fu_724_p2 = (zext_ln33_5_fu_721_p1 + empty_142_fu_658_p2);

assign empty_153_fu_730_p1 = empty_152_fu_724_p2[6:0];

assign empty_154_fu_754_p2 = ($signed(p_shl4_fu_734_p3) - $signed(p_shl5_cast_fu_750_p1));

assign empty_155_fu_760_p2 = ($signed(zext_ln33_4_fu_718_p1) + $signed(6'd63));

assign empty_156_fu_766_p1 = empty_155_fu_760_p2[4:0];

assign empty_157_fu_790_p2 = ($signed(p_shl10_fu_770_p3) - $signed(p_shl11_0_0_cast_fu_786_p1));

assign empty_158_fu_470_p2 = (p_shl10_0_1_fu_450_p3 - p_shl11_0_1_cast_fu_466_p1);

assign empty_159_fu_1154_p2 = (h_4_reg_1637 + 5'd1);

assign empty_160_fu_1185_p2 = (p_shl10_0_2_fu_1165_p3 - p_shl11_0_2_cast_fu_1181_p1);

assign empty_162_fu_512_p1 = add_ln31_fu_488_p2[1:0];

assign empty_163_fu_538_p1 = p_mid152_fu_528_p2[3:0];

assign empty_164_fu_840_p1 = p_mid156_fu_831_p2[3:0];

assign empty_165_fu_874_p1 = p_mid160_fu_865_p2[3:0];

assign empty_166_fu_913_p1 = p_mid148_fu_818_p2[6:0];

assign empty_167_fu_974_p1 = p_mid1_fu_968_p2[6:0];

assign empty_168_fu_1017_p1 = p_mid111_fu_1011_p2[4:0];

assign empty_fu_406_p1 = och_fu_114[1:0];

assign grp_fu_841_p_ce = 1'b1;

assign grp_fu_841_p_din0 = grp_fu_310_p0;

assign grp_fu_841_p_din1 = grp_fu_310_p1;

assign grp_fu_841_p_opcode = 2'd0;

assign grp_fu_845_p_ce = 1'b1;

assign grp_fu_845_p_din0 = grp_fu_315_p0;

assign grp_fu_845_p_din1 = grp_fu_315_p1;

assign grp_fu_845_p_opcode = 2'd0;

assign grp_fu_849_p_ce = 1'b1;

assign grp_fu_849_p_din0 = grp_fu_319_p0;

assign grp_fu_849_p_din1 = grp_fu_319_p1;

assign grp_fu_853_p_ce = 1'b1;

assign grp_fu_853_p_din0 = grp_fu_323_p0;

assign grp_fu_853_p_din1 = grp_fu_323_p1;

assign icmp_ln31_fu_476_p2 = ((indvar_flatten134_fu_118 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_494_p2 = ((indvar_flatten_fu_110 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_578_p2 = ((w_fu_102 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1433_p2 = ((add_ln46_2_reg_1892 > 5'd27) ? 1'b1 : 1'b0);

assign or_ln31_fu_957_p2 = (tmp_fu_796_p3 | icmp_ln33_reg_1684);

assign or_ln33_fu_596_p2 = (icmp_ln33_fu_494_p2 | and_ln31_2_fu_584_p2);

assign or_ln49_4_fu_1539_p2 = (select_ln33_25_reg_1806_pp0_iter4_reg | icmp_ln49_reg_1982_pp0_iter4_reg);

assign or_ln49_5_fu_1562_p2 = (tmp_6_reg_1829_pp0_iter9_reg | select_ln33_23_reg_1885_pp0_iter8_reg);

assign or_ln49_6_fu_1583_p2 = (select_ln33_23_reg_1885_pp0_iter11_reg | icmp_ln49_reg_1982_pp0_iter11_reg);

assign or_ln49_fu_1512_p2 = (select_ln33_20_fu_1506_p3 | add_ln46_reg_1818_pp0_iter2_reg);

assign p_cast4_fu_669_p1 = empty_146_fu_664_p2;

assign p_cast4_mid1_fu_836_p1 = p_mid156_fu_831_p2;

assign p_cast5_fu_696_p1 = empty_149_fu_691_p2;

assign p_cast5_mid1_fu_870_p1 = p_mid160_fu_865_p2;

assign p_cast_fu_428_p1 = empty_143_fu_422_p2;

assign p_cast_mid1_fu_534_p1 = p_mid152_fu_528_p2;

assign p_dup7_fu_590_p2 = (select_ln31_fu_500_p3 + 5'd1);

assign p_mid111_fu_1011_p2 = ($signed(zext_ln33_fu_962_p1) + $signed(6'd63));

assign p_mid115_fu_1041_p2 = ($signed(p_shl10_0_0_mid1_fu_1021_p3) - $signed(p_shl11_0_0_cast_mid1_fu_1037_p1));

assign p_mid117_fu_630_p2 = (p_shl10_0_1_mid1_fu_610_p3 - p_shl11_0_1_cast_mid1_fu_626_p1);

assign p_mid119_fu_1228_p2 = (select_ln31_reg_1698 + 5'd2);

assign p_mid121_fu_1266_p2 = (p_shl10_0_2_mid1_fu_1246_p3 - p_shl11_0_2_cast_mid1_fu_1262_p1);

assign p_mid148_fu_818_p2 = (p_shl_cast_mid1_fu_811_p1 - p_shl3_cast_mid1_fu_815_p1);

assign p_mid152_fu_528_p2 = (p_shl3_cast2_mid1_fu_524_p1 - zext_ln31_fu_508_p1);

assign p_mid154_fu_550_p2 = ($signed(p_shl9_0_0_mid1_fu_542_p3) - $signed(p_cast_mid1_fu_534_p1));

assign p_mid156_fu_831_p2 = ($signed(p_mid152_reg_1714) + $signed(5'd1));

assign p_mid158_fu_852_p2 = ($signed(p_shl9_0_1_mid1_fu_844_p3) - $signed(p_cast4_mid1_fu_836_p1));

assign p_mid160_fu_865_p2 = ($signed(p_mid152_reg_1714) + $signed(5'd2));

assign p_mid162_fu_886_p2 = ($signed(p_shl9_0_2_mid1_fu_878_p3) - $signed(p_cast5_mid1_fu_870_p1));

assign p_mid184_fu_937_p2 = ($signed(p_shl4_mid_fu_917_p3) - $signed(p_shl5_cast_mid182_fu_933_p1));

assign p_mid19_fu_998_p2 = ($signed(p_shl4_mid1_fu_978_p3) - $signed(p_shl5_cast_mid1_fu_994_p1));

assign p_mid1_fu_968_p2 = (zext_ln33_6_fu_965_p1 + select_ln31_29_fu_824_p3);

assign p_shl10_0_0_mid1_fu_1021_p3 = {{empty_168_fu_1017_p1}, {5'd0}};

assign p_shl10_0_1_fu_450_p3 = {{h_fu_106}, {5'd0}};

assign p_shl10_0_1_mid1_fu_610_p3 = {{p_dup7_fu_590_p2}, {5'd0}};

assign p_shl10_0_2_fu_1165_p3 = {{empty_159_fu_1154_p2}, {5'd0}};

assign p_shl10_0_2_mid1_fu_1246_p3 = {{p_mid119_fu_1228_p2}, {5'd0}};

assign p_shl10_fu_770_p3 = {{empty_156_fu_766_p1}, {5'd0}};

assign p_shl11_0_0_cast_fu_786_p1 = $signed(p_shl11_fu_778_p3);

assign p_shl11_0_0_cast_mid1_fu_1037_p1 = $signed(p_shl11_0_0_mid1_fu_1029_p3);

assign p_shl11_0_0_mid1_fu_1029_p3 = {{p_mid111_fu_1011_p2}, {2'd0}};

assign p_shl11_0_1_cast_fu_466_p1 = p_shl11_0_1_fu_458_p3;

assign p_shl11_0_1_cast_mid1_fu_626_p1 = p_shl11_0_1_mid1_fu_618_p3;

assign p_shl11_0_1_fu_458_p3 = {{h_fu_106}, {2'd0}};

assign p_shl11_0_1_mid1_fu_618_p3 = {{p_dup7_fu_590_p2}, {2'd0}};

assign p_shl11_0_2_cast_fu_1181_p1 = p_shl11_0_2_fu_1173_p3;

assign p_shl11_0_2_cast_mid1_fu_1262_p1 = p_shl11_0_2_mid1_fu_1254_p3;

assign p_shl11_0_2_fu_1173_p3 = {{empty_159_fu_1154_p2}, {2'd0}};

assign p_shl11_0_2_mid1_fu_1254_p3 = {{p_mid119_fu_1228_p2}, {2'd0}};

assign p_shl11_fu_778_p3 = {{empty_155_fu_760_p2}, {2'd0}};

assign p_shl3_cast2_fu_418_p1 = p_shl3_fu_410_p3;

assign p_shl3_cast2_mid1_fu_524_p1 = p_shl3_mid1_fu_516_p3;

assign p_shl3_cast_fu_655_p1 = p_shl3_reg_1659;

assign p_shl3_cast_mid1_fu_815_p1 = p_shl3_mid1_reg_1709;

assign p_shl3_fu_410_p3 = {{empty_fu_406_p1}, {2'd0}};

assign p_shl3_mid1_fu_516_p3 = {{empty_162_fu_512_p1}, {2'd0}};

assign p_shl4_fu_734_p3 = {{empty_153_fu_730_p1}, {5'd0}};

assign p_shl4_mid1_fu_978_p3 = {{empty_167_fu_974_p1}, {5'd0}};

assign p_shl4_mid_fu_917_p3 = {{empty_166_fu_913_p1}, {5'd0}};

assign p_shl5_cast_fu_750_p1 = $signed(p_shl5_fu_742_p3);

assign p_shl5_cast_mid182_fu_933_p1 = $signed(p_shl5_mid_fu_925_p3);

assign p_shl5_cast_mid1_fu_994_p1 = $signed(p_shl5_mid1_fu_986_p3);

assign p_shl5_fu_742_p3 = {{empty_152_fu_724_p2}, {2'd0}};

assign p_shl5_mid1_fu_986_p3 = {{p_mid1_fu_968_p2}, {2'd0}};

assign p_shl5_mid_fu_925_p3 = {{p_mid148_fu_818_p2}, {2'd0}};

assign p_shl9_0_0_mid1_fu_542_p3 = {{empty_163_fu_538_p1}, {2'd0}};

assign p_shl9_0_1_fu_677_p3 = {{empty_147_fu_673_p1}, {2'd0}};

assign p_shl9_0_1_mid1_fu_844_p3 = {{empty_164_fu_840_p1}, {2'd0}};

assign p_shl9_0_2_fu_704_p3 = {{empty_150_fu_700_p1}, {2'd0}};

assign p_shl9_0_2_mid1_fu_878_p3 = {{empty_165_fu_874_p1}, {2'd0}};

assign p_shl9_fu_436_p3 = {{empty_144_fu_432_p1}, {2'd0}};

assign p_shl_cast_fu_651_p1 = p_shl_fu_644_p3;

assign p_shl_cast_mid1_fu_811_p1 = p_shl_mid1_fu_804_p3;

assign p_shl_fu_644_p3 = {{empty_reg_1654}, {5'd0}};

assign p_shl_mid1_fu_804_p3 = {{empty_162_reg_1704}, {5'd0}};

assign select_ln31_29_fu_824_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? p_mid148_fu_818_p2 : empty_142_fu_658_p2);

assign select_ln31_30_fu_1334_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? add_ln31_reg_1679 : och_2_reg_1644);

assign select_ln31_31_fu_858_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? p_mid158_fu_852_p2 : empty_148_fu_685_p2);

assign select_ln31_32_fu_892_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? p_mid162_fu_886_p2 : empty_151_fu_712_p2);

assign select_ln31_33_fu_556_p3 = ((icmp_ln33_fu_494_p2[0:0] == 1'b1) ? p_mid154_fu_550_p2 : empty_145_fu_444_p2);

assign select_ln31_34_fu_943_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? p_mid184_fu_937_p2 : empty_154_fu_754_p2);

assign select_ln31_35_fu_1500_p3 = ((icmp_ln33_reg_1684_pp0_iter2_reg[0:0] == 1'b1) ? 6'd32 : empty_155_reg_1765_pp0_iter2_reg);

assign select_ln31_36_fu_950_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? 10'd996 : empty_157_fu_790_p2);

assign select_ln31_37_fu_564_p3 = ((icmp_ln33_fu_494_p2[0:0] == 1'b1) ? 10'd0 : empty_158_fu_470_p2);

assign select_ln31_38_fu_1221_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? 10'd28 : empty_160_fu_1185_p2);

assign select_ln31_fu_500_p3 = ((icmp_ln33_fu_494_p2[0:0] == 1'b1) ? 5'd0 : h_fu_106);

assign select_ln33_19_fu_1004_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? p_mid19_fu_998_p2 : select_ln31_34_fu_943_p3);

assign select_ln33_20_fu_1506_p3 = ((and_ln31_2_reg_1732_pp0_iter2_reg[0:0] == 1'b1) ? p_mid111_reg_1794_pp0_iter2_reg : select_ln31_35_fu_1500_p3);

assign select_ln33_21_fu_1047_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? p_mid115_fu_1041_p2 : select_ln31_36_fu_950_p3);

assign select_ln33_22_fu_636_p3 = ((and_ln31_2_fu_584_p2[0:0] == 1'b1) ? p_mid117_fu_630_p2 : select_ln31_37_fu_564_p3);

assign select_ln33_23_fu_1239_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? cmp25_0_2_mid1_fu_1233_p2 : and_ln31_fu_1216_p2);

assign select_ln33_24_fu_1272_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? p_mid121_fu_1266_p2 : select_ln31_38_fu_1221_p3);

assign select_ln33_25_fu_1062_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? tmp_4_fu_1054_p3 : or_ln31_fu_957_p2);

assign select_ln33_26_fu_1363_p3 = ((and_ln31_2_reg_1732[0:0] == 1'b1) ? p_dup7_reg_1743 : select_ln31_reg_1698);

assign select_ln33_27_fu_1391_p3 = ((icmp_ln33_reg_1684[0:0] == 1'b1) ? 10'd1 : add_ln33_fu_1386_p2);

assign select_ln33_fu_602_p3 = ((or_ln33_fu_596_p2[0:0] == 1'b1) ? 5'd0 : w_fu_102);

assign select_ln49_28_fu_1533_p3 = ((select_ln33_25_reg_1806_pp0_iter3_reg[0:0] == 1'b1) ? select_ln49_reg_2104_pp0_iter3_reg : reg_359);

assign select_ln49_29_fu_1543_p3 = ((or_ln49_4_fu_1539_p2[0:0] == 1'b1) ? select_ln49_28_reg_2110_pp0_iter5_reg : reg_359);

assign select_ln49_30_fu_1550_p3 = ((tmp_6_reg_1829_pp0_iter5_reg[0:0] == 1'b1) ? select_ln49_29_reg_2116_pp0_iter6_reg : reg_359);

assign select_ln49_31_fu_1556_p3 = ((icmp_ln49_reg_1982_pp0_iter8_reg[0:0] == 1'b1) ? sum_9_0_1_1_reg_2127_pp0_iter8_reg : reg_363);

assign select_ln49_32_fu_1566_p3 = ((or_ln49_5_fu_1562_p2[0:0] == 1'b1) ? select_ln49_31_reg_2133_pp0_iter9_reg : reg_363);

assign select_ln49_33_fu_1587_p3 = ((or_ln49_6_fu_1583_p2[0:0] == 1'b1) ? sum_3_0_2_1_reg_2145_pp0_iter12_reg : reg_363);

assign select_ln49_fu_1525_p3 = ((tmp_5_fu_1517_p3[0:0] == 1'b1) ? 32'd0 : reg_359);

assign sext_ln49_fu_1084_p1 = add_ln46_fu_1078_p2;

assign sum_3_0_2_1_fu_1573_p3 = ((select_ln33_23_reg_1885_pp0_iter10_reg[0:0] == 1'b1) ? select_ln49_31_reg_2133_pp0_iter10_reg : reg_363);

assign tmp_4_fu_1054_p3 = p_mid111_fu_1011_p2[32'd5];

assign tmp_5_fu_1517_p3 = or_ln49_fu_1512_p2[32'd5];

assign tmp_fu_796_p3 = empty_155_fu_760_p2[32'd5];

assign trunc_ln46_cast18_fu_1072_p1 = select_ln33_reg_1750;

assign trunc_ln46_cast20_fu_1069_p1 = select_ln33_reg_1750;

assign trunc_ln46_cast_fu_1075_p1 = select_ln33_reg_1750;

assign xor_ln31_fu_572_p2 = (icmp_ln33_fu_494_p2 ^ 1'd1);

assign y_address0 = zext_ln65_fu_1598_p1;

assign y_d0 = reg_363;

assign zext_ln31_37_fu_1579_p1 = select_ln31_30_reg_1922_pp0_iter11_reg;

assign zext_ln31_38_fu_1201_p1 = add_ln31_21_fu_1196_p2;

assign zext_ln31_39_fu_1418_p1 = add_ln31_22_fu_1413_p2;

assign zext_ln31_3_fu_402_p1 = och_fu_114;

assign zext_ln31_40_fu_1344_p1 = add_ln31_23_fu_1339_p2;

assign zext_ln31_41_fu_1349_p1 = select_ln31_32_reg_1777;

assign zext_ln31_42_fu_1211_p1 = add_ln31_24_fu_1206_p2;

assign zext_ln31_43_fu_1122_p1 = select_ln31_31_reg_1770;

assign zext_ln31_44_fu_1131_p1 = add_ln31_25_fu_1126_p2;

assign zext_ln31_45_fu_904_p1 = add_ln31_26_fu_899_p2;

assign zext_ln31_46_fu_909_p1 = select_ln31_33_reg_1720;

assign zext_ln31_fu_508_p1 = add_ln31_fu_488_p2;

assign zext_ln33_4_fu_718_p1 = h_4_reg_1637;

assign zext_ln33_5_fu_721_p1 = h_4_reg_1637;

assign zext_ln33_6_fu_965_p1 = p_dup7_reg_1743;

assign zext_ln33_fu_962_p1 = p_dup7_reg_1743;

assign zext_ln49_fu_1284_p1 = add_ln46_2_fu_1279_p2;

assign zext_ln57_27_fu_1149_p1 = add_ln54_1_fu_1145_p2;

assign zext_ln57_28_fu_1293_p1 = add_ln54_2_fu_1288_p2;

assign zext_ln57_29_fu_1101_p1 = add_ln54_3_fu_1096_p2;

assign zext_ln57_30_fu_1111_p1 = add_ln54_4_fu_1106_p2;

assign zext_ln57_31_fu_1303_p1 = add_ln54_5_fu_1298_p2;

assign zext_ln57_32_fu_1378_p1 = add_ln54_6_reg_1907;

assign zext_ln57_33_fu_1382_p1 = add_ln54_7_reg_1912;

assign zext_ln57_34_fu_1448_p1 = add_ln54_8_reg_1917;

assign zext_ln57_fu_1140_p1 = add_ln54_fu_1136_p2;

assign zext_ln65_fu_1598_p1 = add_ln65_reg_1845_pp0_iter12_reg;

always @ (posedge ap_clk) begin
    p_shl3_reg_1659[1:0] <= 2'b00;
    p_shl3_mid1_reg_1709[1:0] <= 2'b00;
    select_ln33_22_reg_1758[1:0] <= 2'b00;
    select_ln33_21_reg_1799[1:0] <= 2'b00;
    trunc_ln46_cast18_reg_1812[9:5] <= 5'b00000;
end

endmodule //cnn_top_conv2d_1
