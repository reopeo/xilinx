// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_cnn_top_Pipeline_VITIS_LOOP_73_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight3_address0,
        weight3_ce0,
        weight3_q0,
        weight3_address1,
        weight3_ce1,
        weight3_q1,
        x_assign_2_load,
        x_assign_2_load_1,
        x_assign_2_load_2,
        x_assign_2_load_3,
        x_assign_2_load_4,
        x_assign_2_load_5,
        x_assign_2_load_6,
        x_assign_2_load_7,
        x_assign_2_load_8,
        x_assign_2_load_9,
        x_assign_2_load_10,
        x_assign_2_load_11,
        x_assign_2_load_12,
        x_assign_2_load_13,
        x_assign_2_load_14,
        x_assign_2_load_15,
        x_assign_2_load_16,
        x_assign_2_load_17,
        x_assign_2_load_18,
        x_assign_2_load_19,
        x_assign_2_load_20,
        x_assign_2_load_21,
        x_assign_2_load_22,
        x_assign_2_load_23,
        x_assign_2_load_24,
        x_assign_2_load_25,
        x_assign_2_load_26,
        x_assign_2_load_27,
        x_assign_2_load_28,
        x_assign_2_load_29,
        x_assign_2_load_30,
        x_assign_2_load_31,
        bias3_address0,
        bias3_ce0,
        bias3_q0,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_841_p_din0,
        grp_fu_841_p_din1,
        grp_fu_841_p_opcode,
        grp_fu_841_p_dout0,
        grp_fu_841_p_ce,
        grp_fu_845_p_din0,
        grp_fu_845_p_din1,
        grp_fu_845_p_opcode,
        grp_fu_845_p_dout0,
        grp_fu_845_p_ce,
        grp_fu_873_p_din0,
        grp_fu_873_p_din1,
        grp_fu_873_p_opcode,
        grp_fu_873_p_dout0,
        grp_fu_873_p_ce,
        grp_fu_849_p_din0,
        grp_fu_849_p_din1,
        grp_fu_849_p_dout0,
        grp_fu_849_p_ce,
        grp_fu_853_p_din0,
        grp_fu_853_p_din1,
        grp_fu_853_p_dout0,
        grp_fu_853_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] weight3_address0;
output   weight3_ce0;
input  [31:0] weight3_q0;
output  [8:0] weight3_address1;
output   weight3_ce1;
input  [31:0] weight3_q1;
input  [31:0] x_assign_2_load;
input  [31:0] x_assign_2_load_1;
input  [31:0] x_assign_2_load_2;
input  [31:0] x_assign_2_load_3;
input  [31:0] x_assign_2_load_4;
input  [31:0] x_assign_2_load_5;
input  [31:0] x_assign_2_load_6;
input  [31:0] x_assign_2_load_7;
input  [31:0] x_assign_2_load_8;
input  [31:0] x_assign_2_load_9;
input  [31:0] x_assign_2_load_10;
input  [31:0] x_assign_2_load_11;
input  [31:0] x_assign_2_load_12;
input  [31:0] x_assign_2_load_13;
input  [31:0] x_assign_2_load_14;
input  [31:0] x_assign_2_load_15;
input  [31:0] x_assign_2_load_16;
input  [31:0] x_assign_2_load_17;
input  [31:0] x_assign_2_load_18;
input  [31:0] x_assign_2_load_19;
input  [31:0] x_assign_2_load_20;
input  [31:0] x_assign_2_load_21;
input  [31:0] x_assign_2_load_22;
input  [31:0] x_assign_2_load_23;
input  [31:0] x_assign_2_load_24;
input  [31:0] x_assign_2_load_25;
input  [31:0] x_assign_2_load_26;
input  [31:0] x_assign_2_load_27;
input  [31:0] x_assign_2_load_28;
input  [31:0] x_assign_2_load_29;
input  [31:0] x_assign_2_load_30;
input  [31:0] x_assign_2_load_31;
output  [3:0] bias3_address0;
output   bias3_ce0;
input  [31:0] bias3_q0;
output  [3:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_841_p_din0;
output  [31:0] grp_fu_841_p_din1;
output  [1:0] grp_fu_841_p_opcode;
input  [31:0] grp_fu_841_p_dout0;
output   grp_fu_841_p_ce;
output  [31:0] grp_fu_845_p_din0;
output  [31:0] grp_fu_845_p_din1;
output  [1:0] grp_fu_845_p_opcode;
input  [31:0] grp_fu_845_p_dout0;
output   grp_fu_845_p_ce;
output  [31:0] grp_fu_873_p_din0;
output  [31:0] grp_fu_873_p_din1;
output  [1:0] grp_fu_873_p_opcode;
input  [31:0] grp_fu_873_p_dout0;
output   grp_fu_873_p_ce;
output  [31:0] grp_fu_849_p_din0;
output  [31:0] grp_fu_849_p_din1;
input  [31:0] grp_fu_849_p_dout0;
output   grp_fu_849_p_ce;
output  [31:0] grp_fu_853_p_din0;
output  [31:0] grp_fu_853_p_din1;
input  [31:0] grp_fu_853_p_dout0;
output   grp_fu_853_p_ce;

reg ap_idle;
reg[8:0] weight3_address0;
reg weight3_ce0;
reg[8:0] weight3_address1;
reg weight3_ce1;
reg bias3_ce0;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state32_pp0_stage15_iter1;
wire    ap_block_state48_pp0_stage15_iter2;
wire    ap_block_state64_pp0_stage15_iter3;
wire    ap_block_state80_pp0_stage15_iter4;
wire    ap_block_state96_pp0_stage15_iter5;
wire    ap_block_state112_pp0_stage15_iter6;
wire    ap_block_state128_pp0_stage15_iter7;
wire    ap_block_state144_pp0_stage15_iter8;
wire    ap_block_state160_pp0_stage15_iter9;
wire    ap_block_pp0_stage15_subdone;
reg   [0:0] icmp_ln73_reg_1431;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_680;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_state34_pp0_stage1_iter2;
wire    ap_block_state50_pp0_stage1_iter3;
wire    ap_block_state66_pp0_stage1_iter4;
wire    ap_block_state82_pp0_stage1_iter5;
wire    ap_block_state98_pp0_stage1_iter6;
wire    ap_block_state114_pp0_stage1_iter7;
wire    ap_block_state130_pp0_stage1_iter8;
wire    ap_block_state146_pp0_stage1_iter9;
wire    ap_block_state162_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_state35_pp0_stage2_iter2;
wire    ap_block_state51_pp0_stage2_iter3;
wire    ap_block_state67_pp0_stage2_iter4;
wire    ap_block_state83_pp0_stage2_iter5;
wire    ap_block_state99_pp0_stage2_iter6;
wire    ap_block_state115_pp0_stage2_iter7;
wire    ap_block_state131_pp0_stage2_iter8;
wire    ap_block_state147_pp0_stage2_iter9;
wire    ap_block_state163_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_state36_pp0_stage3_iter2;
wire    ap_block_state52_pp0_stage3_iter3;
wire    ap_block_state68_pp0_stage3_iter4;
wire    ap_block_state84_pp0_stage3_iter5;
wire    ap_block_state100_pp0_stage3_iter6;
wire    ap_block_state116_pp0_stage3_iter7;
wire    ap_block_state132_pp0_stage3_iter8;
wire    ap_block_state148_pp0_stage3_iter9;
wire    ap_block_state164_pp0_stage3_iter10;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_state37_pp0_stage4_iter2;
wire    ap_block_state53_pp0_stage4_iter3;
wire    ap_block_state69_pp0_stage4_iter4;
wire    ap_block_state85_pp0_stage4_iter5;
wire    ap_block_state101_pp0_stage4_iter6;
wire    ap_block_state117_pp0_stage4_iter7;
wire    ap_block_state133_pp0_stage4_iter8;
wire    ap_block_state149_pp0_stage4_iter9;
wire    ap_block_state165_pp0_stage4_iter10;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_state38_pp0_stage5_iter2;
wire    ap_block_state54_pp0_stage5_iter3;
wire    ap_block_state70_pp0_stage5_iter4;
wire    ap_block_state86_pp0_stage5_iter5;
wire    ap_block_state102_pp0_stage5_iter6;
wire    ap_block_state118_pp0_stage5_iter7;
wire    ap_block_state134_pp0_stage5_iter8;
wire    ap_block_state150_pp0_stage5_iter9;
wire    ap_block_state166_pp0_stage5_iter10;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_state39_pp0_stage6_iter2;
wire    ap_block_state55_pp0_stage6_iter3;
wire    ap_block_state71_pp0_stage6_iter4;
wire    ap_block_state87_pp0_stage6_iter5;
wire    ap_block_state103_pp0_stage6_iter6;
wire    ap_block_state119_pp0_stage6_iter7;
wire    ap_block_state135_pp0_stage6_iter8;
wire    ap_block_state151_pp0_stage6_iter9;
wire    ap_block_state167_pp0_stage6_iter10;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_state40_pp0_stage7_iter2;
wire    ap_block_state56_pp0_stage7_iter3;
wire    ap_block_state72_pp0_stage7_iter4;
wire    ap_block_state88_pp0_stage7_iter5;
wire    ap_block_state104_pp0_stage7_iter6;
wire    ap_block_state120_pp0_stage7_iter7;
wire    ap_block_state136_pp0_stage7_iter8;
wire    ap_block_state152_pp0_stage7_iter9;
wire    ap_block_state168_pp0_stage7_iter10;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_state41_pp0_stage8_iter2;
wire    ap_block_state57_pp0_stage8_iter3;
wire    ap_block_state73_pp0_stage8_iter4;
wire    ap_block_state89_pp0_stage8_iter5;
wire    ap_block_state105_pp0_stage8_iter6;
wire    ap_block_state121_pp0_stage8_iter7;
wire    ap_block_state137_pp0_stage8_iter8;
wire    ap_block_state153_pp0_stage8_iter9;
wire    ap_block_state169_pp0_stage8_iter10;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_state42_pp0_stage9_iter2;
wire    ap_block_state58_pp0_stage9_iter3;
wire    ap_block_state74_pp0_stage9_iter4;
wire    ap_block_state90_pp0_stage9_iter5;
wire    ap_block_state106_pp0_stage9_iter6;
wire    ap_block_state122_pp0_stage9_iter7;
wire    ap_block_state138_pp0_stage9_iter8;
wire    ap_block_state154_pp0_stage9_iter9;
wire    ap_block_state170_pp0_stage9_iter10;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
wire    ap_block_state43_pp0_stage10_iter2;
wire    ap_block_state59_pp0_stage10_iter3;
wire    ap_block_state75_pp0_stage10_iter4;
wire    ap_block_state91_pp0_stage10_iter5;
wire    ap_block_state107_pp0_stage10_iter6;
wire    ap_block_state123_pp0_stage10_iter7;
wire    ap_block_state139_pp0_stage10_iter8;
wire    ap_block_state155_pp0_stage10_iter9;
wire    ap_block_state171_pp0_stage10_iter10;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
wire    ap_block_state44_pp0_stage11_iter2;
wire    ap_block_state60_pp0_stage11_iter3;
wire    ap_block_state76_pp0_stage11_iter4;
wire    ap_block_state92_pp0_stage11_iter5;
wire    ap_block_state108_pp0_stage11_iter6;
wire    ap_block_state124_pp0_stage11_iter7;
wire    ap_block_state140_pp0_stage11_iter8;
wire    ap_block_state156_pp0_stage11_iter9;
wire    ap_block_state172_pp0_stage11_iter10;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
wire    ap_block_state45_pp0_stage12_iter2;
wire    ap_block_state61_pp0_stage12_iter3;
wire    ap_block_state77_pp0_stage12_iter4;
wire    ap_block_state93_pp0_stage12_iter5;
wire    ap_block_state109_pp0_stage12_iter6;
wire    ap_block_state125_pp0_stage12_iter7;
wire    ap_block_state141_pp0_stage12_iter8;
wire    ap_block_state157_pp0_stage12_iter9;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
wire    ap_block_state46_pp0_stage13_iter2;
wire    ap_block_state62_pp0_stage13_iter3;
wire    ap_block_state78_pp0_stage13_iter4;
wire    ap_block_state94_pp0_stage13_iter5;
wire    ap_block_state110_pp0_stage13_iter6;
wire    ap_block_state126_pp0_stage13_iter7;
wire    ap_block_state142_pp0_stage13_iter8;
wire    ap_block_state158_pp0_stage13_iter9;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
wire    ap_block_state47_pp0_stage14_iter2;
wire    ap_block_state63_pp0_stage14_iter3;
wire    ap_block_state79_pp0_stage14_iter4;
wire    ap_block_state95_pp0_stage14_iter5;
wire    ap_block_state111_pp0_stage14_iter6;
wire    ap_block_state127_pp0_stage14_iter7;
wire    ap_block_state143_pp0_stage14_iter8;
wire    ap_block_state159_pp0_stage14_iter9;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_state33_pp0_stage0_iter2;
wire    ap_block_state49_pp0_stage0_iter3;
wire    ap_block_state65_pp0_stage0_iter4;
wire    ap_block_state81_pp0_stage0_iter5;
wire    ap_block_state97_pp0_stage0_iter6;
wire    ap_block_state113_pp0_stage0_iter7;
wire    ap_block_state129_pp0_stage0_iter8;
wire    ap_block_state145_pp0_stage0_iter9;
wire    ap_block_state161_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_684;
reg   [31:0] reg_688;
reg   [31:0] reg_693;
reg   [31:0] reg_698;
reg   [31:0] reg_703;
reg   [31:0] reg_708;
reg   [31:0] reg_713;
reg   [31:0] reg_718;
reg   [31:0] reg_723;
reg   [31:0] reg_728;
reg   [31:0] reg_733;
reg   [3:0] i_2_reg_1426;
reg   [3:0] i_2_reg_1426_pp0_iter1_reg;
reg   [3:0] i_2_reg_1426_pp0_iter2_reg;
reg   [3:0] i_2_reg_1426_pp0_iter3_reg;
reg   [3:0] i_2_reg_1426_pp0_iter4_reg;
reg   [3:0] i_2_reg_1426_pp0_iter5_reg;
reg   [3:0] i_2_reg_1426_pp0_iter6_reg;
reg   [3:0] i_2_reg_1426_pp0_iter7_reg;
reg   [3:0] i_2_reg_1426_pp0_iter8_reg;
reg   [3:0] i_2_reg_1426_pp0_iter9_reg;
wire   [0:0] icmp_ln73_fu_746_p2;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter1_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter2_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter3_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter4_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter5_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter6_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter7_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter8_reg;
reg   [0:0] icmp_ln73_reg_1431_pp0_iter9_reg;
wire   [8:0] mul_i_fu_758_p3;
reg   [8:0] mul_i_reg_1435;
wire   [31:0] bitcast_ln78_fu_807_p1;
wire   [31:0] bitcast_ln78_1_fu_812_p1;
wire   [31:0] bitcast_ln78_2_fu_837_p1;
wire   [31:0] bitcast_ln78_3_fu_842_p1;
wire   [31:0] bitcast_ln78_4_fu_867_p1;
wire   [31:0] bitcast_ln78_5_fu_872_p1;
reg   [31:0] mul6_i1_reg_1549;
reg   [31:0] mul6_i1_1_reg_1554;
wire   [31:0] bitcast_ln78_6_fu_897_p1;
wire   [31:0] bitcast_ln78_7_fu_902_p1;
reg   [31:0] mul6_i1_2_reg_1579;
reg   [31:0] mul6_i1_3_reg_1584;
wire   [31:0] bitcast_ln78_8_fu_927_p1;
wire   [31:0] bitcast_ln78_9_fu_932_p1;
reg   [31:0] mul6_i1_4_reg_1609;
reg   [31:0] mul6_i1_4_reg_1609_pp0_iter1_reg;
reg   [31:0] mul6_i1_5_reg_1614;
reg   [31:0] mul6_i1_5_reg_1614_pp0_iter1_reg;
wire   [31:0] bitcast_ln78_10_fu_957_p1;
wire   [31:0] bitcast_ln78_11_fu_962_p1;
reg   [31:0] mul6_i1_6_reg_1639;
reg   [31:0] mul6_i1_6_reg_1639_pp0_iter1_reg;
reg   [31:0] mul6_i1_7_reg_1644;
reg   [31:0] mul6_i1_7_reg_1644_pp0_iter1_reg;
reg   [31:0] mul6_i1_7_reg_1644_pp0_iter2_reg;
wire   [31:0] bitcast_ln78_12_fu_987_p1;
wire   [31:0] bitcast_ln78_13_fu_992_p1;
reg   [31:0] mul6_i1_8_reg_1669;
reg   [31:0] mul6_i1_8_reg_1669_pp0_iter1_reg;
reg   [31:0] mul6_i1_8_reg_1669_pp0_iter2_reg;
reg   [31:0] mul6_i1_9_reg_1674;
reg   [31:0] mul6_i1_9_reg_1674_pp0_iter1_reg;
reg   [31:0] mul6_i1_9_reg_1674_pp0_iter2_reg;
wire   [31:0] bitcast_ln78_14_fu_1017_p1;
wire   [31:0] bitcast_ln78_15_fu_1022_p1;
reg   [31:0] mul6_i1_s_reg_1699;
reg   [31:0] mul6_i1_s_reg_1699_pp0_iter1_reg;
reg   [31:0] mul6_i1_s_reg_1699_pp0_iter2_reg;
reg   [31:0] mul6_i1_10_reg_1704;
reg   [31:0] mul6_i1_10_reg_1704_pp0_iter1_reg;
reg   [31:0] mul6_i1_10_reg_1704_pp0_iter2_reg;
reg   [31:0] mul6_i1_10_reg_1704_pp0_iter3_reg;
wire   [31:0] bitcast_ln78_16_fu_1047_p1;
wire   [31:0] bitcast_ln78_17_fu_1052_p1;
reg   [31:0] mul6_i1_11_reg_1729;
reg   [31:0] mul6_i1_11_reg_1729_pp0_iter1_reg;
reg   [31:0] mul6_i1_11_reg_1729_pp0_iter2_reg;
reg   [31:0] mul6_i1_11_reg_1729_pp0_iter3_reg;
reg   [31:0] mul6_i1_12_reg_1734;
reg   [31:0] mul6_i1_12_reg_1734_pp0_iter1_reg;
reg   [31:0] mul6_i1_12_reg_1734_pp0_iter2_reg;
reg   [31:0] mul6_i1_12_reg_1734_pp0_iter3_reg;
wire   [31:0] bitcast_ln78_18_fu_1077_p1;
wire   [31:0] bitcast_ln78_19_fu_1082_p1;
reg   [31:0] mul6_i1_13_reg_1759;
reg   [31:0] mul6_i1_13_reg_1759_pp0_iter1_reg;
reg   [31:0] mul6_i1_13_reg_1759_pp0_iter2_reg;
reg   [31:0] mul6_i1_13_reg_1759_pp0_iter3_reg;
reg   [31:0] mul6_i1_14_reg_1764;
reg   [31:0] mul6_i1_14_reg_1764_pp0_iter1_reg;
reg   [31:0] mul6_i1_14_reg_1764_pp0_iter2_reg;
reg   [31:0] mul6_i1_14_reg_1764_pp0_iter3_reg;
reg   [31:0] mul6_i1_14_reg_1764_pp0_iter4_reg;
wire   [31:0] bitcast_ln78_20_fu_1107_p1;
wire   [31:0] bitcast_ln78_21_fu_1112_p1;
reg   [31:0] mul6_i1_15_reg_1789;
reg   [31:0] mul6_i1_15_reg_1789_pp0_iter1_reg;
reg   [31:0] mul6_i1_15_reg_1789_pp0_iter2_reg;
reg   [31:0] mul6_i1_15_reg_1789_pp0_iter3_reg;
reg   [31:0] mul6_i1_15_reg_1789_pp0_iter4_reg;
reg   [31:0] mul6_i1_16_reg_1794;
reg   [31:0] mul6_i1_16_reg_1794_pp0_iter1_reg;
reg   [31:0] mul6_i1_16_reg_1794_pp0_iter2_reg;
reg   [31:0] mul6_i1_16_reg_1794_pp0_iter3_reg;
reg   [31:0] mul6_i1_16_reg_1794_pp0_iter4_reg;
wire   [31:0] bitcast_ln78_22_fu_1137_p1;
wire   [31:0] bitcast_ln78_23_fu_1142_p1;
reg   [31:0] mul6_i1_17_reg_1819;
reg   [31:0] mul6_i1_17_reg_1819_pp0_iter1_reg;
reg   [31:0] mul6_i1_17_reg_1819_pp0_iter2_reg;
reg   [31:0] mul6_i1_17_reg_1819_pp0_iter3_reg;
reg   [31:0] mul6_i1_17_reg_1819_pp0_iter4_reg;
reg   [31:0] mul6_i1_17_reg_1819_pp0_iter5_reg;
reg   [31:0] mul6_i1_18_reg_1824;
reg   [31:0] mul6_i1_18_reg_1824_pp0_iter1_reg;
reg   [31:0] mul6_i1_18_reg_1824_pp0_iter2_reg;
reg   [31:0] mul6_i1_18_reg_1824_pp0_iter3_reg;
reg   [31:0] mul6_i1_18_reg_1824_pp0_iter4_reg;
reg   [31:0] mul6_i1_18_reg_1824_pp0_iter5_reg;
wire   [31:0] bitcast_ln78_24_fu_1167_p1;
wire   [31:0] bitcast_ln78_25_fu_1172_p1;
reg   [31:0] mul6_i1_19_reg_1849;
reg   [31:0] mul6_i1_19_reg_1849_pp0_iter1_reg;
reg   [31:0] mul6_i1_19_reg_1849_pp0_iter2_reg;
reg   [31:0] mul6_i1_19_reg_1849_pp0_iter3_reg;
reg   [31:0] mul6_i1_19_reg_1849_pp0_iter4_reg;
reg   [31:0] mul6_i1_19_reg_1849_pp0_iter5_reg;
reg   [31:0] mul6_i1_20_reg_1854;
reg   [31:0] mul6_i1_20_reg_1854_pp0_iter1_reg;
reg   [31:0] mul6_i1_20_reg_1854_pp0_iter2_reg;
reg   [31:0] mul6_i1_20_reg_1854_pp0_iter3_reg;
reg   [31:0] mul6_i1_20_reg_1854_pp0_iter4_reg;
reg   [31:0] mul6_i1_20_reg_1854_pp0_iter5_reg;
wire   [31:0] bitcast_ln78_26_fu_1197_p1;
wire   [31:0] bitcast_ln78_27_fu_1202_p1;
reg   [31:0] mul6_i1_21_reg_1879;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter2_reg;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter3_reg;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter4_reg;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter5_reg;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter6_reg;
reg   [31:0] mul6_i1_21_reg_1879_pp0_iter7_reg;
reg   [31:0] mul6_i1_22_reg_1884;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter2_reg;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter3_reg;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter4_reg;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter5_reg;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter6_reg;
reg   [31:0] mul6_i1_22_reg_1884_pp0_iter7_reg;
wire   [31:0] bitcast_ln78_28_fu_1227_p1;
wire   [31:0] bitcast_ln78_29_fu_1232_p1;
reg   [31:0] mul6_i1_23_reg_1899;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter2_reg;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter3_reg;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter4_reg;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter5_reg;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter6_reg;
reg   [31:0] mul6_i1_23_reg_1899_pp0_iter7_reg;
reg   [31:0] mul6_i1_24_reg_1904;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter2_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter3_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter4_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter5_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter6_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter7_reg;
reg   [31:0] mul6_i1_24_reg_1904_pp0_iter8_reg;
wire   [31:0] bitcast_ln78_30_fu_1237_p1;
wire   [31:0] bitcast_ln78_31_fu_1242_p1;
reg   [31:0] mul6_i1_25_reg_1919;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter2_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter3_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter4_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter5_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter6_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter7_reg;
reg   [31:0] mul6_i1_25_reg_1919_pp0_iter8_reg;
reg   [31:0] mul6_i1_26_reg_1924;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter2_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter3_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter4_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter5_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter6_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter7_reg;
reg   [31:0] mul6_i1_26_reg_1924_pp0_iter8_reg;
reg   [31:0] mul6_i1_27_reg_1929;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter2_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter3_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter4_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter5_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter6_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter7_reg;
reg   [31:0] mul6_i1_27_reg_1929_pp0_iter8_reg;
reg   [31:0] mul6_i1_28_reg_1934;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter2_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter3_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter4_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter5_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter6_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter7_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter8_reg;
reg   [31:0] mul6_i1_28_reg_1934_pp0_iter9_reg;
reg   [31:0] mul6_i1_29_reg_1939;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter2_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter3_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter4_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter5_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter6_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter7_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter8_reg;
reg   [31:0] mul6_i1_29_reg_1939_pp0_iter9_reg;
reg   [31:0] mul6_i1_30_reg_1944;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter2_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter3_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter4_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter5_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter6_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter7_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter8_reg;
reg   [31:0] mul6_i1_30_reg_1944_pp0_iter9_reg;
reg   [31:0] sum_12_14_reg_1949;
wire   [63:0] i_8_cast3_fu_1247_p1;
reg   [63:0] i_8_cast3_reg_1954;
reg   [31:0] bias3_load_reg_1964;
reg   [31:0] sum_12_30_reg_1969;
wire   [31:0] bitcast_ln80_fu_1251_p1;
reg   [31:0] add9_i1_reg_1979;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage11_subdone;
wire   [63:0] zext_ln78_fu_766_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln78_1_fu_777_p1;
wire   [63:0] zext_ln78_2_fu_792_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln78_3_fu_802_p1;
wire   [63:0] zext_ln78_4_fu_822_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln78_5_fu_832_p1;
wire   [63:0] zext_ln78_6_fu_852_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln78_7_fu_862_p1;
wire   [63:0] zext_ln78_8_fu_882_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln78_9_fu_892_p1;
wire   [63:0] zext_ln78_10_fu_912_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln78_11_fu_922_p1;
wire   [63:0] zext_ln78_12_fu_942_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln78_13_fu_952_p1;
wire   [63:0] zext_ln78_14_fu_972_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln78_15_fu_982_p1;
wire   [63:0] zext_ln78_16_fu_1002_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln78_17_fu_1012_p1;
wire   [63:0] zext_ln78_18_fu_1032_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln78_19_fu_1042_p1;
wire   [63:0] zext_ln78_20_fu_1062_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln78_21_fu_1072_p1;
wire   [63:0] zext_ln78_22_fu_1092_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln78_23_fu_1102_p1;
wire   [63:0] zext_ln78_24_fu_1122_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln78_25_fu_1132_p1;
wire   [63:0] zext_ln78_26_fu_1152_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln78_27_fu_1162_p1;
wire   [63:0] zext_ln78_28_fu_1182_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln78_29_fu_1192_p1;
wire   [63:0] zext_ln78_30_fu_1212_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln78_31_fu_1222_p1;
reg   [3:0] i_fu_172;
wire   [3:0] i_3_fu_752_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_2;
reg   [31:0] grp_fu_659_p0;
reg   [31:0] grp_fu_659_p1;
reg   [31:0] grp_fu_664_p0;
reg   [31:0] grp_fu_664_p1;
reg   [31:0] grp_fu_672_p0;
reg   [31:0] grp_fu_672_p1;
reg   [31:0] grp_fu_676_p0;
reg   [31:0] grp_fu_676_p1;
wire   [8:0] or_ln78_fu_771_p2;
wire   [8:0] or_ln78_1_fu_787_p2;
wire   [8:0] or_ln78_2_fu_797_p2;
wire   [8:0] or_ln78_3_fu_817_p2;
wire   [8:0] or_ln78_4_fu_827_p2;
wire   [8:0] or_ln78_5_fu_847_p2;
wire   [8:0] or_ln78_6_fu_857_p2;
wire   [8:0] or_ln78_7_fu_877_p2;
wire   [8:0] or_ln78_8_fu_887_p2;
wire   [8:0] or_ln78_9_fu_907_p2;
wire   [8:0] or_ln78_10_fu_917_p2;
wire   [8:0] or_ln78_11_fu_937_p2;
wire   [8:0] or_ln78_12_fu_947_p2;
wire   [8:0] or_ln78_13_fu_967_p2;
wire   [8:0] or_ln78_14_fu_977_p2;
wire   [8:0] or_ln78_15_fu_997_p2;
wire   [8:0] or_ln78_16_fu_1007_p2;
wire   [8:0] or_ln78_17_fu_1027_p2;
wire   [8:0] or_ln78_18_fu_1037_p2;
wire   [8:0] or_ln78_19_fu_1057_p2;
wire   [8:0] or_ln78_20_fu_1067_p2;
wire   [8:0] or_ln78_21_fu_1087_p2;
wire   [8:0] or_ln78_22_fu_1097_p2;
wire   [8:0] or_ln78_23_fu_1117_p2;
wire   [8:0] or_ln78_24_fu_1127_p2;
wire   [8:0] or_ln78_25_fu_1147_p2;
wire   [8:0] or_ln78_26_fu_1157_p2;
wire   [8:0] or_ln78_27_fu_1177_p2;
wire   [8:0] or_ln78_28_fu_1187_p2;
wire   [8:0] or_ln78_29_fu_1207_p2;
wire   [8:0] or_ln78_30_fu_1217_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage11;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage15_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage13_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln73_fu_746_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_172 <= i_3_fu_752_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_172 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add9_i1_reg_1979 <= grp_fu_873_p_dout0;
        mul6_i1_10_reg_1704_pp0_iter1_reg <= mul6_i1_10_reg_1704;
        mul6_i1_10_reg_1704_pp0_iter2_reg <= mul6_i1_10_reg_1704_pp0_iter1_reg;
        mul6_i1_10_reg_1704_pp0_iter3_reg <= mul6_i1_10_reg_1704_pp0_iter2_reg;
        mul6_i1_s_reg_1699_pp0_iter1_reg <= mul6_i1_s_reg_1699;
        mul6_i1_s_reg_1699_pp0_iter2_reg <= mul6_i1_s_reg_1699_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias3_load_reg_1964 <= bias3_q0;
        mul6_i1_23_reg_1899_pp0_iter2_reg <= mul6_i1_23_reg_1899;
        mul6_i1_23_reg_1899_pp0_iter3_reg <= mul6_i1_23_reg_1899_pp0_iter2_reg;
        mul6_i1_23_reg_1899_pp0_iter4_reg <= mul6_i1_23_reg_1899_pp0_iter3_reg;
        mul6_i1_23_reg_1899_pp0_iter5_reg <= mul6_i1_23_reg_1899_pp0_iter4_reg;
        mul6_i1_23_reg_1899_pp0_iter6_reg <= mul6_i1_23_reg_1899_pp0_iter5_reg;
        mul6_i1_23_reg_1899_pp0_iter7_reg <= mul6_i1_23_reg_1899_pp0_iter6_reg;
        mul6_i1_24_reg_1904_pp0_iter2_reg <= mul6_i1_24_reg_1904;
        mul6_i1_24_reg_1904_pp0_iter3_reg <= mul6_i1_24_reg_1904_pp0_iter2_reg;
        mul6_i1_24_reg_1904_pp0_iter4_reg <= mul6_i1_24_reg_1904_pp0_iter3_reg;
        mul6_i1_24_reg_1904_pp0_iter5_reg <= mul6_i1_24_reg_1904_pp0_iter4_reg;
        mul6_i1_24_reg_1904_pp0_iter6_reg <= mul6_i1_24_reg_1904_pp0_iter5_reg;
        mul6_i1_24_reg_1904_pp0_iter7_reg <= mul6_i1_24_reg_1904_pp0_iter6_reg;
        mul6_i1_24_reg_1904_pp0_iter8_reg <= mul6_i1_24_reg_1904_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_1426 <= ap_sig_allocacmp_i_2;
        i_2_reg_1426_pp0_iter1_reg <= i_2_reg_1426;
        i_2_reg_1426_pp0_iter2_reg <= i_2_reg_1426_pp0_iter1_reg;
        i_2_reg_1426_pp0_iter3_reg <= i_2_reg_1426_pp0_iter2_reg;
        i_2_reg_1426_pp0_iter4_reg <= i_2_reg_1426_pp0_iter3_reg;
        i_2_reg_1426_pp0_iter5_reg <= i_2_reg_1426_pp0_iter4_reg;
        i_2_reg_1426_pp0_iter6_reg <= i_2_reg_1426_pp0_iter5_reg;
        i_2_reg_1426_pp0_iter7_reg <= i_2_reg_1426_pp0_iter6_reg;
        i_2_reg_1426_pp0_iter8_reg <= i_2_reg_1426_pp0_iter7_reg;
        i_2_reg_1426_pp0_iter9_reg <= i_2_reg_1426_pp0_iter8_reg;
        i_8_cast3_reg_1954[3 : 0] <= i_8_cast3_fu_1247_p1[3 : 0];
        icmp_ln73_reg_1431 <= icmp_ln73_fu_746_p2;
        icmp_ln73_reg_1431_pp0_iter1_reg <= icmp_ln73_reg_1431;
        icmp_ln73_reg_1431_pp0_iter2_reg <= icmp_ln73_reg_1431_pp0_iter1_reg;
        icmp_ln73_reg_1431_pp0_iter3_reg <= icmp_ln73_reg_1431_pp0_iter2_reg;
        icmp_ln73_reg_1431_pp0_iter4_reg <= icmp_ln73_reg_1431_pp0_iter3_reg;
        icmp_ln73_reg_1431_pp0_iter5_reg <= icmp_ln73_reg_1431_pp0_iter4_reg;
        icmp_ln73_reg_1431_pp0_iter6_reg <= icmp_ln73_reg_1431_pp0_iter5_reg;
        icmp_ln73_reg_1431_pp0_iter7_reg <= icmp_ln73_reg_1431_pp0_iter6_reg;
        icmp_ln73_reg_1431_pp0_iter8_reg <= icmp_ln73_reg_1431_pp0_iter7_reg;
        icmp_ln73_reg_1431_pp0_iter9_reg <= icmp_ln73_reg_1431_pp0_iter8_reg;
        mul6_i1_21_reg_1879_pp0_iter2_reg <= mul6_i1_21_reg_1879;
        mul6_i1_21_reg_1879_pp0_iter3_reg <= mul6_i1_21_reg_1879_pp0_iter2_reg;
        mul6_i1_21_reg_1879_pp0_iter4_reg <= mul6_i1_21_reg_1879_pp0_iter3_reg;
        mul6_i1_21_reg_1879_pp0_iter5_reg <= mul6_i1_21_reg_1879_pp0_iter4_reg;
        mul6_i1_21_reg_1879_pp0_iter6_reg <= mul6_i1_21_reg_1879_pp0_iter5_reg;
        mul6_i1_21_reg_1879_pp0_iter7_reg <= mul6_i1_21_reg_1879_pp0_iter6_reg;
        mul6_i1_22_reg_1884_pp0_iter2_reg <= mul6_i1_22_reg_1884;
        mul6_i1_22_reg_1884_pp0_iter3_reg <= mul6_i1_22_reg_1884_pp0_iter2_reg;
        mul6_i1_22_reg_1884_pp0_iter4_reg <= mul6_i1_22_reg_1884_pp0_iter3_reg;
        mul6_i1_22_reg_1884_pp0_iter5_reg <= mul6_i1_22_reg_1884_pp0_iter4_reg;
        mul6_i1_22_reg_1884_pp0_iter6_reg <= mul6_i1_22_reg_1884_pp0_iter5_reg;
        mul6_i1_22_reg_1884_pp0_iter7_reg <= mul6_i1_22_reg_1884_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul6_i1_10_reg_1704 <= grp_fu_853_p_dout0;
        mul6_i1_s_reg_1699 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul6_i1_11_reg_1729 <= grp_fu_849_p_dout0;
        mul6_i1_12_reg_1734 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul6_i1_11_reg_1729_pp0_iter1_reg <= mul6_i1_11_reg_1729;
        mul6_i1_11_reg_1729_pp0_iter2_reg <= mul6_i1_11_reg_1729_pp0_iter1_reg;
        mul6_i1_11_reg_1729_pp0_iter3_reg <= mul6_i1_11_reg_1729_pp0_iter2_reg;
        mul6_i1_12_reg_1734_pp0_iter1_reg <= mul6_i1_12_reg_1734;
        mul6_i1_12_reg_1734_pp0_iter2_reg <= mul6_i1_12_reg_1734_pp0_iter1_reg;
        mul6_i1_12_reg_1734_pp0_iter3_reg <= mul6_i1_12_reg_1734_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul6_i1_13_reg_1759 <= grp_fu_849_p_dout0;
        mul6_i1_14_reg_1764 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul6_i1_13_reg_1759_pp0_iter1_reg <= mul6_i1_13_reg_1759;
        mul6_i1_13_reg_1759_pp0_iter2_reg <= mul6_i1_13_reg_1759_pp0_iter1_reg;
        mul6_i1_13_reg_1759_pp0_iter3_reg <= mul6_i1_13_reg_1759_pp0_iter2_reg;
        mul6_i1_14_reg_1764_pp0_iter1_reg <= mul6_i1_14_reg_1764;
        mul6_i1_14_reg_1764_pp0_iter2_reg <= mul6_i1_14_reg_1764_pp0_iter1_reg;
        mul6_i1_14_reg_1764_pp0_iter3_reg <= mul6_i1_14_reg_1764_pp0_iter2_reg;
        mul6_i1_14_reg_1764_pp0_iter4_reg <= mul6_i1_14_reg_1764_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul6_i1_15_reg_1789 <= grp_fu_849_p_dout0;
        mul6_i1_16_reg_1794 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul6_i1_15_reg_1789_pp0_iter1_reg <= mul6_i1_15_reg_1789;
        mul6_i1_15_reg_1789_pp0_iter2_reg <= mul6_i1_15_reg_1789_pp0_iter1_reg;
        mul6_i1_15_reg_1789_pp0_iter3_reg <= mul6_i1_15_reg_1789_pp0_iter2_reg;
        mul6_i1_15_reg_1789_pp0_iter4_reg <= mul6_i1_15_reg_1789_pp0_iter3_reg;
        mul6_i1_16_reg_1794_pp0_iter1_reg <= mul6_i1_16_reg_1794;
        mul6_i1_16_reg_1794_pp0_iter2_reg <= mul6_i1_16_reg_1794_pp0_iter1_reg;
        mul6_i1_16_reg_1794_pp0_iter3_reg <= mul6_i1_16_reg_1794_pp0_iter2_reg;
        mul6_i1_16_reg_1794_pp0_iter4_reg <= mul6_i1_16_reg_1794_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul6_i1_17_reg_1819 <= grp_fu_849_p_dout0;
        mul6_i1_18_reg_1824 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul6_i1_17_reg_1819_pp0_iter1_reg <= mul6_i1_17_reg_1819;
        mul6_i1_17_reg_1819_pp0_iter2_reg <= mul6_i1_17_reg_1819_pp0_iter1_reg;
        mul6_i1_17_reg_1819_pp0_iter3_reg <= mul6_i1_17_reg_1819_pp0_iter2_reg;
        mul6_i1_17_reg_1819_pp0_iter4_reg <= mul6_i1_17_reg_1819_pp0_iter3_reg;
        mul6_i1_17_reg_1819_pp0_iter5_reg <= mul6_i1_17_reg_1819_pp0_iter4_reg;
        mul6_i1_18_reg_1824_pp0_iter1_reg <= mul6_i1_18_reg_1824;
        mul6_i1_18_reg_1824_pp0_iter2_reg <= mul6_i1_18_reg_1824_pp0_iter1_reg;
        mul6_i1_18_reg_1824_pp0_iter3_reg <= mul6_i1_18_reg_1824_pp0_iter2_reg;
        mul6_i1_18_reg_1824_pp0_iter4_reg <= mul6_i1_18_reg_1824_pp0_iter3_reg;
        mul6_i1_18_reg_1824_pp0_iter5_reg <= mul6_i1_18_reg_1824_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul6_i1_19_reg_1849 <= grp_fu_849_p_dout0;
        mul6_i1_20_reg_1854 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul6_i1_19_reg_1849_pp0_iter1_reg <= mul6_i1_19_reg_1849;
        mul6_i1_19_reg_1849_pp0_iter2_reg <= mul6_i1_19_reg_1849_pp0_iter1_reg;
        mul6_i1_19_reg_1849_pp0_iter3_reg <= mul6_i1_19_reg_1849_pp0_iter2_reg;
        mul6_i1_19_reg_1849_pp0_iter4_reg <= mul6_i1_19_reg_1849_pp0_iter3_reg;
        mul6_i1_19_reg_1849_pp0_iter5_reg <= mul6_i1_19_reg_1849_pp0_iter4_reg;
        mul6_i1_20_reg_1854_pp0_iter1_reg <= mul6_i1_20_reg_1854;
        mul6_i1_20_reg_1854_pp0_iter2_reg <= mul6_i1_20_reg_1854_pp0_iter1_reg;
        mul6_i1_20_reg_1854_pp0_iter3_reg <= mul6_i1_20_reg_1854_pp0_iter2_reg;
        mul6_i1_20_reg_1854_pp0_iter4_reg <= mul6_i1_20_reg_1854_pp0_iter3_reg;
        mul6_i1_20_reg_1854_pp0_iter5_reg <= mul6_i1_20_reg_1854_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul6_i1_1_reg_1554 <= grp_fu_853_p_dout0;
        mul6_i1_reg_1549 <= grp_fu_849_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul6_i1_21_reg_1879 <= grp_fu_849_p_dout0;
        mul6_i1_22_reg_1884 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul6_i1_23_reg_1899 <= grp_fu_849_p_dout0;
        mul6_i1_24_reg_1904 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul6_i1_25_reg_1919 <= grp_fu_849_p_dout0;
        mul6_i1_26_reg_1924 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul6_i1_25_reg_1919_pp0_iter2_reg <= mul6_i1_25_reg_1919;
        mul6_i1_25_reg_1919_pp0_iter3_reg <= mul6_i1_25_reg_1919_pp0_iter2_reg;
        mul6_i1_25_reg_1919_pp0_iter4_reg <= mul6_i1_25_reg_1919_pp0_iter3_reg;
        mul6_i1_25_reg_1919_pp0_iter5_reg <= mul6_i1_25_reg_1919_pp0_iter4_reg;
        mul6_i1_25_reg_1919_pp0_iter6_reg <= mul6_i1_25_reg_1919_pp0_iter5_reg;
        mul6_i1_25_reg_1919_pp0_iter7_reg <= mul6_i1_25_reg_1919_pp0_iter6_reg;
        mul6_i1_25_reg_1919_pp0_iter8_reg <= mul6_i1_25_reg_1919_pp0_iter7_reg;
        mul6_i1_26_reg_1924_pp0_iter2_reg <= mul6_i1_26_reg_1924;
        mul6_i1_26_reg_1924_pp0_iter3_reg <= mul6_i1_26_reg_1924_pp0_iter2_reg;
        mul6_i1_26_reg_1924_pp0_iter4_reg <= mul6_i1_26_reg_1924_pp0_iter3_reg;
        mul6_i1_26_reg_1924_pp0_iter5_reg <= mul6_i1_26_reg_1924_pp0_iter4_reg;
        mul6_i1_26_reg_1924_pp0_iter6_reg <= mul6_i1_26_reg_1924_pp0_iter5_reg;
        mul6_i1_26_reg_1924_pp0_iter7_reg <= mul6_i1_26_reg_1924_pp0_iter6_reg;
        mul6_i1_26_reg_1924_pp0_iter8_reg <= mul6_i1_26_reg_1924_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul6_i1_27_reg_1929 <= grp_fu_849_p_dout0;
        mul6_i1_28_reg_1934 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul6_i1_27_reg_1929_pp0_iter2_reg <= mul6_i1_27_reg_1929;
        mul6_i1_27_reg_1929_pp0_iter3_reg <= mul6_i1_27_reg_1929_pp0_iter2_reg;
        mul6_i1_27_reg_1929_pp0_iter4_reg <= mul6_i1_27_reg_1929_pp0_iter3_reg;
        mul6_i1_27_reg_1929_pp0_iter5_reg <= mul6_i1_27_reg_1929_pp0_iter4_reg;
        mul6_i1_27_reg_1929_pp0_iter6_reg <= mul6_i1_27_reg_1929_pp0_iter5_reg;
        mul6_i1_27_reg_1929_pp0_iter7_reg <= mul6_i1_27_reg_1929_pp0_iter6_reg;
        mul6_i1_27_reg_1929_pp0_iter8_reg <= mul6_i1_27_reg_1929_pp0_iter7_reg;
        mul6_i1_28_reg_1934_pp0_iter2_reg <= mul6_i1_28_reg_1934;
        mul6_i1_28_reg_1934_pp0_iter3_reg <= mul6_i1_28_reg_1934_pp0_iter2_reg;
        mul6_i1_28_reg_1934_pp0_iter4_reg <= mul6_i1_28_reg_1934_pp0_iter3_reg;
        mul6_i1_28_reg_1934_pp0_iter5_reg <= mul6_i1_28_reg_1934_pp0_iter4_reg;
        mul6_i1_28_reg_1934_pp0_iter6_reg <= mul6_i1_28_reg_1934_pp0_iter5_reg;
        mul6_i1_28_reg_1934_pp0_iter7_reg <= mul6_i1_28_reg_1934_pp0_iter6_reg;
        mul6_i1_28_reg_1934_pp0_iter8_reg <= mul6_i1_28_reg_1934_pp0_iter7_reg;
        mul6_i1_28_reg_1934_pp0_iter9_reg <= mul6_i1_28_reg_1934_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul6_i1_29_reg_1939 <= grp_fu_849_p_dout0;
        mul6_i1_30_reg_1944 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul6_i1_29_reg_1939_pp0_iter2_reg <= mul6_i1_29_reg_1939;
        mul6_i1_29_reg_1939_pp0_iter3_reg <= mul6_i1_29_reg_1939_pp0_iter2_reg;
        mul6_i1_29_reg_1939_pp0_iter4_reg <= mul6_i1_29_reg_1939_pp0_iter3_reg;
        mul6_i1_29_reg_1939_pp0_iter5_reg <= mul6_i1_29_reg_1939_pp0_iter4_reg;
        mul6_i1_29_reg_1939_pp0_iter6_reg <= mul6_i1_29_reg_1939_pp0_iter5_reg;
        mul6_i1_29_reg_1939_pp0_iter7_reg <= mul6_i1_29_reg_1939_pp0_iter6_reg;
        mul6_i1_29_reg_1939_pp0_iter8_reg <= mul6_i1_29_reg_1939_pp0_iter7_reg;
        mul6_i1_29_reg_1939_pp0_iter9_reg <= mul6_i1_29_reg_1939_pp0_iter8_reg;
        mul6_i1_30_reg_1944_pp0_iter2_reg <= mul6_i1_30_reg_1944;
        mul6_i1_30_reg_1944_pp0_iter3_reg <= mul6_i1_30_reg_1944_pp0_iter2_reg;
        mul6_i1_30_reg_1944_pp0_iter4_reg <= mul6_i1_30_reg_1944_pp0_iter3_reg;
        mul6_i1_30_reg_1944_pp0_iter5_reg <= mul6_i1_30_reg_1944_pp0_iter4_reg;
        mul6_i1_30_reg_1944_pp0_iter6_reg <= mul6_i1_30_reg_1944_pp0_iter5_reg;
        mul6_i1_30_reg_1944_pp0_iter7_reg <= mul6_i1_30_reg_1944_pp0_iter6_reg;
        mul6_i1_30_reg_1944_pp0_iter8_reg <= mul6_i1_30_reg_1944_pp0_iter7_reg;
        mul6_i1_30_reg_1944_pp0_iter9_reg <= mul6_i1_30_reg_1944_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul6_i1_2_reg_1579 <= grp_fu_849_p_dout0;
        mul6_i1_3_reg_1584 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul6_i1_4_reg_1609 <= grp_fu_849_p_dout0;
        mul6_i1_5_reg_1614 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul6_i1_4_reg_1609_pp0_iter1_reg <= mul6_i1_4_reg_1609;
        mul6_i1_5_reg_1614_pp0_iter1_reg <= mul6_i1_5_reg_1614;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul6_i1_6_reg_1639 <= grp_fu_849_p_dout0;
        mul6_i1_7_reg_1644 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul6_i1_6_reg_1639_pp0_iter1_reg <= mul6_i1_6_reg_1639;
        mul6_i1_7_reg_1644_pp0_iter1_reg <= mul6_i1_7_reg_1644;
        mul6_i1_7_reg_1644_pp0_iter2_reg <= mul6_i1_7_reg_1644_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul6_i1_8_reg_1669 <= grp_fu_849_p_dout0;
        mul6_i1_9_reg_1674 <= grp_fu_853_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul6_i1_8_reg_1669_pp0_iter1_reg <= mul6_i1_8_reg_1669;
        mul6_i1_8_reg_1669_pp0_iter2_reg <= mul6_i1_8_reg_1669_pp0_iter1_reg;
        mul6_i1_9_reg_1674_pp0_iter1_reg <= mul6_i1_9_reg_1674;
        mul6_i1_9_reg_1674_pp0_iter2_reg <= mul6_i1_9_reg_1674_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_fu_746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_i_reg_1435[8 : 5] <= mul_i_fu_758_p3[8 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_680 <= weight3_q1;
        reg_684 <= weight3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln73_reg_1431 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_688 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_693 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_698 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_703 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_708 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_713 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_718 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_723 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_728 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_733 <= grp_fu_845_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sum_12_14_reg_1949 <= grp_fu_841_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sum_12_30_reg_1969 <= grp_fu_845_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_1431 == 1'd1) & (1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (icmp_ln73_reg_1431_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter9_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias3_ce0 = 1'b1;
    end else begin
        bias3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_659_p0 = reg_708;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_659_p0 = reg_703;
    end else if ((((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_659_p0 = reg_698;
    end else if ((((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_659_p0 = reg_693;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_659_p0 = reg_688;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_659_p0 = mul6_i1_reg_1549;
    end else begin
        grp_fu_659_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_659_p1 = mul6_i1_14_reg_1764_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_659_p1 = mul6_i1_13_reg_1759_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_659_p1 = mul6_i1_12_reg_1734_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_659_p1 = mul6_i1_11_reg_1729_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_659_p1 = mul6_i1_10_reg_1704_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_659_p1 = mul6_i1_s_reg_1699_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_659_p1 = mul6_i1_9_reg_1674_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_659_p1 = mul6_i1_8_reg_1669_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_659_p1 = mul6_i1_7_reg_1644_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_659_p1 = mul6_i1_6_reg_1639_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_659_p1 = mul6_i1_5_reg_1614_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_659_p1 = mul6_i1_4_reg_1609_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_659_p1 = mul6_i1_3_reg_1584;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_659_p1 = mul6_i1_2_reg_1579;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_659_p1 = mul6_i1_1_reg_1554;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_659_p1 = 32'd0;
    end else begin
        grp_fu_659_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_664_p0 = reg_733;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_664_p0 = reg_728;
    end else if ((((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_664_p0 = reg_723;
    end else if ((((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_664_p0 = reg_718;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_664_p0 = reg_713;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_664_p0 = sum_12_14_reg_1949;
    end else begin
        grp_fu_664_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_664_p1 = mul6_i1_30_reg_1944_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_664_p1 = mul6_i1_29_reg_1939_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_664_p1 = mul6_i1_28_reg_1934_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_664_p1 = mul6_i1_27_reg_1929_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_664_p1 = mul6_i1_26_reg_1924_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_664_p1 = mul6_i1_25_reg_1919_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_664_p1 = mul6_i1_24_reg_1904_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_664_p1 = mul6_i1_23_reg_1899_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_664_p1 = mul6_i1_22_reg_1884_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_664_p1 = mul6_i1_21_reg_1879_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_664_p1 = mul6_i1_20_reg_1854_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_664_p1 = mul6_i1_19_reg_1849_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_664_p1 = mul6_i1_18_reg_1824_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_664_p1 = mul6_i1_17_reg_1819_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_664_p1 = mul6_i1_16_reg_1794_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_664_p1 = mul6_i1_15_reg_1789_pp0_iter4_reg;
    end else begin
        grp_fu_664_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_672_p0 = x_assign_2_load_30;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_672_p0 = x_assign_2_load_28;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_672_p0 = x_assign_2_load_26;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_672_p0 = x_assign_2_load_24;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_672_p0 = x_assign_2_load_22;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_672_p0 = x_assign_2_load_20;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_672_p0 = x_assign_2_load_18;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_672_p0 = x_assign_2_load_16;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_672_p0 = x_assign_2_load_14;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_672_p0 = x_assign_2_load_12;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_672_p0 = x_assign_2_load_10;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_672_p0 = x_assign_2_load_8;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_672_p0 = x_assign_2_load_6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_672_p0 = x_assign_2_load_4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_672_p0 = x_assign_2_load_2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_672_p0 = x_assign_2_load;
    end else begin
        grp_fu_672_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_672_p1 = bitcast_ln78_30_fu_1237_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_672_p1 = bitcast_ln78_28_fu_1227_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_672_p1 = bitcast_ln78_26_fu_1197_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_672_p1 = bitcast_ln78_24_fu_1167_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_672_p1 = bitcast_ln78_22_fu_1137_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_672_p1 = bitcast_ln78_20_fu_1107_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_672_p1 = bitcast_ln78_18_fu_1077_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_672_p1 = bitcast_ln78_16_fu_1047_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_672_p1 = bitcast_ln78_14_fu_1017_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_672_p1 = bitcast_ln78_12_fu_987_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_672_p1 = bitcast_ln78_10_fu_957_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_672_p1 = bitcast_ln78_8_fu_927_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_672_p1 = bitcast_ln78_6_fu_897_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_672_p1 = bitcast_ln78_4_fu_867_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_672_p1 = bitcast_ln78_2_fu_837_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_672_p1 = bitcast_ln78_fu_807_p1;
    end else begin
        grp_fu_672_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_676_p0 = x_assign_2_load_31;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_676_p0 = x_assign_2_load_29;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_676_p0 = x_assign_2_load_27;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_676_p0 = x_assign_2_load_25;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_676_p0 = x_assign_2_load_23;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_676_p0 = x_assign_2_load_21;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_676_p0 = x_assign_2_load_19;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_676_p0 = x_assign_2_load_17;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_676_p0 = x_assign_2_load_15;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_676_p0 = x_assign_2_load_13;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_676_p0 = x_assign_2_load_11;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_676_p0 = x_assign_2_load_9;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_676_p0 = x_assign_2_load_7;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_676_p0 = x_assign_2_load_5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_676_p0 = x_assign_2_load_3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_676_p0 = x_assign_2_load_1;
    end else begin
        grp_fu_676_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_676_p1 = bitcast_ln78_31_fu_1242_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_676_p1 = bitcast_ln78_29_fu_1232_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_676_p1 = bitcast_ln78_27_fu_1202_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_676_p1 = bitcast_ln78_25_fu_1172_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_676_p1 = bitcast_ln78_23_fu_1142_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_676_p1 = bitcast_ln78_21_fu_1112_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_676_p1 = bitcast_ln78_19_fu_1082_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_676_p1 = bitcast_ln78_17_fu_1052_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_676_p1 = bitcast_ln78_15_fu_1022_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_676_p1 = bitcast_ln78_13_fu_992_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_676_p1 = bitcast_ln78_11_fu_962_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_676_p1 = bitcast_ln78_9_fu_932_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_676_p1 = bitcast_ln78_7_fu_902_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_676_p1 = bitcast_ln78_5_fu_872_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_676_p1 = bitcast_ln78_3_fu_842_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_676_p1 = bitcast_ln78_1_fu_812_p1;
    end else begin
        grp_fu_676_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            weight3_address0 = zext_ln78_31_fu_1222_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            weight3_address0 = zext_ln78_29_fu_1192_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            weight3_address0 = zext_ln78_27_fu_1162_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            weight3_address0 = zext_ln78_25_fu_1132_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            weight3_address0 = zext_ln78_23_fu_1102_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            weight3_address0 = zext_ln78_21_fu_1072_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            weight3_address0 = zext_ln78_19_fu_1042_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            weight3_address0 = zext_ln78_17_fu_1012_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weight3_address0 = zext_ln78_15_fu_982_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            weight3_address0 = zext_ln78_13_fu_952_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weight3_address0 = zext_ln78_11_fu_922_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weight3_address0 = zext_ln78_9_fu_892_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weight3_address0 = zext_ln78_7_fu_862_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weight3_address0 = zext_ln78_5_fu_832_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weight3_address0 = zext_ln78_3_fu_802_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weight3_address0 = zext_ln78_1_fu_777_p1;
        end else begin
            weight3_address0 = 'bx;
        end
    end else begin
        weight3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            weight3_address1 = zext_ln78_30_fu_1212_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            weight3_address1 = zext_ln78_28_fu_1182_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            weight3_address1 = zext_ln78_26_fu_1152_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            weight3_address1 = zext_ln78_24_fu_1122_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            weight3_address1 = zext_ln78_22_fu_1092_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            weight3_address1 = zext_ln78_20_fu_1062_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            weight3_address1 = zext_ln78_18_fu_1032_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            weight3_address1 = zext_ln78_16_fu_1002_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weight3_address1 = zext_ln78_14_fu_972_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            weight3_address1 = zext_ln78_12_fu_942_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weight3_address1 = zext_ln78_10_fu_912_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weight3_address1 = zext_ln78_8_fu_882_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weight3_address1 = zext_ln78_6_fu_852_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weight3_address1 = zext_ln78_4_fu_822_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weight3_address1 = zext_ln78_2_fu_792_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weight3_address1 = zext_ln78_fu_766_p1;
        end else begin
            weight3_address1 = 'bx;
        end
    end else begin
        weight3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weight3_ce0 = 1'b1;
    end else begin
        weight3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weight3_ce1 = 1'b1;
    end else begin
        weight3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter9_stage11) & (ap_idle_pp0_0to8 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage9_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage10_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage11_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage12_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage13_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage14_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage15_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage8_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage9_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage10_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage11_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage12_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage13_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage14_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage15_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage8_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage9_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage10_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage11_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage12_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage13_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage14_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage15_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage8_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage9_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage10_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp0_stage11_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp0_stage12_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp0_stage13_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp0_stage14_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp0_stage15_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp0_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp0_stage8_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp0_stage9_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp0_stage10_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp0_stage11_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign bias3_address0 = i_8_cast3_fu_1247_p1;

assign bitcast_ln78_10_fu_957_p1 = reg_680;

assign bitcast_ln78_11_fu_962_p1 = reg_684;

assign bitcast_ln78_12_fu_987_p1 = reg_680;

assign bitcast_ln78_13_fu_992_p1 = reg_684;

assign bitcast_ln78_14_fu_1017_p1 = reg_680;

assign bitcast_ln78_15_fu_1022_p1 = reg_684;

assign bitcast_ln78_16_fu_1047_p1 = reg_680;

assign bitcast_ln78_17_fu_1052_p1 = reg_684;

assign bitcast_ln78_18_fu_1077_p1 = reg_680;

assign bitcast_ln78_19_fu_1082_p1 = reg_684;

assign bitcast_ln78_1_fu_812_p1 = reg_684;

assign bitcast_ln78_20_fu_1107_p1 = reg_680;

assign bitcast_ln78_21_fu_1112_p1 = reg_684;

assign bitcast_ln78_22_fu_1137_p1 = reg_680;

assign bitcast_ln78_23_fu_1142_p1 = reg_684;

assign bitcast_ln78_24_fu_1167_p1 = reg_680;

assign bitcast_ln78_25_fu_1172_p1 = reg_684;

assign bitcast_ln78_26_fu_1197_p1 = reg_680;

assign bitcast_ln78_27_fu_1202_p1 = reg_684;

assign bitcast_ln78_28_fu_1227_p1 = reg_680;

assign bitcast_ln78_29_fu_1232_p1 = reg_684;

assign bitcast_ln78_2_fu_837_p1 = reg_680;

assign bitcast_ln78_30_fu_1237_p1 = reg_680;

assign bitcast_ln78_31_fu_1242_p1 = reg_684;

assign bitcast_ln78_3_fu_842_p1 = reg_684;

assign bitcast_ln78_4_fu_867_p1 = reg_680;

assign bitcast_ln78_5_fu_872_p1 = reg_684;

assign bitcast_ln78_6_fu_897_p1 = reg_680;

assign bitcast_ln78_7_fu_902_p1 = reg_684;

assign bitcast_ln78_8_fu_927_p1 = reg_680;

assign bitcast_ln78_9_fu_932_p1 = reg_684;

assign bitcast_ln78_fu_807_p1 = reg_680;

assign bitcast_ln80_fu_1251_p1 = bias3_load_reg_1964;

assign grp_fu_841_p_ce = 1'b1;

assign grp_fu_841_p_din0 = grp_fu_659_p0;

assign grp_fu_841_p_din1 = grp_fu_659_p1;

assign grp_fu_841_p_opcode = 2'd0;

assign grp_fu_845_p_ce = 1'b1;

assign grp_fu_845_p_din0 = grp_fu_664_p0;

assign grp_fu_845_p_din1 = grp_fu_664_p1;

assign grp_fu_845_p_opcode = 2'd0;

assign grp_fu_849_p_ce = 1'b1;

assign grp_fu_849_p_din0 = grp_fu_672_p0;

assign grp_fu_849_p_din1 = grp_fu_672_p1;

assign grp_fu_853_p_ce = 1'b1;

assign grp_fu_853_p_din0 = grp_fu_676_p0;

assign grp_fu_853_p_din1 = grp_fu_676_p1;

assign grp_fu_873_p_ce = 1'b1;

assign grp_fu_873_p_din0 = sum_12_30_reg_1969;

assign grp_fu_873_p_din1 = bitcast_ln80_fu_1251_p1;

assign grp_fu_873_p_opcode = 2'd0;

assign i_3_fu_752_p2 = (ap_sig_allocacmp_i_2 + 4'd1);

assign i_8_cast3_fu_1247_p1 = i_2_reg_1426_pp0_iter9_reg;

assign icmp_ln73_fu_746_p2 = ((ap_sig_allocacmp_i_2 == 4'd10) ? 1'b1 : 1'b0);

assign mul_i_fu_758_p3 = {{ap_sig_allocacmp_i_2}, {5'd0}};

assign or_ln78_10_fu_917_p2 = (mul_i_reg_1435 | 9'd11);

assign or_ln78_11_fu_937_p2 = (mul_i_reg_1435 | 9'd12);

assign or_ln78_12_fu_947_p2 = (mul_i_reg_1435 | 9'd13);

assign or_ln78_13_fu_967_p2 = (mul_i_reg_1435 | 9'd14);

assign or_ln78_14_fu_977_p2 = (mul_i_reg_1435 | 9'd15);

assign or_ln78_15_fu_997_p2 = (mul_i_reg_1435 | 9'd16);

assign or_ln78_16_fu_1007_p2 = (mul_i_reg_1435 | 9'd17);

assign or_ln78_17_fu_1027_p2 = (mul_i_reg_1435 | 9'd18);

assign or_ln78_18_fu_1037_p2 = (mul_i_reg_1435 | 9'd19);

assign or_ln78_19_fu_1057_p2 = (mul_i_reg_1435 | 9'd20);

assign or_ln78_1_fu_787_p2 = (mul_i_reg_1435 | 9'd2);

assign or_ln78_20_fu_1067_p2 = (mul_i_reg_1435 | 9'd21);

assign or_ln78_21_fu_1087_p2 = (mul_i_reg_1435 | 9'd22);

assign or_ln78_22_fu_1097_p2 = (mul_i_reg_1435 | 9'd23);

assign or_ln78_23_fu_1117_p2 = (mul_i_reg_1435 | 9'd24);

assign or_ln78_24_fu_1127_p2 = (mul_i_reg_1435 | 9'd25);

assign or_ln78_25_fu_1147_p2 = (mul_i_reg_1435 | 9'd26);

assign or_ln78_26_fu_1157_p2 = (mul_i_reg_1435 | 9'd27);

assign or_ln78_27_fu_1177_p2 = (mul_i_reg_1435 | 9'd28);

assign or_ln78_28_fu_1187_p2 = (mul_i_reg_1435 | 9'd29);

assign or_ln78_29_fu_1207_p2 = (mul_i_reg_1435 | 9'd30);

assign or_ln78_2_fu_797_p2 = (mul_i_reg_1435 | 9'd3);

assign or_ln78_30_fu_1217_p2 = (mul_i_reg_1435 | 9'd31);

assign or_ln78_3_fu_817_p2 = (mul_i_reg_1435 | 9'd4);

assign or_ln78_4_fu_827_p2 = (mul_i_reg_1435 | 9'd5);

assign or_ln78_5_fu_847_p2 = (mul_i_reg_1435 | 9'd6);

assign or_ln78_6_fu_857_p2 = (mul_i_reg_1435 | 9'd7);

assign or_ln78_7_fu_877_p2 = (mul_i_reg_1435 | 9'd8);

assign or_ln78_8_fu_887_p2 = (mul_i_reg_1435 | 9'd9);

assign or_ln78_9_fu_907_p2 = (mul_i_reg_1435 | 9'd10);

assign or_ln78_fu_771_p2 = (mul_i_fu_758_p3 | 9'd1);

assign y_address0 = i_8_cast3_reg_1954;

assign y_d0 = add9_i1_reg_1979;

assign zext_ln78_10_fu_912_p1 = or_ln78_9_fu_907_p2;

assign zext_ln78_11_fu_922_p1 = or_ln78_10_fu_917_p2;

assign zext_ln78_12_fu_942_p1 = or_ln78_11_fu_937_p2;

assign zext_ln78_13_fu_952_p1 = or_ln78_12_fu_947_p2;

assign zext_ln78_14_fu_972_p1 = or_ln78_13_fu_967_p2;

assign zext_ln78_15_fu_982_p1 = or_ln78_14_fu_977_p2;

assign zext_ln78_16_fu_1002_p1 = or_ln78_15_fu_997_p2;

assign zext_ln78_17_fu_1012_p1 = or_ln78_16_fu_1007_p2;

assign zext_ln78_18_fu_1032_p1 = or_ln78_17_fu_1027_p2;

assign zext_ln78_19_fu_1042_p1 = or_ln78_18_fu_1037_p2;

assign zext_ln78_1_fu_777_p1 = or_ln78_fu_771_p2;

assign zext_ln78_20_fu_1062_p1 = or_ln78_19_fu_1057_p2;

assign zext_ln78_21_fu_1072_p1 = or_ln78_20_fu_1067_p2;

assign zext_ln78_22_fu_1092_p1 = or_ln78_21_fu_1087_p2;

assign zext_ln78_23_fu_1102_p1 = or_ln78_22_fu_1097_p2;

assign zext_ln78_24_fu_1122_p1 = or_ln78_23_fu_1117_p2;

assign zext_ln78_25_fu_1132_p1 = or_ln78_24_fu_1127_p2;

assign zext_ln78_26_fu_1152_p1 = or_ln78_25_fu_1147_p2;

assign zext_ln78_27_fu_1162_p1 = or_ln78_26_fu_1157_p2;

assign zext_ln78_28_fu_1182_p1 = or_ln78_27_fu_1177_p2;

assign zext_ln78_29_fu_1192_p1 = or_ln78_28_fu_1187_p2;

assign zext_ln78_2_fu_792_p1 = or_ln78_1_fu_787_p2;

assign zext_ln78_30_fu_1212_p1 = or_ln78_29_fu_1207_p2;

assign zext_ln78_31_fu_1222_p1 = or_ln78_30_fu_1217_p2;

assign zext_ln78_3_fu_802_p1 = or_ln78_2_fu_797_p2;

assign zext_ln78_4_fu_822_p1 = or_ln78_3_fu_817_p2;

assign zext_ln78_5_fu_832_p1 = or_ln78_4_fu_827_p2;

assign zext_ln78_6_fu_852_p1 = or_ln78_5_fu_847_p2;

assign zext_ln78_7_fu_862_p1 = or_ln78_6_fu_857_p2;

assign zext_ln78_8_fu_882_p1 = or_ln78_7_fu_877_p2;

assign zext_ln78_9_fu_892_p1 = or_ln78_8_fu_887_p2;

assign zext_ln78_fu_766_p1 = mul_i_fu_758_p3;

always @ (posedge ap_clk) begin
    mul_i_reg_1435[4:0] <= 5'b00000;
    i_8_cast3_reg_1954[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //cnn_top_cnn_top_Pipeline_VITIS_LOOP_73_1
