// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_maxpool2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        x_address1,
        x_ce1,
        x_q1,
        x_address2,
        x_ce2,
        x_q2,
        x_address3,
        x_ce3,
        x_q3,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_857_p_din0,
        grp_fu_857_p_din1,
        grp_fu_857_p_opcode,
        grp_fu_857_p_dout0,
        grp_fu_857_p_ce,
        grp_fu_861_p_din0,
        grp_fu_861_p_din1,
        grp_fu_861_p_opcode,
        grp_fu_861_p_dout0,
        grp_fu_861_p_ce,
        grp_fu_865_p_din0,
        grp_fu_865_p_din1,
        grp_fu_865_p_opcode,
        grp_fu_865_p_dout0,
        grp_fu_865_p_ce,
        grp_fu_869_p_din0,
        grp_fu_869_p_din1,
        grp_fu_869_p_opcode,
        grp_fu_869_p_dout0,
        grp_fu_869_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [10:0] x_address1;
output   x_ce1;
input  [31:0] x_q1;
output  [10:0] x_address2;
output   x_ce2;
input  [31:0] x_q2;
output  [10:0] x_address3;
output   x_ce3;
input  [31:0] x_q3;
output  [8:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_857_p_din0;
output  [31:0] grp_fu_857_p_din1;
output  [4:0] grp_fu_857_p_opcode;
input  [0:0] grp_fu_857_p_dout0;
output   grp_fu_857_p_ce;
output  [31:0] grp_fu_861_p_din0;
output  [31:0] grp_fu_861_p_din1;
output  [4:0] grp_fu_861_p_opcode;
input  [0:0] grp_fu_861_p_dout0;
output   grp_fu_861_p_ce;
output  [31:0] grp_fu_865_p_din0;
output  [31:0] grp_fu_865_p_din1;
output  [4:0] grp_fu_865_p_opcode;
input  [0:0] grp_fu_865_p_dout0;
output   grp_fu_865_p_ce;
output  [31:0] grp_fu_869_p_din0;
output  [31:0] grp_fu_869_p_din1;
output  [4:0] grp_fu_869_p_opcode;
input  [0:0] grp_fu_869_p_dout0;
output   grp_fu_869_p_ce;

reg ap_idle;
reg x_ce0;
reg x_ce1;
reg x_ce2;
reg x_ce3;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln86_fu_327_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [8:0] empty_42_fu_311_p2;
reg   [8:0] empty_42_reg_1248;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] empty_43_fu_317_p2;
reg   [7:0] empty_43_reg_1253;
wire   [6:0] empty_44_fu_323_p1;
reg   [6:0] empty_44_reg_1259;
reg   [0:0] icmp_ln86_reg_1264;
wire   [0:0] icmp_ln88_fu_351_p2;
reg   [0:0] icmp_ln88_reg_1268;
wire   [7:0] p_mid129_fu_395_p2;
reg   [7:0] p_mid129_reg_1275;
wire   [8:0] p_mid145_fu_451_p2;
reg   [8:0] p_mid145_reg_1281;
wire   [6:0] empty_53_fu_457_p1;
reg   [6:0] empty_53_reg_1286;
wire   [0:0] icmp_ln90_mid276_fu_473_p2;
reg   [0:0] icmp_ln90_mid276_reg_1291;
wire   [3:0] select_ln88_fu_499_p3;
reg   [3:0] select_ln88_reg_1298;
wire  signed [6:0] p_mid18_fu_525_p2;
reg  signed [6:0] p_mid18_reg_1304;
wire   [5:0] empty_55_fu_531_p1;
reg   [5:0] empty_55_reg_1309;
wire   [7:0] p_mid112_fu_535_p2;
reg   [7:0] p_mid112_reg_1314;
wire   [6:0] empty_56_fu_541_p1;
reg   [6:0] empty_56_reg_1320;
wire   [8:0] add_ln102_fu_891_p2;
reg   [8:0] add_ln102_reg_1345;
reg   [8:0] add_ln102_reg_1345_pp0_iter2_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter3_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter4_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter5_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter6_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter7_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter8_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter9_reg;
reg   [8:0] add_ln102_reg_1345_pp0_iter10_reg;
reg   [31:0] x_load_reg_1350;
reg   [31:0] x_load_reg_1350_pp0_iter3_reg;
reg   [31:0] x_load_4_reg_1357;
reg   [31:0] x_load_4_reg_1357_pp0_iter3_reg;
reg   [31:0] x_load_4_reg_1357_pp0_iter4_reg;
reg   [31:0] x_load_4_reg_1357_pp0_iter5_reg;
reg   [31:0] x_load_5_reg_1364;
reg   [31:0] x_load_5_reg_1364_pp0_iter3_reg;
reg   [31:0] x_load_5_reg_1364_pp0_iter4_reg;
reg   [31:0] x_load_5_reg_1364_pp0_iter5_reg;
reg   [31:0] x_load_5_reg_1364_pp0_iter6_reg;
reg   [31:0] x_load_5_reg_1364_pp0_iter7_reg;
reg   [31:0] x_load_6_reg_1371;
reg   [31:0] x_load_6_reg_1371_pp0_iter3_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter4_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter5_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter6_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter7_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter8_reg;
reg   [31:0] x_load_6_reg_1371_pp0_iter9_reg;
wire   [31:0] select_ln98_fu_938_p3;
reg   [31:0] select_ln98_reg_1378;
reg   [31:0] select_ln98_reg_1378_pp0_iter5_reg;
wire   [31:0] select_ln98_4_fu_1027_p3;
reg   [31:0] select_ln98_4_reg_1385;
reg   [31:0] select_ln98_4_reg_1385_pp0_iter7_reg;
wire   [31:0] select_ln98_5_fu_1115_p3;
reg   [31:0] select_ln98_5_reg_1392;
reg   [31:0] select_ln98_5_reg_1392_pp0_iter9_reg;
wire   [31:0] select_ln98_6_fu_1203_p3;
reg   [31:0] select_ln98_6_reg_1399;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln98_fu_840_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln98_4_fu_851_p1;
wire   [63:0] zext_ln98_5_fu_862_p1;
wire   [63:0] zext_ln98_6_fu_873_p1;
wire   [63:0] zext_ln102_2_fu_1209_p1;
reg   [3:0] w_fu_84;
wire   [3:0] add_ln90_fu_553_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_w_load;
reg   [3:0] h_fu_88;
wire   [3:0] select_ln88_9_fu_545_p3;
reg   [3:0] ap_sig_allocacmp_h_2;
reg   [5:0] indvar_flatten_fu_92;
wire   [5:0] select_ln88_10_fu_565_p3;
reg   [5:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [3:0] ch_fu_96;
wire   [3:0] select_ln86_fu_479_p3;
reg   [3:0] ap_sig_allocacmp_ch_2;
reg   [8:0] indvar_flatten77_fu_100;
wire   [8:0] add_ln86_2_fu_333_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten77_load;
wire   [2:0] empty_fu_221_p1;
wire   [6:0] p_shl1_fu_225_p3;
wire   [3:0] empty_37_fu_237_p2;
wire   [7:0] p_shl1_cast_fu_233_p1;
wire   [7:0] p_shl2_cast_fu_243_p1;
wire   [5:0] p_shl_fu_253_p3;
wire   [6:0] p_shl_cast_fu_261_p1;
wire   [6:0] ch_cast_fu_217_p1;
wire   [2:0] tmp_12_fu_275_p4;
wire   [6:0] p_cast_fu_285_p1;
wire   [6:0] empty_39_fu_265_p2;
wire  signed [6:0] empty_40_fu_289_p2;
wire   [5:0] empty_41_fu_299_p1;
wire   [8:0] p_shl3_fu_303_p3;
wire  signed [8:0] p_cast2_fu_295_p1;
wire   [7:0] zext_ln88_fu_271_p1;
wire   [7:0] empty_38_fu_247_p2;
wire   [3:0] add_ln86_fu_345_p2;
wire   [2:0] empty_50_fu_369_p1;
wire   [6:0] p_shl1_mid1_fu_373_p3;
wire   [3:0] empty_51_fu_385_p2;
wire   [7:0] p_shl1_cast_mid1_fu_381_p1;
wire   [7:0] p_shl2_cast_mid1_fu_391_p1;
wire   [5:0] p_shl_mid1_fu_409_p3;
wire   [6:0] p_shl_cast_mid1_fu_417_p1;
wire   [6:0] ch_cast_mid1_fu_365_p1;
wire  signed [6:0] p_mid131_fu_421_p2;
wire   [5:0] empty_52_fu_439_p1;
wire   [8:0] p_shl3_mid_fu_443_p3;
wire  signed [8:0] p_cast2_mid141_fu_435_p1;
wire   [0:0] icmp_ln90_fu_467_p2;
wire   [0:0] not_exitcond_flatten_fu_461_p2;
wire   [3:0] h_mid227_fu_357_p3;
wire   [0:0] or_ln88_fu_493_p2;
wire   [3:0] add_ln88_fu_487_p2;
wire   [2:0] p_mid1_fu_511_p4;
wire   [6:0] p_cast_mid1_fu_521_p1;
wire   [6:0] p_mid232_fu_427_p3;
wire   [7:0] zext_ln88_2_fu_507_p1;
wire   [7:0] p_mid230_fu_401_p3;
wire   [5:0] add_ln88_2_fu_559_p2;
wire   [8:0] p_shl7_fu_605_p3;
wire   [10:0] p_shl6_fu_598_p3;
wire  signed [10:0] p_shl7_cast_fu_612_p1;
wire   [7:0] empty_46_fu_622_p2;
wire   [6:0] empty_47_fu_627_p1;
wire   [8:0] p_shl5_fu_639_p3;
wire   [10:0] p_shl4_fu_631_p3;
wire  signed [10:0] p_shl5_cast_fu_647_p1;
wire   [8:0] p_shl7_mid_fu_669_p3;
wire   [10:0] p_shl6_mid_fu_662_p3;
wire  signed [10:0] p_shl7_cast_mid157_fu_676_p1;
wire   [10:0] p_mid159_fu_680_p2;
wire   [10:0] empty_45_fu_616_p2;
wire   [7:0] p_mid161_fu_693_p2;
wire   [6:0] empty_54_fu_698_p1;
wire   [8:0] p_shl5_mid_fu_710_p3;
wire   [10:0] p_shl4_mid_fu_702_p3;
wire  signed [10:0] p_shl5_cast_mid171_fu_718_p1;
wire   [10:0] p_mid173_fu_722_p2;
wire   [10:0] empty_48_fu_651_p2;
wire   [8:0] p_shl3_mid1_fu_738_p3;
wire  signed [8:0] p_cast2_mid1_fu_735_p1;
wire   [8:0] p_mid110_fu_745_p2;
wire   [8:0] p_mid246_fu_657_p3;
wire   [8:0] p_shl7_mid1_fu_765_p3;
wire   [10:0] p_shl6_mid1_fu_758_p3;
wire  signed [10:0] p_shl7_cast_mid1_fu_772_p1;
wire   [10:0] p_mid114_fu_776_p2;
wire   [10:0] p_mid260_fu_686_p3;
wire   [7:0] p_mid116_fu_789_p2;
wire   [6:0] empty_57_fu_794_p1;
wire   [8:0] p_shl5_mid1_fu_806_p3;
wire   [10:0] p_shl4_mid1_fu_798_p3;
wire  signed [10:0] p_shl5_cast_mid1_fu_814_p1;
wire   [10:0] p_mid118_fu_818_p2;
wire   [10:0] p_mid274_fu_728_p3;
wire   [10:0] select_ln88_7_fu_782_p3;
wire   [10:0] w_cast8_fu_831_p1;
wire   [10:0] add_ln98_fu_834_p2;
wire   [10:0] or_ln98_fu_845_p2;
wire   [10:0] select_ln88_8_fu_824_p3;
wire   [10:0] add_ln98_2_fu_856_p2;
wire   [10:0] or_ln98_2_fu_867_p2;
wire   [2:0] tmp_13_fu_878_p4;
wire   [8:0] zext_ln102_fu_887_p1;
wire   [8:0] select_ln88_6_fu_751_p3;
wire   [31:0] bitcast_ln98_fu_897_p1;
wire   [7:0] tmp_fu_900_p4;
wire   [22:0] trunc_ln98_fu_910_p1;
wire   [0:0] icmp_ln98_14_fu_920_p2;
wire   [0:0] icmp_ln98_fu_914_p2;
wire   [0:0] or_ln98_9_fu_926_p2;
wire   [0:0] and_ln98_fu_932_p2;
wire   [31:0] bitcast_ln98_7_fu_945_p1;
wire   [31:0] bitcast_ln98_8_fu_962_p1;
wire   [7:0] tmp_1_fu_948_p4;
wire   [22:0] trunc_ln98_7_fu_958_p1;
wire   [0:0] icmp_ln98_16_fu_985_p2;
wire   [0:0] icmp_ln98_15_fu_979_p2;
wire   [7:0] tmp_2_fu_965_p4;
wire   [22:0] trunc_ln98_8_fu_975_p1;
wire   [0:0] icmp_ln98_18_fu_1003_p2;
wire   [0:0] icmp_ln98_17_fu_997_p2;
wire   [0:0] or_ln98_10_fu_991_p2;
wire   [0:0] or_ln98_11_fu_1009_p2;
wire   [0:0] and_ln98_7_fu_1015_p2;
wire   [0:0] and_ln98_8_fu_1021_p2;
wire   [31:0] bitcast_ln98_9_fu_1033_p1;
wire   [31:0] bitcast_ln98_10_fu_1050_p1;
wire   [7:0] tmp_4_fu_1036_p4;
wire   [22:0] trunc_ln98_9_fu_1046_p1;
wire   [0:0] icmp_ln98_20_fu_1073_p2;
wire   [0:0] icmp_ln98_19_fu_1067_p2;
wire   [7:0] tmp_5_fu_1053_p4;
wire   [22:0] trunc_ln98_10_fu_1063_p1;
wire   [0:0] icmp_ln98_22_fu_1091_p2;
wire   [0:0] icmp_ln98_21_fu_1085_p2;
wire   [0:0] or_ln98_12_fu_1079_p2;
wire   [0:0] or_ln98_13_fu_1097_p2;
wire   [0:0] and_ln98_9_fu_1103_p2;
wire   [0:0] and_ln98_10_fu_1109_p2;
wire   [31:0] bitcast_ln98_11_fu_1121_p1;
wire   [31:0] bitcast_ln98_12_fu_1138_p1;
wire   [7:0] tmp_7_fu_1124_p4;
wire   [22:0] trunc_ln98_11_fu_1134_p1;
wire   [0:0] icmp_ln98_24_fu_1161_p2;
wire   [0:0] icmp_ln98_23_fu_1155_p2;
wire   [7:0] tmp_8_fu_1141_p4;
wire   [22:0] trunc_ln98_12_fu_1151_p1;
wire   [0:0] icmp_ln98_26_fu_1179_p2;
wire   [0:0] icmp_ln98_25_fu_1173_p2;
wire   [0:0] or_ln98_14_fu_1167_p2;
wire   [0:0] or_ln98_15_fu_1185_p2;
wire   [0:0] and_ln98_11_fu_1191_p2;
wire   [0:0] and_ln98_12_fu_1197_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln86_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ch_fu_96 <= select_ln86_fu_479_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ch_fu_96 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln86_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            h_fu_88 <= select_ln88_9_fu_545_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            h_fu_88 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln86_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten77_fu_100 <= add_ln86_2_fu_333_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten77_fu_100 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln86_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_92 <= select_ln88_10_fu_565_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_92 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln86_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            w_fu_84 <= add_ln90_fu_553_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            w_fu_84 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln86_reg_1264 == 1'd0))) begin
        add_ln102_reg_1345 <= add_ln102_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln102_reg_1345_pp0_iter10_reg <= add_ln102_reg_1345_pp0_iter9_reg;
        add_ln102_reg_1345_pp0_iter2_reg <= add_ln102_reg_1345;
        add_ln102_reg_1345_pp0_iter3_reg <= add_ln102_reg_1345_pp0_iter2_reg;
        add_ln102_reg_1345_pp0_iter4_reg <= add_ln102_reg_1345_pp0_iter3_reg;
        add_ln102_reg_1345_pp0_iter5_reg <= add_ln102_reg_1345_pp0_iter4_reg;
        add_ln102_reg_1345_pp0_iter6_reg <= add_ln102_reg_1345_pp0_iter5_reg;
        add_ln102_reg_1345_pp0_iter7_reg <= add_ln102_reg_1345_pp0_iter6_reg;
        add_ln102_reg_1345_pp0_iter8_reg <= add_ln102_reg_1345_pp0_iter7_reg;
        add_ln102_reg_1345_pp0_iter9_reg <= add_ln102_reg_1345_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        select_ln98_4_reg_1385 <= select_ln98_4_fu_1027_p3;
        select_ln98_4_reg_1385_pp0_iter7_reg <= select_ln98_4_reg_1385;
        select_ln98_5_reg_1392 <= select_ln98_5_fu_1115_p3;
        select_ln98_5_reg_1392_pp0_iter9_reg <= select_ln98_5_reg_1392;
        select_ln98_6_reg_1399 <= select_ln98_6_fu_1203_p3;
        select_ln98_reg_1378 <= select_ln98_fu_938_p3;
        select_ln98_reg_1378_pp0_iter5_reg <= select_ln98_reg_1378;
        x_load_4_reg_1357_pp0_iter3_reg <= x_load_4_reg_1357;
        x_load_4_reg_1357_pp0_iter4_reg <= x_load_4_reg_1357_pp0_iter3_reg;
        x_load_4_reg_1357_pp0_iter5_reg <= x_load_4_reg_1357_pp0_iter4_reg;
        x_load_5_reg_1364_pp0_iter3_reg <= x_load_5_reg_1364;
        x_load_5_reg_1364_pp0_iter4_reg <= x_load_5_reg_1364_pp0_iter3_reg;
        x_load_5_reg_1364_pp0_iter5_reg <= x_load_5_reg_1364_pp0_iter4_reg;
        x_load_5_reg_1364_pp0_iter6_reg <= x_load_5_reg_1364_pp0_iter5_reg;
        x_load_5_reg_1364_pp0_iter7_reg <= x_load_5_reg_1364_pp0_iter6_reg;
        x_load_6_reg_1371_pp0_iter3_reg <= x_load_6_reg_1371;
        x_load_6_reg_1371_pp0_iter4_reg <= x_load_6_reg_1371_pp0_iter3_reg;
        x_load_6_reg_1371_pp0_iter5_reg <= x_load_6_reg_1371_pp0_iter4_reg;
        x_load_6_reg_1371_pp0_iter6_reg <= x_load_6_reg_1371_pp0_iter5_reg;
        x_load_6_reg_1371_pp0_iter7_reg <= x_load_6_reg_1371_pp0_iter6_reg;
        x_load_6_reg_1371_pp0_iter8_reg <= x_load_6_reg_1371_pp0_iter7_reg;
        x_load_6_reg_1371_pp0_iter9_reg <= x_load_6_reg_1371_pp0_iter8_reg;
        x_load_reg_1350_pp0_iter3_reg <= x_load_reg_1350;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_42_reg_1248 <= empty_42_fu_311_p2;
        empty_43_reg_1253 <= empty_43_fu_317_p2;
        empty_44_reg_1259 <= empty_44_fu_323_p1;
        icmp_ln86_reg_1264 <= icmp_ln86_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_53_reg_1286[6 : 1] <= empty_53_fu_457_p1[6 : 1];
        empty_55_reg_1309 <= empty_55_fu_531_p1;
        empty_56_reg_1320 <= empty_56_fu_541_p1;
        icmp_ln88_reg_1268 <= icmp_ln88_fu_351_p2;
        icmp_ln90_mid276_reg_1291 <= icmp_ln90_mid276_fu_473_p2;
        p_mid112_reg_1314 <= p_mid112_fu_535_p2;
        p_mid129_reg_1275[7 : 1] <= p_mid129_fu_395_p2[7 : 1];
        p_mid145_reg_1281 <= p_mid145_fu_451_p2;
        p_mid18_reg_1304 <= p_mid18_fu_525_p2;
        select_ln88_reg_1298 <= select_ln88_fu_499_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        x_load_4_reg_1357 <= x_q2;
        x_load_5_reg_1364 <= x_q1;
        x_load_6_reg_1371 <= x_q0;
        x_load_reg_1350 <= x_q3;
    end
end

always @ (*) begin
    if (((icmp_ln86_fu_327_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln86_reg_1264 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ch_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_ch_2 = ch_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_h_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_h_2 = h_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten77_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten77_load = indvar_flatten77_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_w_load = 4'd0;
    end else begin
        ap_sig_allocacmp_w_load = w_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_ce1 = 1'b1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_ce2 = 1'b1;
    end else begin
        x_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_ce3 = 1'b1;
    end else begin
        x_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln102_fu_891_p2 = (zext_ln102_fu_887_p1 + select_ln88_6_fu_751_p3);

assign add_ln86_2_fu_333_p2 = (ap_sig_allocacmp_indvar_flatten77_load + 9'd1);

assign add_ln86_fu_345_p2 = (ap_sig_allocacmp_ch_2 + 4'd1);

assign add_ln88_2_fu_559_p2 = (ap_sig_allocacmp_indvar_flatten_load + 6'd1);

assign add_ln88_fu_487_p2 = (h_mid227_fu_357_p3 + 4'd2);

assign add_ln90_fu_553_p2 = (select_ln88_fu_499_p3 + 4'd2);

assign add_ln98_2_fu_856_p2 = (select_ln88_8_fu_824_p3 + w_cast8_fu_831_p1);

assign add_ln98_fu_834_p2 = (select_ln88_7_fu_782_p3 + w_cast8_fu_831_p1);

assign and_ln98_10_fu_1109_p2 = (grp_fu_865_p_dout0 & and_ln98_9_fu_1103_p2);

assign and_ln98_11_fu_1191_p2 = (or_ln98_15_fu_1185_p2 & or_ln98_14_fu_1167_p2);

assign and_ln98_12_fu_1197_p2 = (grp_fu_869_p_dout0 & and_ln98_11_fu_1191_p2);

assign and_ln98_7_fu_1015_p2 = (or_ln98_11_fu_1009_p2 & or_ln98_10_fu_991_p2);

assign and_ln98_8_fu_1021_p2 = (grp_fu_861_p_dout0 & and_ln98_7_fu_1015_p2);

assign and_ln98_9_fu_1103_p2 = (or_ln98_13_fu_1097_p2 & or_ln98_12_fu_1079_p2);

assign and_ln98_fu_932_p2 = (or_ln98_9_fu_926_p2 & grp_fu_857_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln98_10_fu_1050_p1 = x_load_5_reg_1364_pp0_iter7_reg;

assign bitcast_ln98_11_fu_1121_p1 = select_ln98_5_reg_1392_pp0_iter9_reg;

assign bitcast_ln98_12_fu_1138_p1 = x_load_6_reg_1371_pp0_iter9_reg;

assign bitcast_ln98_7_fu_945_p1 = select_ln98_reg_1378_pp0_iter5_reg;

assign bitcast_ln98_8_fu_962_p1 = x_load_4_reg_1357_pp0_iter5_reg;

assign bitcast_ln98_9_fu_1033_p1 = select_ln98_4_reg_1385_pp0_iter7_reg;

assign bitcast_ln98_fu_897_p1 = x_load_reg_1350_pp0_iter3_reg;

assign ch_cast_fu_217_p1 = ap_sig_allocacmp_ch_2;

assign ch_cast_mid1_fu_365_p1 = add_ln86_fu_345_p2;

assign empty_37_fu_237_p2 = ap_sig_allocacmp_ch_2 << 4'd1;

assign empty_38_fu_247_p2 = (p_shl1_cast_fu_233_p1 - p_shl2_cast_fu_243_p1);

assign empty_39_fu_265_p2 = (p_shl_cast_fu_261_p1 - ch_cast_fu_217_p1);

assign empty_40_fu_289_p2 = (p_cast_fu_285_p1 + empty_39_fu_265_p2);

assign empty_41_fu_299_p1 = empty_40_fu_289_p2[5:0];

assign empty_42_fu_311_p2 = ($signed(p_shl3_fu_303_p3) - $signed(p_cast2_fu_295_p1));

assign empty_43_fu_317_p2 = (zext_ln88_fu_271_p1 + empty_38_fu_247_p2);

assign empty_44_fu_323_p1 = empty_43_fu_317_p2[6:0];

assign empty_45_fu_616_p2 = ($signed(p_shl6_fu_598_p3) - $signed(p_shl7_cast_fu_612_p1));

assign empty_46_fu_622_p2 = (empty_43_reg_1253 | 8'd1);

assign empty_47_fu_627_p1 = empty_46_fu_622_p2[6:0];

assign empty_48_fu_651_p2 = ($signed(p_shl4_fu_631_p3) - $signed(p_shl5_cast_fu_647_p1));

assign empty_50_fu_369_p1 = add_ln86_fu_345_p2[2:0];

assign empty_51_fu_385_p2 = add_ln86_fu_345_p2 << 4'd1;

assign empty_52_fu_439_p1 = p_mid131_fu_421_p2[5:0];

assign empty_53_fu_457_p1 = p_mid129_fu_395_p2[6:0];

assign empty_54_fu_698_p1 = p_mid161_fu_693_p2[6:0];

assign empty_55_fu_531_p1 = p_mid18_fu_525_p2[5:0];

assign empty_56_fu_541_p1 = p_mid112_fu_535_p2[6:0];

assign empty_57_fu_794_p1 = p_mid116_fu_789_p2[6:0];

assign empty_fu_221_p1 = ap_sig_allocacmp_ch_2[2:0];

assign grp_fu_857_p_ce = 1'b1;

assign grp_fu_857_p_din0 = x_load_reg_1350;

assign grp_fu_857_p_din1 = 32'd4286578687;

assign grp_fu_857_p_opcode = 5'd4;

assign grp_fu_861_p_ce = 1'b1;

assign grp_fu_861_p_din0 = select_ln98_reg_1378;

assign grp_fu_861_p_din1 = x_load_4_reg_1357_pp0_iter4_reg;

assign grp_fu_861_p_opcode = 5'd2;

assign grp_fu_865_p_ce = 1'b1;

assign grp_fu_865_p_din0 = select_ln98_4_reg_1385;

assign grp_fu_865_p_din1 = x_load_5_reg_1364_pp0_iter6_reg;

assign grp_fu_865_p_opcode = 5'd2;

assign grp_fu_869_p_ce = 1'b1;

assign grp_fu_869_p_din0 = select_ln98_5_reg_1392;

assign grp_fu_869_p_din1 = x_load_6_reg_1371_pp0_iter8_reg;

assign grp_fu_869_p_opcode = 5'd2;

assign h_mid227_fu_357_p3 = ((icmp_ln88_fu_351_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_h_2);

assign icmp_ln86_fu_327_p2 = ((ap_sig_allocacmp_indvar_flatten77_load == 9'd392) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_351_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_467_p2 = ((ap_sig_allocacmp_w_load == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln90_mid276_fu_473_p2 = (not_exitcond_flatten_fu_461_p2 & icmp_ln90_fu_467_p2);

assign icmp_ln98_14_fu_920_p2 = ((trunc_ln98_fu_910_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_15_fu_979_p2 = ((tmp_1_fu_948_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_16_fu_985_p2 = ((trunc_ln98_7_fu_958_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_17_fu_997_p2 = ((tmp_2_fu_965_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_18_fu_1003_p2 = ((trunc_ln98_8_fu_975_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_19_fu_1067_p2 = ((tmp_4_fu_1036_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_20_fu_1073_p2 = ((trunc_ln98_9_fu_1046_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_21_fu_1085_p2 = ((tmp_5_fu_1053_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_22_fu_1091_p2 = ((trunc_ln98_10_fu_1063_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_23_fu_1155_p2 = ((tmp_7_fu_1124_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_24_fu_1161_p2 = ((trunc_ln98_11_fu_1134_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_25_fu_1173_p2 = ((tmp_8_fu_1141_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_26_fu_1179_p2 = ((trunc_ln98_12_fu_1151_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_914_p2 = ((tmp_fu_900_p4 != 8'd255) ? 1'b1 : 1'b0);

assign not_exitcond_flatten_fu_461_p2 = (icmp_ln88_fu_351_p2 ^ 1'd1);

assign or_ln88_fu_493_p2 = (icmp_ln90_mid276_fu_473_p2 | icmp_ln88_fu_351_p2);

assign or_ln98_10_fu_991_p2 = (icmp_ln98_16_fu_985_p2 | icmp_ln98_15_fu_979_p2);

assign or_ln98_11_fu_1009_p2 = (icmp_ln98_18_fu_1003_p2 | icmp_ln98_17_fu_997_p2);

assign or_ln98_12_fu_1079_p2 = (icmp_ln98_20_fu_1073_p2 | icmp_ln98_19_fu_1067_p2);

assign or_ln98_13_fu_1097_p2 = (icmp_ln98_22_fu_1091_p2 | icmp_ln98_21_fu_1085_p2);

assign or_ln98_14_fu_1167_p2 = (icmp_ln98_24_fu_1161_p2 | icmp_ln98_23_fu_1155_p2);

assign or_ln98_15_fu_1185_p2 = (icmp_ln98_26_fu_1179_p2 | icmp_ln98_25_fu_1173_p2);

assign or_ln98_2_fu_867_p2 = (11'd1 | add_ln98_2_fu_856_p2);

assign or_ln98_9_fu_926_p2 = (icmp_ln98_fu_914_p2 | icmp_ln98_14_fu_920_p2);

assign or_ln98_fu_845_p2 = (11'd1 | add_ln98_fu_834_p2);

assign p_cast2_fu_295_p1 = empty_40_fu_289_p2;

assign p_cast2_mid141_fu_435_p1 = p_mid131_fu_421_p2;

assign p_cast2_mid1_fu_735_p1 = p_mid18_reg_1304;

assign p_cast_fu_285_p1 = tmp_12_fu_275_p4;

assign p_cast_mid1_fu_521_p1 = p_mid1_fu_511_p4;

assign p_mid110_fu_745_p2 = ($signed(p_shl3_mid1_fu_738_p3) - $signed(p_cast2_mid1_fu_735_p1));

assign p_mid112_fu_535_p2 = (zext_ln88_2_fu_507_p1 + p_mid230_fu_401_p3);

assign p_mid114_fu_776_p2 = ($signed(p_shl6_mid1_fu_758_p3) - $signed(p_shl7_cast_mid1_fu_772_p1));

assign p_mid116_fu_789_p2 = (p_mid112_reg_1314 | 8'd1);

assign p_mid118_fu_818_p2 = ($signed(p_shl4_mid1_fu_798_p3) - $signed(p_shl5_cast_mid1_fu_814_p1));

assign p_mid129_fu_395_p2 = (p_shl1_cast_mid1_fu_381_p1 - p_shl2_cast_mid1_fu_391_p1);

assign p_mid131_fu_421_p2 = (p_shl_cast_mid1_fu_417_p1 - ch_cast_mid1_fu_365_p1);

assign p_mid145_fu_451_p2 = ($signed(p_shl3_mid_fu_443_p3) - $signed(p_cast2_mid141_fu_435_p1));

assign p_mid159_fu_680_p2 = ($signed(p_shl6_mid_fu_662_p3) - $signed(p_shl7_cast_mid157_fu_676_p1));

assign p_mid161_fu_693_p2 = (p_mid129_reg_1275 | 8'd1);

assign p_mid173_fu_722_p2 = ($signed(p_shl4_mid_fu_702_p3) - $signed(p_shl5_cast_mid171_fu_718_p1));

assign p_mid18_fu_525_p2 = (p_cast_mid1_fu_521_p1 + p_mid232_fu_427_p3);

assign p_mid1_fu_511_p4 = {{add_ln88_fu_487_p2[3:1]}};

assign p_mid230_fu_401_p3 = ((icmp_ln88_fu_351_p2[0:0] == 1'b1) ? p_mid129_fu_395_p2 : empty_38_fu_247_p2);

assign p_mid232_fu_427_p3 = ((icmp_ln88_fu_351_p2[0:0] == 1'b1) ? p_mid131_fu_421_p2 : empty_39_fu_265_p2);

assign p_mid246_fu_657_p3 = ((icmp_ln88_reg_1268[0:0] == 1'b1) ? p_mid145_reg_1281 : empty_42_reg_1248);

assign p_mid260_fu_686_p3 = ((icmp_ln88_reg_1268[0:0] == 1'b1) ? p_mid159_fu_680_p2 : empty_45_fu_616_p2);

assign p_mid274_fu_728_p3 = ((icmp_ln88_reg_1268[0:0] == 1'b1) ? p_mid173_fu_722_p2 : empty_48_fu_651_p2);

assign p_shl1_cast_fu_233_p1 = p_shl1_fu_225_p3;

assign p_shl1_cast_mid1_fu_381_p1 = p_shl1_mid1_fu_373_p3;

assign p_shl1_fu_225_p3 = {{empty_fu_221_p1}, {4'd0}};

assign p_shl1_mid1_fu_373_p3 = {{empty_50_fu_369_p1}, {4'd0}};

assign p_shl2_cast_fu_243_p1 = empty_37_fu_237_p2;

assign p_shl2_cast_mid1_fu_391_p1 = empty_51_fu_385_p2;

assign p_shl3_fu_303_p3 = {{empty_41_fu_299_p1}, {3'd0}};

assign p_shl3_mid1_fu_738_p3 = {{empty_55_reg_1309}, {3'd0}};

assign p_shl3_mid_fu_443_p3 = {{empty_52_fu_439_p1}, {3'd0}};

assign p_shl4_fu_631_p3 = {{empty_47_fu_627_p1}, {4'd0}};

assign p_shl4_mid1_fu_798_p3 = {{empty_57_fu_794_p1}, {4'd0}};

assign p_shl4_mid_fu_702_p3 = {{empty_54_fu_698_p1}, {4'd0}};

assign p_shl5_cast_fu_647_p1 = $signed(p_shl5_fu_639_p3);

assign p_shl5_cast_mid171_fu_718_p1 = $signed(p_shl5_mid_fu_710_p3);

assign p_shl5_cast_mid1_fu_814_p1 = $signed(p_shl5_mid1_fu_806_p3);

assign p_shl5_fu_639_p3 = {{empty_46_fu_622_p2}, {1'd0}};

assign p_shl5_mid1_fu_806_p3 = {{p_mid116_fu_789_p2}, {1'd0}};

assign p_shl5_mid_fu_710_p3 = {{p_mid161_fu_693_p2}, {1'd0}};

assign p_shl6_fu_598_p3 = {{empty_44_reg_1259}, {4'd0}};

assign p_shl6_mid1_fu_758_p3 = {{empty_56_reg_1320}, {4'd0}};

assign p_shl6_mid_fu_662_p3 = {{empty_53_reg_1286}, {4'd0}};

assign p_shl7_cast_fu_612_p1 = $signed(p_shl7_fu_605_p3);

assign p_shl7_cast_mid157_fu_676_p1 = $signed(p_shl7_mid_fu_669_p3);

assign p_shl7_cast_mid1_fu_772_p1 = $signed(p_shl7_mid1_fu_765_p3);

assign p_shl7_fu_605_p3 = {{empty_43_reg_1253}, {1'd0}};

assign p_shl7_mid1_fu_765_p3 = {{p_mid112_reg_1314}, {1'd0}};

assign p_shl7_mid_fu_669_p3 = {{p_mid129_reg_1275}, {1'd0}};

assign p_shl_cast_fu_261_p1 = p_shl_fu_253_p3;

assign p_shl_cast_mid1_fu_417_p1 = p_shl_mid1_fu_409_p3;

assign p_shl_fu_253_p3 = {{empty_fu_221_p1}, {3'd0}};

assign p_shl_mid1_fu_409_p3 = {{empty_50_fu_369_p1}, {3'd0}};

assign select_ln86_fu_479_p3 = ((icmp_ln88_fu_351_p2[0:0] == 1'b1) ? add_ln86_fu_345_p2 : ap_sig_allocacmp_ch_2);

assign select_ln88_10_fu_565_p3 = ((icmp_ln88_fu_351_p2[0:0] == 1'b1) ? 6'd1 : add_ln88_2_fu_559_p2);

assign select_ln88_6_fu_751_p3 = ((icmp_ln90_mid276_reg_1291[0:0] == 1'b1) ? p_mid110_fu_745_p2 : p_mid246_fu_657_p3);

assign select_ln88_7_fu_782_p3 = ((icmp_ln90_mid276_reg_1291[0:0] == 1'b1) ? p_mid114_fu_776_p2 : p_mid260_fu_686_p3);

assign select_ln88_8_fu_824_p3 = ((icmp_ln90_mid276_reg_1291[0:0] == 1'b1) ? p_mid118_fu_818_p2 : p_mid274_fu_728_p3);

assign select_ln88_9_fu_545_p3 = ((icmp_ln90_mid276_fu_473_p2[0:0] == 1'b1) ? add_ln88_fu_487_p2 : h_mid227_fu_357_p3);

assign select_ln88_fu_499_p3 = ((or_ln88_fu_493_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_w_load);

assign select_ln98_4_fu_1027_p3 = ((and_ln98_8_fu_1021_p2[0:0] == 1'b1) ? select_ln98_reg_1378_pp0_iter5_reg : x_load_4_reg_1357_pp0_iter5_reg);

assign select_ln98_5_fu_1115_p3 = ((and_ln98_10_fu_1109_p2[0:0] == 1'b1) ? select_ln98_4_reg_1385_pp0_iter7_reg : x_load_5_reg_1364_pp0_iter7_reg);

assign select_ln98_6_fu_1203_p3 = ((and_ln98_12_fu_1197_p2[0:0] == 1'b1) ? select_ln98_5_reg_1392_pp0_iter9_reg : x_load_6_reg_1371_pp0_iter9_reg);

assign select_ln98_fu_938_p3 = ((and_ln98_fu_932_p2[0:0] == 1'b1) ? 32'd4286578687 : x_load_reg_1350_pp0_iter3_reg);

assign tmp_12_fu_275_p4 = {{ap_sig_allocacmp_h_2[3:1]}};

assign tmp_13_fu_878_p4 = {{select_ln88_reg_1298[3:1]}};

assign tmp_1_fu_948_p4 = {{bitcast_ln98_7_fu_945_p1[30:23]}};

assign tmp_2_fu_965_p4 = {{bitcast_ln98_8_fu_962_p1[30:23]}};

assign tmp_4_fu_1036_p4 = {{bitcast_ln98_9_fu_1033_p1[30:23]}};

assign tmp_5_fu_1053_p4 = {{bitcast_ln98_10_fu_1050_p1[30:23]}};

assign tmp_7_fu_1124_p4 = {{bitcast_ln98_11_fu_1121_p1[30:23]}};

assign tmp_8_fu_1141_p4 = {{bitcast_ln98_12_fu_1138_p1[30:23]}};

assign tmp_fu_900_p4 = {{bitcast_ln98_fu_897_p1[30:23]}};

assign trunc_ln98_10_fu_1063_p1 = bitcast_ln98_10_fu_1050_p1[22:0];

assign trunc_ln98_11_fu_1134_p1 = bitcast_ln98_11_fu_1121_p1[22:0];

assign trunc_ln98_12_fu_1151_p1 = bitcast_ln98_12_fu_1138_p1[22:0];

assign trunc_ln98_7_fu_958_p1 = bitcast_ln98_7_fu_945_p1[22:0];

assign trunc_ln98_8_fu_975_p1 = bitcast_ln98_8_fu_962_p1[22:0];

assign trunc_ln98_9_fu_1046_p1 = bitcast_ln98_9_fu_1033_p1[22:0];

assign trunc_ln98_fu_910_p1 = bitcast_ln98_fu_897_p1[22:0];

assign w_cast8_fu_831_p1 = select_ln88_reg_1298;

assign x_address0 = zext_ln98_6_fu_873_p1;

assign x_address1 = zext_ln98_5_fu_862_p1;

assign x_address2 = zext_ln98_4_fu_851_p1;

assign x_address3 = zext_ln98_fu_840_p1;

assign y_address0 = zext_ln102_2_fu_1209_p1;

assign y_d0 = select_ln98_6_reg_1399;

assign zext_ln102_2_fu_1209_p1 = add_ln102_reg_1345_pp0_iter10_reg;

assign zext_ln102_fu_887_p1 = tmp_13_fu_878_p4;

assign zext_ln88_2_fu_507_p1 = add_ln88_fu_487_p2;

assign zext_ln88_fu_271_p1 = ap_sig_allocacmp_h_2;

assign zext_ln98_4_fu_851_p1 = or_ln98_fu_845_p2;

assign zext_ln98_5_fu_862_p1 = add_ln98_2_fu_856_p2;

assign zext_ln98_6_fu_873_p1 = or_ln98_2_fu_867_p2;

assign zext_ln98_fu_840_p1 = add_ln98_fu_834_p2;

always @ (posedge ap_clk) begin
    p_mid129_reg_1275[0] <= 1'b0;
    empty_53_reg_1286[0] <= 1'b0;
end

endmodule //cnn_top_maxpool2d
