-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_conv2d_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    x_ce0 : OUT STD_LOGIC;
    x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    x_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    x_ce1 : OUT STD_LOGIC;
    x_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    weight0_ce0 : OUT STD_LOGIC;
    weight0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    weight0_ce1 : OUT STD_LOGIC;
    weight0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    bias0_ce0 : OUT STD_LOGIC;
    bias0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_we0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_841_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_ce : OUT STD_LOGIC;
    grp_fu_845_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_845_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_ce : OUT STD_LOGIC;
    grp_fu_849_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_ce : OUT STD_LOGIC;
    grp_fu_853_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_853_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_853_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_853_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_top_conv2d_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_C40 : STD_LOGIC_VECTOR (11 downto 0) := "110001000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_3E4 : STD_LOGIC_VECTOR (9 downto 0) := "1111100100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state50_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state55_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state60_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_state65_pp0_stage4_iter12 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal icmp_ln31_reg_1670 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state49_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state54_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state59_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_state64_pp0_stage3_iter12 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state52_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state62_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal select_ln33_23_reg_1885 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_6_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_25_reg_1806 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state48_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state53_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state58_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_state63_pp0_stage2_iter12 : BOOLEAN;
    signal ap_block_state68_pp0_stage2_iter13 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_25_reg_1806_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_reg_1982 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal h_4_reg_1637 : STD_LOGIC_VECTOR (4 downto 0);
    signal och_2_reg_1644 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten134_load_reg_1649 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_406_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_1654 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_fu_410_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_reg_1659 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_143_fu_422_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_143_reg_1664 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln31_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1670_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_load_reg_1674 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_fu_488_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln31_reg_1679 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln33_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1684 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1684_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1684_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_500_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln31_reg_1698 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_162_fu_512_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_162_reg_1704 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_mid1_fu_516_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_mid1_reg_1709 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid152_fu_528_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid152_reg_1714 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln31_33_fu_556_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_33_reg_1720 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln31_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln31_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_reg_1732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_reg_1732_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dup7_fu_590_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_dup7_reg_1743 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_fu_602_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_22_fu_636_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_22_reg_1758 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_155_fu_760_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_155_reg_1765 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_155_reg_1765_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_155_reg_1765_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_31_fu_858_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_31_reg_1770 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_32_fu_892_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_32_reg_1777 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_fu_1011_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_reg_1794 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_reg_1794_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_reg_1794_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln33_21_fu_1047_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_21_reg_1799 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_25_fu_1062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_25_reg_1806_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_25_reg_1806_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_25_reg_1806_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln46_cast18_fu_1072_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln46_cast18_reg_1812 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_fu_1078_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_reg_1818 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_reg_1818_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_reg_1818_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln49_fu_1084_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln49_reg_1823 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_reg_1829_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1829_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln65_fu_1116_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1845_pp0_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal x_load_45_reg_1870 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_23_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1885_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_2_fu_1279_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_2_reg_1892 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln54_6_fu_1308_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_6_reg_1907 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_7_fu_1313_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_7_reg_1912 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_8_fu_1318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_8_reg_1917 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_30_fu_1334_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1922_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln31_44_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_45_fu_1358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_fu_1368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_1_fu_1373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_42_fu_1423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_43_fu_1428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1982_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln57_2_fu_1438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_3_fu_1443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_37_fu_1452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_load_1_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_41_fu_1457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_4_fu_1462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_5_fu_1466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_39_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_40_fu_1476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2039 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_1_reg_2044 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_1_reg_2044_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_6_fu_1481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_7_fu_1486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_38_fu_1491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_2_reg_2064 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_2_reg_2064_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_2_reg_2064_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2069 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2069_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2069_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2069_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_8_fu_1495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2079 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2079_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2079_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2079_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2079_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2084_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2089_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2094_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2099_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_fu_1525_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_reg_2104 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_reg_2104_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_28_fu_1533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_28_reg_2110 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_28_reg_2110_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_29_fu_1543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_29_reg_2116 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_29_reg_2116_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_30_fu_1550_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_30_reg_2122 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_0_1_1_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_0_1_1_reg_2127_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_fu_1556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_reg_2133 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_reg_2133_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_reg_2133_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_32_fu_1566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_32_reg_2140 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_0_2_1_fu_1573_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_0_2_1_reg_2145 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_0_2_1_reg_2145_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bias0_load_reg_2156 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_33_fu_1587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_33_reg_2161 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_fu_1594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln31_45_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln31_46_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_29_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_30_fu_1111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_43_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln31_44_fu_1131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_fu_1140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_27_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_38_fu_1201_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln31_42_fu_1211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_28_fu_1293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_31_fu_1303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_40_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln31_41_fu_1349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_32_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_33_fu_1382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_39_fu_1418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln57_34_fu_1448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_37_fu_1579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_fu_1598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_fu_102 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal h_fu_106 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_26_fu_1363_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_110 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_27_fu_1391_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal och_fu_114 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten134_fu_118 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln31_27_fu_1191_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_310_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_323_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_cast2_fu_418_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln31_3_fu_402_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_144_fu_432_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_fu_436_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_fu_428_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl11_0_1_fu_458_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_1_fu_450_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_1_cast_fu_466_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast2_mid1_fu_524_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln31_fu_508_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_163_fu_538_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_0_mid1_fu_542_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_mid1_fu_534_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid154_fu_550_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_145_fu_444_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_158_fu_470_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln35_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln33_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl11_0_1_mid1_fu_618_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_1_mid1_fu_610_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_1_cast_mid1_fu_626_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid117_fu_630_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_37_fu_564_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_644_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_651_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_fu_655_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_146_fu_664_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_147_fu_673_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_1_fu_677_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_fu_669_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_149_fu_691_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_150_fu_700_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_2_fu_704_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast5_fu_696_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln33_5_fu_721_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_142_fu_658_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_152_fu_724_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_153_fu_730_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_fu_742_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_fu_734_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_fu_750_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_4_fu_718_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_156_fu_766_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_fu_778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl10_fu_770_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_0_cast_fu_786_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_mid1_fu_804_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_mid1_fu_811_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_mid1_fu_815_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid148_fu_818_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid156_fu_831_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_164_fu_840_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_1_mid1_fu_844_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_mid1_fu_836_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid158_fu_852_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_148_fu_685_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid160_fu_865_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_165_fu_874_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_2_mid1_fu_878_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast5_mid1_fu_870_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid162_fu_886_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_151_fu_712_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_26_fu_899_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_166_fu_913_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_mid_fu_925_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_mid_fu_917_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_mid182_fu_933_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_mid184_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_154_fu_754_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_157_fu_790_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln33_6_fu_965_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln31_29_fu_824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid1_fu_968_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_167_fu_974_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_mid1_fu_986_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_mid1_fu_978_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_mid1_fu_994_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_mid19_fu_998_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln31_34_fu_943_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_fu_962_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_168_fu_1017_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_0_0_mid1_fu_1029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl10_0_0_mid1_fu_1021_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_0_cast_mid1_fu_1037_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid115_fu_1041_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_36_fu_950_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1054_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln46_cast_fu_1075_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_3_fu_1096_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_4_fu_1106_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln46_cast20_fu_1069_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln33_19_fu_1004_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln31_25_fu_1126_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_fu_1136_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_1_fu_1145_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_159_fu_1154_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_0_2_fu_1173_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_2_fu_1165_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_2_cast_fu_1181_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_21_fu_1196_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_24_fu_1206_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp25_0_2_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_160_fu_1185_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid119_fu_1228_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp25_0_2_mid1_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl11_0_2_mid1_fu_1254_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_2_mid1_fu_1246_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_2_cast_mid1_fu_1262_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid121_fu_1266_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_38_fu_1221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln49_fu_1284_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_2_fu_1288_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_5_fu_1298_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_24_fu_1272_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_23_fu_1339_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln33_fu_1386_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_22_fu_1413_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_35_fu_1500_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln33_20_fu_1506_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln49_fu_1512_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_1517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_4_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_5_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_6_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter12_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to11 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to13 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component cnn_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    h_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    h_fu_106 <= ap_const_lv5_0;
                elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    h_fu_106 <= select_ln33_26_fu_1363_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten134_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten134_fu_118 <= ap_const_lv12_0;
            elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                indvar_flatten134_fu_118 <= add_ln31_27_fu_1191_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_110 <= ap_const_lv10_0;
                elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_110 <= select_ln33_27_fu_1391_p3;
                end if;
            end if; 
        end if;
    end process;

    och_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    och_fu_114 <= ap_const_lv3_0;
                elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    och_fu_114 <= select_ln31_30_fu_1334_p3;
                end if;
            end if; 
        end if;
    end process;

    reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln33_23_reg_1885 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_335 <= x_q1;
            elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_335 <= x_q0;
            end if; 
        end if;
    end process;

    reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln33_23_reg_1885 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_340 <= weight0_q1;
            elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_6_reg_1829 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                reg_340 <= weight0_q0;
            end if; 
        end if;
    end process;

    reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln33_23_reg_1885 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_345 <= weight0_q0;
            elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                reg_345 <= weight0_q1;
            end if; 
        end if;
    end process;

    reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                reg_354 <= x_q0;
            elsif ((((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (select_ln33_25_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                reg_354 <= x_q1;
            end if; 
        end if;
    end process;

    w_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_fu_102 <= ap_const_lv5_0;
            elsif (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                w_fu_102 <= add_ln46_2_fu_1279_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln31_fu_476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln31_reg_1679 <= add_ln31_fu_488_p2;
                and_ln31_2_reg_1732 <= and_ln31_2_fu_584_p2;
                empty_162_reg_1704 <= empty_162_fu_512_p1;
                icmp_ln33_reg_1684 <= icmp_ln33_fu_494_p2;
                indvar_flatten_load_reg_1674 <= indvar_flatten_fu_110;
                p_dup7_reg_1743 <= p_dup7_fu_590_p2;
                p_mid152_reg_1714 <= p_mid152_fu_528_p2;
                    p_shl3_mid1_reg_1709(3 downto 2) <= p_shl3_mid1_fu_516_p3(3 downto 2);
                select_ln31_33_reg_1720 <= select_ln31_33_fu_556_p3;
                select_ln31_reg_1698 <= select_ln31_fu_500_p3;
                    select_ln33_22_reg_1758(9 downto 2) <= select_ln33_22_fu_636_p3(9 downto 2);
                select_ln33_reg_1750 <= select_ln33_fu_602_p3;
                xor_ln31_reg_1727 <= xor_ln31_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln46_2_reg_1892 <= add_ln46_2_fu_1279_p2;
                add_ln54_6_reg_1907 <= add_ln54_6_fu_1308_p2;
                add_ln54_7_reg_1912 <= add_ln54_7_fu_1313_p2;
                add_ln54_8_reg_1917 <= add_ln54_8_fu_1318_p2;
                select_ln33_23_reg_1885 <= select_ln33_23_fu_1239_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln46_reg_1818 <= add_ln46_fu_1078_p2;
                add_ln65_reg_1845 <= add_ln65_fu_1116_p2;
                p_mid111_reg_1794 <= p_mid111_fu_1011_p2;
                select_ln31_31_reg_1770 <= select_ln31_31_fu_858_p3;
                select_ln31_32_reg_1777 <= select_ln31_32_fu_892_p3;
                    select_ln33_21_reg_1799(9 downto 2) <= select_ln33_21_fu_1047_p3(9 downto 2);
                select_ln33_25_reg_1806 <= select_ln33_25_fu_1062_p3;
                sext_ln49_reg_1823 <= sext_ln49_fu_1084_p1;
                tmp_6_reg_1829 <= add_ln46_fu_1078_p2(5 downto 5);
                    trunc_ln46_cast18_reg_1812(4 downto 0) <= trunc_ln46_cast18_fu_1072_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln46_reg_1818_pp0_iter1_reg <= add_ln46_reg_1818;
                add_ln46_reg_1818_pp0_iter2_reg <= add_ln46_reg_1818_pp0_iter1_reg;
                add_ln65_reg_1845_pp0_iter10_reg <= add_ln65_reg_1845_pp0_iter9_reg;
                add_ln65_reg_1845_pp0_iter11_reg <= add_ln65_reg_1845_pp0_iter10_reg;
                add_ln65_reg_1845_pp0_iter12_reg <= add_ln65_reg_1845_pp0_iter11_reg;
                add_ln65_reg_1845_pp0_iter1_reg <= add_ln65_reg_1845;
                add_ln65_reg_1845_pp0_iter2_reg <= add_ln65_reg_1845_pp0_iter1_reg;
                add_ln65_reg_1845_pp0_iter3_reg <= add_ln65_reg_1845_pp0_iter2_reg;
                add_ln65_reg_1845_pp0_iter4_reg <= add_ln65_reg_1845_pp0_iter3_reg;
                add_ln65_reg_1845_pp0_iter5_reg <= add_ln65_reg_1845_pp0_iter4_reg;
                add_ln65_reg_1845_pp0_iter6_reg <= add_ln65_reg_1845_pp0_iter5_reg;
                add_ln65_reg_1845_pp0_iter7_reg <= add_ln65_reg_1845_pp0_iter6_reg;
                add_ln65_reg_1845_pp0_iter8_reg <= add_ln65_reg_1845_pp0_iter7_reg;
                add_ln65_reg_1845_pp0_iter9_reg <= add_ln65_reg_1845_pp0_iter8_reg;
                bias0_load_reg_2156 <= bias0_q0;
                empty_155_reg_1765 <= empty_155_fu_760_p2;
                empty_155_reg_1765_pp0_iter1_reg <= empty_155_reg_1765;
                empty_155_reg_1765_pp0_iter2_reg <= empty_155_reg_1765_pp0_iter1_reg;
                mul_0_2_2_reg_2099_pp0_iter10_reg <= mul_0_2_2_reg_2099_pp0_iter9_reg;
                mul_0_2_2_reg_2099_pp0_iter3_reg <= mul_0_2_2_reg_2099;
                mul_0_2_2_reg_2099_pp0_iter4_reg <= mul_0_2_2_reg_2099_pp0_iter3_reg;
                mul_0_2_2_reg_2099_pp0_iter5_reg <= mul_0_2_2_reg_2099_pp0_iter4_reg;
                mul_0_2_2_reg_2099_pp0_iter6_reg <= mul_0_2_2_reg_2099_pp0_iter5_reg;
                mul_0_2_2_reg_2099_pp0_iter7_reg <= mul_0_2_2_reg_2099_pp0_iter6_reg;
                mul_0_2_2_reg_2099_pp0_iter8_reg <= mul_0_2_2_reg_2099_pp0_iter7_reg;
                mul_0_2_2_reg_2099_pp0_iter9_reg <= mul_0_2_2_reg_2099_pp0_iter8_reg;
                p_mid111_reg_1794_pp0_iter1_reg <= p_mid111_reg_1794;
                p_mid111_reg_1794_pp0_iter2_reg <= p_mid111_reg_1794_pp0_iter1_reg;
                select_ln33_25_reg_1806_pp0_iter1_reg <= select_ln33_25_reg_1806;
                select_ln33_25_reg_1806_pp0_iter2_reg <= select_ln33_25_reg_1806_pp0_iter1_reg;
                select_ln33_25_reg_1806_pp0_iter3_reg <= select_ln33_25_reg_1806_pp0_iter2_reg;
                select_ln33_25_reg_1806_pp0_iter4_reg <= select_ln33_25_reg_1806_pp0_iter3_reg;
                select_ln49_30_reg_2122 <= select_ln49_30_fu_1550_p3;
                sum_9_0_1_1_reg_2127_pp0_iter8_reg <= sum_9_0_1_1_reg_2127;
                tmp_6_reg_1829_pp0_iter1_reg <= tmp_6_reg_1829;
                tmp_6_reg_1829_pp0_iter2_reg <= tmp_6_reg_1829_pp0_iter1_reg;
                tmp_6_reg_1829_pp0_iter3_reg <= tmp_6_reg_1829_pp0_iter2_reg;
                tmp_6_reg_1829_pp0_iter4_reg <= tmp_6_reg_1829_pp0_iter3_reg;
                tmp_6_reg_1829_pp0_iter5_reg <= tmp_6_reg_1829_pp0_iter4_reg;
                tmp_6_reg_1829_pp0_iter6_reg <= tmp_6_reg_1829_pp0_iter5_reg;
                tmp_6_reg_1829_pp0_iter7_reg <= tmp_6_reg_1829_pp0_iter6_reg;
                tmp_6_reg_1829_pp0_iter8_reg <= tmp_6_reg_1829_pp0_iter7_reg;
                tmp_6_reg_1829_pp0_iter9_reg <= tmp_6_reg_1829_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln31_2_reg_1732_pp0_iter1_reg <= and_ln31_2_reg_1732;
                and_ln31_2_reg_1732_pp0_iter2_reg <= and_ln31_2_reg_1732_pp0_iter1_reg;
                empty_143_reg_1664 <= empty_143_fu_422_p2;
                empty_reg_1654 <= empty_fu_406_p1;
                h_4_reg_1637 <= h_fu_106;
                icmp_ln31_reg_1670 <= icmp_ln31_fu_476_p2;
                icmp_ln31_reg_1670_pp0_iter10_reg <= icmp_ln31_reg_1670_pp0_iter9_reg;
                icmp_ln31_reg_1670_pp0_iter11_reg <= icmp_ln31_reg_1670_pp0_iter10_reg;
                icmp_ln31_reg_1670_pp0_iter12_reg <= icmp_ln31_reg_1670_pp0_iter11_reg;
                icmp_ln31_reg_1670_pp0_iter1_reg <= icmp_ln31_reg_1670;
                icmp_ln31_reg_1670_pp0_iter2_reg <= icmp_ln31_reg_1670_pp0_iter1_reg;
                icmp_ln31_reg_1670_pp0_iter3_reg <= icmp_ln31_reg_1670_pp0_iter2_reg;
                icmp_ln31_reg_1670_pp0_iter4_reg <= icmp_ln31_reg_1670_pp0_iter3_reg;
                icmp_ln31_reg_1670_pp0_iter5_reg <= icmp_ln31_reg_1670_pp0_iter4_reg;
                icmp_ln31_reg_1670_pp0_iter6_reg <= icmp_ln31_reg_1670_pp0_iter5_reg;
                icmp_ln31_reg_1670_pp0_iter7_reg <= icmp_ln31_reg_1670_pp0_iter6_reg;
                icmp_ln31_reg_1670_pp0_iter8_reg <= icmp_ln31_reg_1670_pp0_iter7_reg;
                icmp_ln31_reg_1670_pp0_iter9_reg <= icmp_ln31_reg_1670_pp0_iter8_reg;
                icmp_ln33_reg_1684_pp0_iter1_reg <= icmp_ln33_reg_1684;
                icmp_ln33_reg_1684_pp0_iter2_reg <= icmp_ln33_reg_1684_pp0_iter1_reg;
                icmp_ln49_reg_1982 <= icmp_ln49_fu_1433_p2;
                icmp_ln49_reg_1982_pp0_iter10_reg <= icmp_ln49_reg_1982_pp0_iter9_reg;
                icmp_ln49_reg_1982_pp0_iter11_reg <= icmp_ln49_reg_1982_pp0_iter10_reg;
                icmp_ln49_reg_1982_pp0_iter2_reg <= icmp_ln49_reg_1982;
                icmp_ln49_reg_1982_pp0_iter3_reg <= icmp_ln49_reg_1982_pp0_iter2_reg;
                icmp_ln49_reg_1982_pp0_iter4_reg <= icmp_ln49_reg_1982_pp0_iter3_reg;
                icmp_ln49_reg_1982_pp0_iter5_reg <= icmp_ln49_reg_1982_pp0_iter4_reg;
                icmp_ln49_reg_1982_pp0_iter6_reg <= icmp_ln49_reg_1982_pp0_iter5_reg;
                icmp_ln49_reg_1982_pp0_iter7_reg <= icmp_ln49_reg_1982_pp0_iter6_reg;
                icmp_ln49_reg_1982_pp0_iter8_reg <= icmp_ln49_reg_1982_pp0_iter7_reg;
                icmp_ln49_reg_1982_pp0_iter9_reg <= icmp_ln49_reg_1982_pp0_iter8_reg;
                indvar_flatten134_load_reg_1649 <= indvar_flatten134_fu_118;
                mul_0_2_1_reg_2094_pp0_iter3_reg <= mul_0_2_1_reg_2094;
                mul_0_2_1_reg_2094_pp0_iter4_reg <= mul_0_2_1_reg_2094_pp0_iter3_reg;
                mul_0_2_1_reg_2094_pp0_iter5_reg <= mul_0_2_1_reg_2094_pp0_iter4_reg;
                mul_0_2_1_reg_2094_pp0_iter6_reg <= mul_0_2_1_reg_2094_pp0_iter5_reg;
                mul_0_2_1_reg_2094_pp0_iter7_reg <= mul_0_2_1_reg_2094_pp0_iter6_reg;
                mul_0_2_1_reg_2094_pp0_iter8_reg <= mul_0_2_1_reg_2094_pp0_iter7_reg;
                mul_0_2_1_reg_2094_pp0_iter9_reg <= mul_0_2_1_reg_2094_pp0_iter8_reg;
                mul_0_2_reg_2089_pp0_iter3_reg <= mul_0_2_reg_2089;
                mul_0_2_reg_2089_pp0_iter4_reg <= mul_0_2_reg_2089_pp0_iter3_reg;
                mul_0_2_reg_2089_pp0_iter5_reg <= mul_0_2_reg_2089_pp0_iter4_reg;
                mul_0_2_reg_2089_pp0_iter6_reg <= mul_0_2_reg_2089_pp0_iter5_reg;
                mul_0_2_reg_2089_pp0_iter7_reg <= mul_0_2_reg_2089_pp0_iter6_reg;
                mul_0_2_reg_2089_pp0_iter8_reg <= mul_0_2_reg_2089_pp0_iter7_reg;
                och_2_reg_1644 <= och_fu_114;
                    p_shl3_reg_1659(3 downto 2) <= p_shl3_fu_410_p3(3 downto 2);
                select_ln49_29_reg_2116 <= select_ln49_29_fu_1543_p3;
                select_ln49_29_reg_2116_pp0_iter6_reg <= select_ln49_29_reg_2116;
                select_ln49_33_reg_2161 <= select_ln49_33_fu_1587_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (select_ln33_25_reg_1806_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_0_0_1_reg_2044 <= grp_fu_853_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_0_0_1_reg_2044_pp0_iter2_reg <= mul_0_0_1_reg_2044;
                select_ln49_31_reg_2133 <= select_ln49_31_fu_1556_p3;
                select_ln49_31_reg_2133_pp0_iter10_reg <= select_ln49_31_reg_2133_pp0_iter9_reg;
                select_ln49_31_reg_2133_pp0_iter9_reg <= select_ln49_31_reg_2133;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_0_0_2_reg_2064 <= grp_fu_849_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_0_0_2_reg_2064_pp0_iter2_reg <= mul_0_0_2_reg_2064;
                mul_0_0_2_reg_2064_pp0_iter3_reg <= mul_0_0_2_reg_2064_pp0_iter2_reg;
                mul_0_1_reg_2069_pp0_iter2_reg <= mul_0_1_reg_2069;
                mul_0_1_reg_2069_pp0_iter3_reg <= mul_0_1_reg_2069_pp0_iter2_reg;
                mul_0_1_reg_2069_pp0_iter4_reg <= mul_0_1_reg_2069_pp0_iter3_reg;
                select_ln33_23_reg_1885_pp0_iter10_reg <= select_ln33_23_reg_1885_pp0_iter9_reg;
                select_ln33_23_reg_1885_pp0_iter11_reg <= select_ln33_23_reg_1885_pp0_iter10_reg;
                select_ln33_23_reg_1885_pp0_iter1_reg <= select_ln33_23_reg_1885;
                select_ln33_23_reg_1885_pp0_iter2_reg <= select_ln33_23_reg_1885_pp0_iter1_reg;
                select_ln33_23_reg_1885_pp0_iter3_reg <= select_ln33_23_reg_1885_pp0_iter2_reg;
                select_ln33_23_reg_1885_pp0_iter4_reg <= select_ln33_23_reg_1885_pp0_iter3_reg;
                select_ln33_23_reg_1885_pp0_iter5_reg <= select_ln33_23_reg_1885_pp0_iter4_reg;
                select_ln33_23_reg_1885_pp0_iter6_reg <= select_ln33_23_reg_1885_pp0_iter5_reg;
                select_ln33_23_reg_1885_pp0_iter7_reg <= select_ln33_23_reg_1885_pp0_iter6_reg;
                select_ln33_23_reg_1885_pp0_iter8_reg <= select_ln33_23_reg_1885_pp0_iter7_reg;
                select_ln33_23_reg_1885_pp0_iter9_reg <= select_ln33_23_reg_1885_pp0_iter8_reg;
                select_ln49_reg_2104 <= select_ln49_fu_1525_p3;
                select_ln49_reg_2104_pp0_iter3_reg <= select_ln49_reg_2104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_0_1_1_reg_2079 <= grp_fu_849_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_0_1_1_reg_2079_pp0_iter3_reg <= mul_0_1_1_reg_2079;
                mul_0_1_1_reg_2079_pp0_iter4_reg <= mul_0_1_1_reg_2079_pp0_iter3_reg;
                mul_0_1_1_reg_2079_pp0_iter5_reg <= mul_0_1_1_reg_2079_pp0_iter4_reg;
                mul_0_1_1_reg_2079_pp0_iter6_reg <= mul_0_1_1_reg_2079_pp0_iter5_reg;
                mul_0_1_2_reg_2084_pp0_iter3_reg <= mul_0_1_2_reg_2084;
                mul_0_1_2_reg_2084_pp0_iter4_reg <= mul_0_1_2_reg_2084_pp0_iter3_reg;
                mul_0_1_2_reg_2084_pp0_iter5_reg <= mul_0_1_2_reg_2084_pp0_iter4_reg;
                mul_0_1_2_reg_2084_pp0_iter6_reg <= mul_0_1_2_reg_2084_pp0_iter5_reg;
                mul_0_1_2_reg_2084_pp0_iter7_reg <= mul_0_1_2_reg_2084_pp0_iter6_reg;
                select_ln31_30_reg_1922_pp0_iter10_reg <= select_ln31_30_reg_1922_pp0_iter9_reg;
                select_ln31_30_reg_1922_pp0_iter11_reg <= select_ln31_30_reg_1922_pp0_iter10_reg;
                select_ln31_30_reg_1922_pp0_iter2_reg <= select_ln31_30_reg_1922;
                select_ln31_30_reg_1922_pp0_iter3_reg <= select_ln31_30_reg_1922_pp0_iter2_reg;
                select_ln31_30_reg_1922_pp0_iter4_reg <= select_ln31_30_reg_1922_pp0_iter3_reg;
                select_ln31_30_reg_1922_pp0_iter5_reg <= select_ln31_30_reg_1922_pp0_iter4_reg;
                select_ln31_30_reg_1922_pp0_iter6_reg <= select_ln31_30_reg_1922_pp0_iter5_reg;
                select_ln31_30_reg_1922_pp0_iter7_reg <= select_ln31_30_reg_1922_pp0_iter6_reg;
                select_ln31_30_reg_1922_pp0_iter8_reg <= select_ln31_30_reg_1922_pp0_iter7_reg;
                select_ln31_30_reg_1922_pp0_iter9_reg <= select_ln31_30_reg_1922_pp0_iter8_reg;
                select_ln49_28_reg_2110 <= select_ln49_28_fu_1533_p3;
                select_ln49_28_reg_2110_pp0_iter5_reg <= select_ln49_28_reg_2110;
                sum_3_0_2_1_reg_2145 <= sum_3_0_2_1_fu_1573_p3;
                sum_3_0_2_1_reg_2145_pp0_iter12_reg <= sum_3_0_2_1_reg_2145;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln49_reg_1982 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_0_1_2_reg_2084 <= grp_fu_853_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (tmp_6_reg_1829_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_0_1_reg_2069 <= grp_fu_853_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (select_ln33_23_reg_1885_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_0_2_1_reg_2094 <= grp_fu_853_p_dout0;
                mul_0_2_reg_2089 <= grp_fu_849_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_0_2_2_reg_2099 <= grp_fu_849_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_reg_2039 <= grp_fu_849_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_327 <= weight0_q0;
                reg_331 <= weight0_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln33_23_reg_1885 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_350 <= x_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (select_ln33_25_reg_1806_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (tmp_6_reg_1829_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_359 <= grp_fu_841_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln49_reg_1982_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (select_ln33_23_reg_1885_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (select_ln33_23_reg_1885_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_363 <= grp_fu_845_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln31_30_reg_1922 <= select_ln31_30_fu_1334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (select_ln33_23_reg_1885_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                select_ln49_32_reg_2140 <= select_ln49_32_fu_1566_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sum_9_0_1_1_reg_2127 <= grp_fu_841_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                weight0_load_1_reg_2009 <= weight0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                x_load_45_reg_1870 <= x_q1;
            end if;
        end if;
    end process;
    p_shl3_reg_1659(1 downto 0) <= "00";
    p_shl3_mid1_reg_1709(1 downto 0) <= "00";
    select_ln33_22_reg_1758(1 downto 0) <= "00";
    select_ln33_21_reg_1799(1 downto 0) <= "00";
    trunc_ln46_cast18_reg_1812(9 downto 5) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter12_stage2, ap_idle_pp0_0to11, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to13, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to13 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter12_stage2) and (ap_idle_pp0_0to11 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln31_21_fu_1196_p2 <= std_logic_vector(unsigned(select_ln31_31_reg_1770) + unsigned(ap_const_lv6_1));
    add_ln31_22_fu_1413_p2 <= std_logic_vector(unsigned(select_ln31_32_reg_1777) + unsigned(ap_const_lv6_2));
    add_ln31_23_fu_1339_p2 <= std_logic_vector(unsigned(select_ln31_32_reg_1777) + unsigned(ap_const_lv6_1));
    add_ln31_24_fu_1206_p2 <= std_logic_vector(unsigned(select_ln31_31_reg_1770) + unsigned(ap_const_lv6_2));
    add_ln31_25_fu_1126_p2 <= std_logic_vector(unsigned(select_ln31_33_reg_1720) + unsigned(ap_const_lv6_2));
    add_ln31_26_fu_899_p2 <= std_logic_vector(unsigned(select_ln31_33_reg_1720) + unsigned(ap_const_lv6_1));
    add_ln31_27_fu_1191_p2 <= std_logic_vector(unsigned(indvar_flatten134_load_reg_1649) + unsigned(ap_const_lv12_1));
    add_ln31_fu_488_p2 <= std_logic_vector(unsigned(och_fu_114) + unsigned(ap_const_lv3_1));
    add_ln33_fu_1386_p2 <= std_logic_vector(unsigned(indvar_flatten_load_reg_1674) + unsigned(ap_const_lv10_1));
    add_ln46_2_fu_1279_p2 <= std_logic_vector(unsigned(select_ln33_reg_1750) + unsigned(ap_const_lv5_1));
    add_ln46_fu_1078_p2 <= std_logic_vector(unsigned(trunc_ln46_cast_fu_1075_p1) + unsigned(ap_const_lv6_3F));
    add_ln54_1_fu_1145_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_reg_1812) + unsigned(select_ln33_21_reg_1799));
    add_ln54_2_fu_1288_p2 <= std_logic_vector(unsigned(zext_ln49_fu_1284_p1) + unsigned(select_ln33_21_reg_1799));
    add_ln54_3_fu_1096_p2 <= std_logic_vector(signed(sext_ln49_fu_1084_p1) + signed(select_ln33_22_reg_1758));
    add_ln54_4_fu_1106_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_fu_1072_p1) + unsigned(select_ln33_22_reg_1758));
    add_ln54_5_fu_1298_p2 <= std_logic_vector(unsigned(zext_ln49_fu_1284_p1) + unsigned(select_ln33_22_reg_1758));
    add_ln54_6_fu_1308_p2 <= std_logic_vector(signed(sext_ln49_reg_1823) + signed(select_ln33_24_fu_1272_p3));
    add_ln54_7_fu_1313_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_reg_1812) + unsigned(select_ln33_24_fu_1272_p3));
    add_ln54_8_fu_1318_p2 <= std_logic_vector(unsigned(zext_ln49_fu_1284_p1) + unsigned(select_ln33_24_fu_1272_p3));
    add_ln54_fu_1136_p2 <= std_logic_vector(signed(sext_ln49_reg_1823) + signed(select_ln33_21_reg_1799));
    add_ln65_fu_1116_p2 <= std_logic_vector(unsigned(trunc_ln46_cast20_fu_1069_p1) + unsigned(select_ln33_19_fu_1004_p3));
    and_ln31_2_fu_584_p2 <= (xor_ln31_fu_572_p2 and icmp_ln35_fu_578_p2);
    and_ln31_fu_1216_p2 <= (xor_ln31_reg_1727 and cmp25_0_2_fu_1159_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage2_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage3_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage4_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage2_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, icmp_ln31_reg_1670)
    begin
        if (((icmp_ln31_reg_1670 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter12_stage2_assign_proc : process(ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage2, icmp_ln31_reg_1670_pp0_iter12_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (icmp_ln31_reg_1670_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter12_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter12_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter12_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to13_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to13 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bias0_address0 <= zext_ln31_37_fu_1579_p1(2 - 1 downto 0);

    bias0_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bias0_ce0 <= ap_const_logic_1;
        else 
            bias0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln31_37_fu_1452_p1 <= reg_327;
    bitcast_ln31_38_fu_1491_p1 <= weight0_load_1_reg_2009;
    bitcast_ln31_39_fu_1471_p1 <= reg_340;
    bitcast_ln31_40_fu_1476_p1 <= reg_345;
    bitcast_ln31_41_fu_1457_p1 <= reg_331;
    bitcast_ln31_42_fu_1423_p1 <= reg_340;
    bitcast_ln31_43_fu_1428_p1 <= reg_345;
    bitcast_ln31_44_fu_1353_p1 <= reg_327;
    bitcast_ln31_45_fu_1358_p1 <= reg_331;
    bitcast_ln31_fu_1594_p1 <= bias0_load_reg_2156;
    bitcast_ln57_1_fu_1373_p1 <= reg_354;
    bitcast_ln57_2_fu_1438_p1 <= reg_350;
    bitcast_ln57_3_fu_1443_p1 <= reg_335;
    bitcast_ln57_4_fu_1462_p1 <= x_load_45_reg_1870;
    bitcast_ln57_5_fu_1466_p1 <= reg_354;
    bitcast_ln57_6_fu_1481_p1 <= reg_335;
    bitcast_ln57_7_fu_1486_p1 <= reg_350;
    bitcast_ln57_8_fu_1495_p1 <= reg_354;
    bitcast_ln57_fu_1368_p1 <= reg_350;
    cmp25_0_2_fu_1159_p2 <= "1" when (unsigned(empty_159_fu_1154_p2) > unsigned(ap_const_lv5_1B)) else "0";
    cmp25_0_2_mid1_fu_1233_p2 <= "1" when (unsigned(p_mid119_fu_1228_p2) > unsigned(ap_const_lv5_1B)) else "0";
    empty_142_fu_658_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_651_p1) - unsigned(p_shl3_cast_fu_655_p1));
    empty_143_fu_422_p2 <= std_logic_vector(unsigned(p_shl3_cast2_fu_418_p1) - unsigned(zext_ln31_3_fu_402_p1));
    empty_144_fu_432_p1 <= empty_143_fu_422_p2(4 - 1 downto 0);
    empty_145_fu_444_p2 <= std_logic_vector(unsigned(p_shl9_fu_436_p3) - unsigned(p_cast_fu_428_p1));
    empty_146_fu_664_p2 <= std_logic_vector(signed(empty_143_reg_1664) + signed(ap_const_lv5_1));
    empty_147_fu_673_p1 <= empty_146_fu_664_p2(4 - 1 downto 0);
    empty_148_fu_685_p2 <= std_logic_vector(unsigned(p_shl9_0_1_fu_677_p3) - unsigned(p_cast4_fu_669_p1));
    empty_149_fu_691_p2 <= std_logic_vector(signed(empty_143_reg_1664) + signed(ap_const_lv5_2));
    empty_150_fu_700_p1 <= empty_149_fu_691_p2(4 - 1 downto 0);
    empty_151_fu_712_p2 <= std_logic_vector(unsigned(p_shl9_0_2_fu_704_p3) - unsigned(p_cast5_fu_696_p1));
    empty_152_fu_724_p2 <= std_logic_vector(unsigned(zext_ln33_5_fu_721_p1) + unsigned(empty_142_fu_658_p2));
    empty_153_fu_730_p1 <= empty_152_fu_724_p2(7 - 1 downto 0);
    empty_154_fu_754_p2 <= std_logic_vector(unsigned(p_shl4_fu_734_p3) - unsigned(p_shl5_cast_fu_750_p1));
    empty_155_fu_760_p2 <= std_logic_vector(unsigned(zext_ln33_4_fu_718_p1) + unsigned(ap_const_lv6_3F));
    empty_156_fu_766_p1 <= empty_155_fu_760_p2(5 - 1 downto 0);
    empty_157_fu_790_p2 <= std_logic_vector(unsigned(p_shl10_fu_770_p3) - unsigned(p_shl11_0_0_cast_fu_786_p1));
    empty_158_fu_470_p2 <= std_logic_vector(unsigned(p_shl10_0_1_fu_450_p3) - unsigned(p_shl11_0_1_cast_fu_466_p1));
    empty_159_fu_1154_p2 <= std_logic_vector(unsigned(h_4_reg_1637) + unsigned(ap_const_lv5_1));
    empty_160_fu_1185_p2 <= std_logic_vector(unsigned(p_shl10_0_2_fu_1165_p3) - unsigned(p_shl11_0_2_cast_fu_1181_p1));
    empty_162_fu_512_p1 <= add_ln31_fu_488_p2(2 - 1 downto 0);
    empty_163_fu_538_p1 <= p_mid152_fu_528_p2(4 - 1 downto 0);
    empty_164_fu_840_p1 <= p_mid156_fu_831_p2(4 - 1 downto 0);
    empty_165_fu_874_p1 <= p_mid160_fu_865_p2(4 - 1 downto 0);
    empty_166_fu_913_p1 <= p_mid148_fu_818_p2(7 - 1 downto 0);
    empty_167_fu_974_p1 <= p_mid1_fu_968_p2(7 - 1 downto 0);
    empty_168_fu_1017_p1 <= p_mid111_fu_1011_p2(5 - 1 downto 0);
    empty_fu_406_p1 <= och_fu_114(2 - 1 downto 0);

    grp_fu_310_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_2039, select_ln49_reg_2104, select_ln49_28_reg_2110, select_ln49_29_reg_2116, select_ln49_30_reg_2122, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_310_p0 <= select_ln49_30_reg_2122;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_310_p0 <= select_ln49_29_reg_2116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_310_p0 <= select_ln49_28_reg_2110;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_310_p0 <= select_ln49_reg_2104;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_310_p0 <= mul_reg_2039;
        else 
            grp_fu_310_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_310_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_0_0_1_reg_2044_pp0_iter2_reg, mul_0_0_2_reg_2064_pp0_iter3_reg, mul_0_1_reg_2069_pp0_iter4_reg, mul_0_1_1_reg_2079_pp0_iter6_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_310_p1 <= mul_0_1_1_reg_2079_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_310_p1 <= mul_0_1_reg_2069_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_310_p1 <= mul_0_0_2_reg_2064_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_310_p1 <= mul_0_0_1_reg_2044_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_310_p1 <= ap_const_lv32_0;
        else 
            grp_fu_310_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_315_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, sum_9_0_1_1_reg_2127, select_ln49_31_reg_2133, select_ln49_32_reg_2140, sum_3_0_2_1_reg_2145, select_ln49_33_reg_2161, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_315_p0 <= select_ln49_33_reg_2161;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_315_p0 <= sum_3_0_2_1_reg_2145;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_315_p0 <= select_ln49_32_reg_2140;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_315_p0 <= select_ln49_31_reg_2133;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_315_p0 <= sum_9_0_1_1_reg_2127;
        else 
            grp_fu_315_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_315_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_0_1_2_reg_2084_pp0_iter7_reg, mul_0_2_reg_2089_pp0_iter8_reg, mul_0_2_1_reg_2094_pp0_iter9_reg, mul_0_2_2_reg_2099_pp0_iter10_reg, bitcast_ln31_fu_1594_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_315_p1 <= bitcast_ln31_fu_1594_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_315_p1 <= mul_0_2_2_reg_2099_pp0_iter10_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_315_p1 <= mul_0_2_1_reg_2094_pp0_iter9_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_315_p1 <= mul_0_2_reg_2089_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_315_p1 <= mul_0_1_2_reg_2084_pp0_iter7_reg;
        else 
            grp_fu_315_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln57_fu_1368_p1, bitcast_ln57_2_fu_1438_p1, bitcast_ln57_4_fu_1462_p1, bitcast_ln57_6_fu_1481_p1, bitcast_ln57_8_fu_1495_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_319_p0 <= bitcast_ln57_8_fu_1495_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_319_p0 <= bitcast_ln57_6_fu_1481_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_319_p0 <= bitcast_ln57_4_fu_1462_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_319_p0 <= bitcast_ln57_2_fu_1438_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_319_p0 <= bitcast_ln57_fu_1368_p1;
            else 
                grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln31_45_fu_1358_p1, bitcast_ln31_43_fu_1428_p1, bitcast_ln31_37_fu_1452_p1, bitcast_ln31_40_fu_1476_p1, bitcast_ln31_38_fu_1491_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_319_p1 <= bitcast_ln31_38_fu_1491_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_319_p1 <= bitcast_ln31_40_fu_1476_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_319_p1 <= bitcast_ln31_37_fu_1452_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_319_p1 <= bitcast_ln31_43_fu_1428_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_319_p1 <= bitcast_ln31_45_fu_1358_p1;
            else 
                grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_323_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln57_1_fu_1373_p1, bitcast_ln57_3_fu_1443_p1, bitcast_ln57_5_fu_1466_p1, bitcast_ln57_7_fu_1486_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_323_p0 <= bitcast_ln57_7_fu_1486_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_323_p0 <= bitcast_ln57_5_fu_1466_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_323_p0 <= bitcast_ln57_3_fu_1443_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_323_p0 <= bitcast_ln57_1_fu_1373_p1;
            else 
                grp_fu_323_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_323_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_323_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln31_44_fu_1353_p1, bitcast_ln31_42_fu_1423_p1, bitcast_ln31_41_fu_1457_p1, bitcast_ln31_39_fu_1471_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_323_p1 <= bitcast_ln31_39_fu_1471_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_323_p1 <= bitcast_ln31_41_fu_1457_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_323_p1 <= bitcast_ln31_42_fu_1423_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_323_p1 <= bitcast_ln31_44_fu_1353_p1;
            else 
                grp_fu_323_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_323_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_841_p_ce <= ap_const_logic_1;
    grp_fu_841_p_din0 <= grp_fu_310_p0;
    grp_fu_841_p_din1 <= grp_fu_310_p1;
    grp_fu_841_p_opcode <= ap_const_lv2_0;
    grp_fu_845_p_ce <= ap_const_logic_1;
    grp_fu_845_p_din0 <= grp_fu_315_p0;
    grp_fu_845_p_din1 <= grp_fu_315_p1;
    grp_fu_845_p_opcode <= ap_const_lv2_0;
    grp_fu_849_p_ce <= ap_const_logic_1;
    grp_fu_849_p_din0 <= grp_fu_319_p0;
    grp_fu_849_p_din1 <= grp_fu_319_p1;
    grp_fu_853_p_ce <= ap_const_logic_1;
    grp_fu_853_p_din0 <= grp_fu_323_p0;
    grp_fu_853_p_din1 <= grp_fu_323_p1;
    icmp_ln31_fu_476_p2 <= "1" when (indvar_flatten134_fu_118 = ap_const_lv12_C40) else "0";
    icmp_ln33_fu_494_p2 <= "1" when (indvar_flatten_fu_110 = ap_const_lv10_310) else "0";
    icmp_ln35_fu_578_p2 <= "1" when (w_fu_102 = ap_const_lv5_1C) else "0";
    icmp_ln49_fu_1433_p2 <= "1" when (unsigned(add_ln46_2_reg_1892) > unsigned(ap_const_lv5_1B)) else "0";
    or_ln31_fu_957_p2 <= (tmp_fu_796_p3 or icmp_ln33_reg_1684);
    or_ln33_fu_596_p2 <= (icmp_ln33_fu_494_p2 or and_ln31_2_fu_584_p2);
    or_ln49_4_fu_1539_p2 <= (select_ln33_25_reg_1806_pp0_iter4_reg or icmp_ln49_reg_1982_pp0_iter4_reg);
    or_ln49_5_fu_1562_p2 <= (tmp_6_reg_1829_pp0_iter9_reg or select_ln33_23_reg_1885_pp0_iter8_reg);
    or_ln49_6_fu_1583_p2 <= (select_ln33_23_reg_1885_pp0_iter11_reg or icmp_ln49_reg_1982_pp0_iter11_reg);
    or_ln49_fu_1512_p2 <= (select_ln33_20_fu_1506_p3 or add_ln46_reg_1818_pp0_iter2_reg);
        p_cast4_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_146_fu_664_p2),6));

        p_cast4_mid1_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid156_fu_831_p2),6));

        p_cast5_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_149_fu_691_p2),6));

        p_cast5_mid1_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid160_fu_865_p2),6));

        p_cast_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_143_fu_422_p2),6));

        p_cast_mid1_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid152_fu_528_p2),6));

    p_dup7_fu_590_p2 <= std_logic_vector(unsigned(select_ln31_fu_500_p3) + unsigned(ap_const_lv5_1));
    p_mid111_fu_1011_p2 <= std_logic_vector(unsigned(zext_ln33_fu_962_p1) + unsigned(ap_const_lv6_3F));
    p_mid115_fu_1041_p2 <= std_logic_vector(unsigned(p_shl10_0_0_mid1_fu_1021_p3) - unsigned(p_shl11_0_0_cast_mid1_fu_1037_p1));
    p_mid117_fu_630_p2 <= std_logic_vector(unsigned(p_shl10_0_1_mid1_fu_610_p3) - unsigned(p_shl11_0_1_cast_mid1_fu_626_p1));
    p_mid119_fu_1228_p2 <= std_logic_vector(unsigned(select_ln31_reg_1698) + unsigned(ap_const_lv5_2));
    p_mid121_fu_1266_p2 <= std_logic_vector(unsigned(p_shl10_0_2_mid1_fu_1246_p3) - unsigned(p_shl11_0_2_cast_mid1_fu_1262_p1));
    p_mid148_fu_818_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_811_p1) - unsigned(p_shl3_cast_mid1_fu_815_p1));
    p_mid152_fu_528_p2 <= std_logic_vector(unsigned(p_shl3_cast2_mid1_fu_524_p1) - unsigned(zext_ln31_fu_508_p1));
    p_mid154_fu_550_p2 <= std_logic_vector(unsigned(p_shl9_0_0_mid1_fu_542_p3) - unsigned(p_cast_mid1_fu_534_p1));
    p_mid156_fu_831_p2 <= std_logic_vector(signed(p_mid152_reg_1714) + signed(ap_const_lv5_1));
    p_mid158_fu_852_p2 <= std_logic_vector(unsigned(p_shl9_0_1_mid1_fu_844_p3) - unsigned(p_cast4_mid1_fu_836_p1));
    p_mid160_fu_865_p2 <= std_logic_vector(signed(p_mid152_reg_1714) + signed(ap_const_lv5_2));
    p_mid162_fu_886_p2 <= std_logic_vector(unsigned(p_shl9_0_2_mid1_fu_878_p3) - unsigned(p_cast5_mid1_fu_870_p1));
    p_mid184_fu_937_p2 <= std_logic_vector(unsigned(p_shl4_mid_fu_917_p3) - unsigned(p_shl5_cast_mid182_fu_933_p1));
    p_mid19_fu_998_p2 <= std_logic_vector(unsigned(p_shl4_mid1_fu_978_p3) - unsigned(p_shl5_cast_mid1_fu_994_p1));
    p_mid1_fu_968_p2 <= std_logic_vector(unsigned(zext_ln33_6_fu_965_p1) + unsigned(select_ln31_29_fu_824_p3));
    p_shl10_0_0_mid1_fu_1021_p3 <= (empty_168_fu_1017_p1 & ap_const_lv5_0);
    p_shl10_0_1_fu_450_p3 <= (h_fu_106 & ap_const_lv5_0);
    p_shl10_0_1_mid1_fu_610_p3 <= (p_dup7_fu_590_p2 & ap_const_lv5_0);
    p_shl10_0_2_fu_1165_p3 <= (empty_159_fu_1154_p2 & ap_const_lv5_0);
    p_shl10_0_2_mid1_fu_1246_p3 <= (p_mid119_fu_1228_p2 & ap_const_lv5_0);
    p_shl10_fu_770_p3 <= (empty_156_fu_766_p1 & ap_const_lv5_0);
        p_shl11_0_0_cast_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl11_fu_778_p3),10));

        p_shl11_0_0_cast_mid1_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl11_0_0_mid1_fu_1029_p3),10));

    p_shl11_0_0_mid1_fu_1029_p3 <= (p_mid111_fu_1011_p2 & ap_const_lv2_0);
    p_shl11_0_1_cast_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_1_fu_458_p3),10));
    p_shl11_0_1_cast_mid1_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_1_mid1_fu_618_p3),10));
    p_shl11_0_1_fu_458_p3 <= (h_fu_106 & ap_const_lv2_0);
    p_shl11_0_1_mid1_fu_618_p3 <= (p_dup7_fu_590_p2 & ap_const_lv2_0);
    p_shl11_0_2_cast_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_2_fu_1173_p3),10));
    p_shl11_0_2_cast_mid1_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_2_mid1_fu_1254_p3),10));
    p_shl11_0_2_fu_1173_p3 <= (empty_159_fu_1154_p2 & ap_const_lv2_0);
    p_shl11_0_2_mid1_fu_1254_p3 <= (p_mid119_fu_1228_p2 & ap_const_lv2_0);
    p_shl11_fu_778_p3 <= (empty_155_fu_760_p2 & ap_const_lv2_0);
    p_shl3_cast2_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_410_p3),5));
    p_shl3_cast2_mid1_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_fu_516_p3),5));
    p_shl3_cast_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_reg_1659),8));
    p_shl3_cast_mid1_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_reg_1709),8));
    p_shl3_fu_410_p3 <= (empty_fu_406_p1 & ap_const_lv2_0);
    p_shl3_mid1_fu_516_p3 <= (empty_162_fu_512_p1 & ap_const_lv2_0);
    p_shl4_fu_734_p3 <= (empty_153_fu_730_p1 & ap_const_lv5_0);
    p_shl4_mid1_fu_978_p3 <= (empty_167_fu_974_p1 & ap_const_lv5_0);
    p_shl4_mid_fu_917_p3 <= (empty_166_fu_913_p1 & ap_const_lv5_0);
        p_shl5_cast_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_fu_742_p3),12));

        p_shl5_cast_mid182_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_mid_fu_925_p3),12));

        p_shl5_cast_mid1_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_mid1_fu_986_p3),12));

    p_shl5_fu_742_p3 <= (empty_152_fu_724_p2 & ap_const_lv2_0);
    p_shl5_mid1_fu_986_p3 <= (p_mid1_fu_968_p2 & ap_const_lv2_0);
    p_shl5_mid_fu_925_p3 <= (p_mid148_fu_818_p2 & ap_const_lv2_0);
    p_shl9_0_0_mid1_fu_542_p3 <= (empty_163_fu_538_p1 & ap_const_lv2_0);
    p_shl9_0_1_fu_677_p3 <= (empty_147_fu_673_p1 & ap_const_lv2_0);
    p_shl9_0_1_mid1_fu_844_p3 <= (empty_164_fu_840_p1 & ap_const_lv2_0);
    p_shl9_0_2_fu_704_p3 <= (empty_150_fu_700_p1 & ap_const_lv2_0);
    p_shl9_0_2_mid1_fu_878_p3 <= (empty_165_fu_874_p1 & ap_const_lv2_0);
    p_shl9_fu_436_p3 <= (empty_144_fu_432_p1 & ap_const_lv2_0);
    p_shl_cast_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_644_p3),8));
    p_shl_cast_mid1_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_804_p3),8));
    p_shl_fu_644_p3 <= (empty_reg_1654 & ap_const_lv5_0);
    p_shl_mid1_fu_804_p3 <= (empty_162_reg_1704 & ap_const_lv5_0);
    select_ln31_29_fu_824_p3 <= 
        p_mid148_fu_818_p2 when (icmp_ln33_reg_1684(0) = '1') else 
        empty_142_fu_658_p2;
    select_ln31_30_fu_1334_p3 <= 
        add_ln31_reg_1679 when (icmp_ln33_reg_1684(0) = '1') else 
        och_2_reg_1644;
    select_ln31_31_fu_858_p3 <= 
        p_mid158_fu_852_p2 when (icmp_ln33_reg_1684(0) = '1') else 
        empty_148_fu_685_p2;
    select_ln31_32_fu_892_p3 <= 
        p_mid162_fu_886_p2 when (icmp_ln33_reg_1684(0) = '1') else 
        empty_151_fu_712_p2;
    select_ln31_33_fu_556_p3 <= 
        p_mid154_fu_550_p2 when (icmp_ln33_fu_494_p2(0) = '1') else 
        empty_145_fu_444_p2;
    select_ln31_34_fu_943_p3 <= 
        p_mid184_fu_937_p2 when (icmp_ln33_reg_1684(0) = '1') else 
        empty_154_fu_754_p2;
    select_ln31_35_fu_1500_p3 <= 
        ap_const_lv6_20 when (icmp_ln33_reg_1684_pp0_iter2_reg(0) = '1') else 
        empty_155_reg_1765_pp0_iter2_reg;
    select_ln31_36_fu_950_p3 <= 
        ap_const_lv10_3E4 when (icmp_ln33_reg_1684(0) = '1') else 
        empty_157_fu_790_p2;
    select_ln31_37_fu_564_p3 <= 
        ap_const_lv10_0 when (icmp_ln33_fu_494_p2(0) = '1') else 
        empty_158_fu_470_p2;
    select_ln31_38_fu_1221_p3 <= 
        ap_const_lv10_1C when (icmp_ln33_reg_1684(0) = '1') else 
        empty_160_fu_1185_p2;
    select_ln31_fu_500_p3 <= 
        ap_const_lv5_0 when (icmp_ln33_fu_494_p2(0) = '1') else 
        h_fu_106;
    select_ln33_19_fu_1004_p3 <= 
        p_mid19_fu_998_p2 when (and_ln31_2_reg_1732(0) = '1') else 
        select_ln31_34_fu_943_p3;
    select_ln33_20_fu_1506_p3 <= 
        p_mid111_reg_1794_pp0_iter2_reg when (and_ln31_2_reg_1732_pp0_iter2_reg(0) = '1') else 
        select_ln31_35_fu_1500_p3;
    select_ln33_21_fu_1047_p3 <= 
        p_mid115_fu_1041_p2 when (and_ln31_2_reg_1732(0) = '1') else 
        select_ln31_36_fu_950_p3;
    select_ln33_22_fu_636_p3 <= 
        p_mid117_fu_630_p2 when (and_ln31_2_fu_584_p2(0) = '1') else 
        select_ln31_37_fu_564_p3;
    select_ln33_23_fu_1239_p3 <= 
        cmp25_0_2_mid1_fu_1233_p2 when (and_ln31_2_reg_1732(0) = '1') else 
        and_ln31_fu_1216_p2;
    select_ln33_24_fu_1272_p3 <= 
        p_mid121_fu_1266_p2 when (and_ln31_2_reg_1732(0) = '1') else 
        select_ln31_38_fu_1221_p3;
    select_ln33_25_fu_1062_p3 <= 
        tmp_4_fu_1054_p3 when (and_ln31_2_reg_1732(0) = '1') else 
        or_ln31_fu_957_p2;
    select_ln33_26_fu_1363_p3 <= 
        p_dup7_reg_1743 when (and_ln31_2_reg_1732(0) = '1') else 
        select_ln31_reg_1698;
    select_ln33_27_fu_1391_p3 <= 
        ap_const_lv10_1 when (icmp_ln33_reg_1684(0) = '1') else 
        add_ln33_fu_1386_p2;
    select_ln33_fu_602_p3 <= 
        ap_const_lv5_0 when (or_ln33_fu_596_p2(0) = '1') else 
        w_fu_102;
    select_ln49_28_fu_1533_p3 <= 
        select_ln49_reg_2104_pp0_iter3_reg when (select_ln33_25_reg_1806_pp0_iter3_reg(0) = '1') else 
        reg_359;
    select_ln49_29_fu_1543_p3 <= 
        select_ln49_28_reg_2110_pp0_iter5_reg when (or_ln49_4_fu_1539_p2(0) = '1') else 
        reg_359;
    select_ln49_30_fu_1550_p3 <= 
        select_ln49_29_reg_2116_pp0_iter6_reg when (tmp_6_reg_1829_pp0_iter5_reg(0) = '1') else 
        reg_359;
    select_ln49_31_fu_1556_p3 <= 
        sum_9_0_1_1_reg_2127_pp0_iter8_reg when (icmp_ln49_reg_1982_pp0_iter8_reg(0) = '1') else 
        reg_363;
    select_ln49_32_fu_1566_p3 <= 
        select_ln49_31_reg_2133_pp0_iter9_reg when (or_ln49_5_fu_1562_p2(0) = '1') else 
        reg_363;
    select_ln49_33_fu_1587_p3 <= 
        sum_3_0_2_1_reg_2145_pp0_iter12_reg when (or_ln49_6_fu_1583_p2(0) = '1') else 
        reg_363;
    select_ln49_fu_1525_p3 <= 
        ap_const_lv32_0 when (tmp_5_fu_1517_p3(0) = '1') else 
        reg_359;
        sext_ln49_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln46_fu_1078_p2),10));

    sum_3_0_2_1_fu_1573_p3 <= 
        select_ln49_31_reg_2133_pp0_iter10_reg when (select_ln33_23_reg_1885_pp0_iter10_reg(0) = '1') else 
        reg_363;
    tmp_4_fu_1054_p3 <= p_mid111_fu_1011_p2(5 downto 5);
    tmp_5_fu_1517_p3 <= or_ln49_fu_1512_p2(5 downto 5);
    tmp_fu_796_p3 <= empty_155_fu_760_p2(5 downto 5);
    trunc_ln46_cast18_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1750),10));
    trunc_ln46_cast20_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1750),12));
    trunc_ln46_cast_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1750),6));

    weight0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln31_45_fu_904_p1, ap_block_pp0_stage2, zext_ln31_43_fu_1122_p1, ap_block_pp0_stage3, zext_ln31_38_fu_1201_p1, ap_block_pp0_stage4, ap_block_pp0_stage0, zext_ln31_41_fu_1349_p1, zext_ln31_39_fu_1418_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight0_address0 <= zext_ln31_39_fu_1418_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weight0_address0 <= zext_ln31_41_fu_1349_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            weight0_address0 <= zext_ln31_38_fu_1201_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weight0_address0 <= zext_ln31_43_fu_1122_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            weight0_address0 <= zext_ln31_45_fu_904_p1(6 - 1 downto 0);
        else 
            weight0_address0 <= "XXXXXX";
        end if; 
    end process;


    weight0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln31_46_fu_909_p1, ap_block_pp0_stage3, zext_ln31_44_fu_1131_p1, ap_block_pp0_stage4, zext_ln31_42_fu_1211_p1, zext_ln31_40_fu_1344_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weight0_address1 <= zext_ln31_40_fu_1344_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            weight0_address1 <= zext_ln31_42_fu_1211_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weight0_address1 <= zext_ln31_44_fu_1131_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            weight0_address1 <= zext_ln31_46_fu_909_p1(6 - 1 downto 0);
        else 
            weight0_address1 <= "XXXXXX";
        end if; 
    end process;


    weight0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weight0_ce0 <= ap_const_logic_1;
        else 
            weight0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weight0_ce1 <= ap_const_logic_1;
        else 
            weight0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    x_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln57_29_fu_1101_p1, ap_block_pp0_stage3, zext_ln57_fu_1140_p1, ap_block_pp0_stage4, zext_ln57_28_fu_1293_p1, ap_block_pp0_stage0, zext_ln57_33_fu_1382_p1, ap_block_pp0_stage1, zext_ln57_34_fu_1448_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            x_address0 <= zext_ln57_34_fu_1448_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_address0 <= zext_ln57_33_fu_1382_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            x_address0 <= zext_ln57_28_fu_1293_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            x_address0 <= zext_ln57_fu_1140_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            x_address0 <= zext_ln57_29_fu_1101_p1(10 - 1 downto 0);
        else 
            x_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    x_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln57_30_fu_1111_p1, ap_block_pp0_stage3, zext_ln57_27_fu_1149_p1, ap_block_pp0_stage4, zext_ln57_31_fu_1303_p1, ap_block_pp0_stage0, zext_ln57_32_fu_1378_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_address1 <= zext_ln57_32_fu_1378_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            x_address1 <= zext_ln57_31_fu_1303_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            x_address1 <= zext_ln57_27_fu_1149_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            x_address1 <= zext_ln57_30_fu_1111_p1(10 - 1 downto 0);
        else 
            x_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            x_ce0 <= ap_const_logic_1;
        else 
            x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            x_ce1 <= ap_const_logic_1;
        else 
            x_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln31_fu_572_p2 <= (icmp_ln33_fu_494_p2 xor ap_const_lv1_1);
    y_address0 <= zext_ln65_fu_1598_p1(12 - 1 downto 0);

    y_ce0_assign_proc : process(ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            y_ce0 <= ap_const_logic_1;
        else 
            y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y_d0 <= reg_363;

    y_we0_assign_proc : process(ap_enable_reg_pp0_iter13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            y_we0 <= ap_const_logic_1;
        else 
            y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln31_37_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_30_reg_1922_pp0_iter11_reg),64));
    zext_ln31_38_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_21_fu_1196_p2),64));
    zext_ln31_39_fu_1418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_22_fu_1413_p2),64));
    zext_ln31_3_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(och_fu_114),5));
    zext_ln31_40_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_23_fu_1339_p2),64));
    zext_ln31_41_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_32_reg_1777),64));
    zext_ln31_42_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_24_fu_1206_p2),64));
    zext_ln31_43_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_31_reg_1770),64));
    zext_ln31_44_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_25_fu_1126_p2),64));
    zext_ln31_45_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_26_fu_899_p2),64));
    zext_ln31_46_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_33_reg_1720),64));
    zext_ln31_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_fu_488_p2),5));
    zext_ln33_4_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_4_reg_1637),6));
    zext_ln33_5_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_4_reg_1637),8));
    zext_ln33_6_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_dup7_reg_1743),8));
    zext_ln33_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_dup7_reg_1743),6));
    zext_ln49_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_2_fu_1279_p2),10));
    zext_ln57_27_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_1_fu_1145_p2),64));
    zext_ln57_28_fu_1293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_2_fu_1288_p2),64));
    zext_ln57_29_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_3_fu_1096_p2),64));
    zext_ln57_30_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_4_fu_1106_p2),64));
    zext_ln57_31_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_5_fu_1298_p2),64));
    zext_ln57_32_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_6_reg_1907),64));
    zext_ln57_33_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_7_reg_1912),64));
    zext_ln57_34_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_8_reg_1917),64));
    zext_ln57_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_fu_1136_p2),64));
    zext_ln65_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_reg_1845_pp0_iter12_reg),64));
end behav;
