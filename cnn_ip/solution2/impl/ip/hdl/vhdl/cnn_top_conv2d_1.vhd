-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_conv2d_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    x_ce0 : OUT STD_LOGIC;
    x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    weight0_ce0 : OUT STD_LOGIC;
    weight0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    bias0_ce0 : OUT STD_LOGIC;
    bias0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_we0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_873_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_873_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_873_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_873_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_873_p_ce : OUT STD_LOGIC;
    grp_fu_877_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_877_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_877_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_877_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_877_p_ce : OUT STD_LOGIC;
    grp_fu_881_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_881_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_881_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_881_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_top_conv2d_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_C40 : STD_LOGIC_VECTOR (11 downto 0) := "110001000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv10_3E4 : STD_LOGIC_VECTOR (9 downto 0) := "1111100100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_state36_pp0_stage8_iter3 : BOOLEAN;
    signal ap_block_state45_pp0_stage8_iter4 : BOOLEAN;
    signal ap_block_state54_pp0_stage8_iter5 : BOOLEAN;
    signal ap_block_state63_pp0_stage8_iter6 : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal icmp_ln31_reg_1648 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage8 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_323 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state58_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state67_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state33_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state42_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state51_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state60_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state35_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state44_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state53_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state62_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln33_23_reg_1879 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state65_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state50_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state59_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state68_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal select_ln33_25_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state34_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state43_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state52_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state61_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_6_reg_1782 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state66_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_339 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_25_reg_1765_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1782_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal h_4_reg_1615 : STD_LOGIC_VECTOR (4 downto 0);
    signal och_2_reg_1622 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten134_load_reg_1627 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_386_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_reg_1632 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_fu_390_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_reg_1637 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_155_fu_402_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_155_reg_1642 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln31_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_1648_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_load_reg_1652 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_fu_468_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln31_reg_1657 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln33_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1662_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_480_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln31_reg_1676 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_174_fu_492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_174_reg_1682 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl3_mid1_fu_496_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_mid1_reg_1687 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid152_fu_508_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid152_reg_1692 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln31_33_fu_536_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_33_reg_1698 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln31_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln31_reg_1705 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_reg_1710 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_2_reg_1710_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dup7_fu_570_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_dup7_reg_1721 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_fu_582_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_reg_1728 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_22_fu_616_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_22_reg_1736 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_167_fu_686_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_167_reg_1743 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_167_reg_1743_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_fu_859_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_reg_1753 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid111_reg_1753_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln33_21_fu_895_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_21_reg_1758 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_25_fu_910_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_25_reg_1765_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_923_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_reg_1771 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_reg_1771_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln49_fu_929_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln49_reg_1776 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_reg_1782_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1782_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1782_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1782_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln65_fu_951_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln65_reg_1793_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln31_31_fu_1057_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_31_reg_1808 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_32_fu_1091_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_32_reg_1815 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln46_cast18_fu_1108_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln46_cast18_reg_1827 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln31_45_fu_1125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_fu_1130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln46_2_fu_1135_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_2_reg_1853 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln49_fu_1140_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln49_reg_1858 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln31_44_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln33_23_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln33_23_reg_1879_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln57_1_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln54_5_fu_1293_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_5_reg_1896 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_6_fu_1297_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_6_reg_1901 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_7_fu_1302_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_7_reg_1906 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_8_fu_1307_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_8_reg_1911 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln31_43_fu_1327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_2_fu_1332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_42_fu_1345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1946 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_3_fu_1350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln31_30_fu_1359_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_30_reg_1961_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln31_37_fu_1364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_1_reg_1976 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1981_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln57_4_fu_1389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_41_fu_1435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_2_reg_2008 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_0_2_reg_2008_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_5_fu_1440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_load_1_reg_2023 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_40_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2033 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_reg_2033_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_6_fu_1454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_39_fu_1459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2048 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2048_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_1_reg_2048_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_7_fu_1464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_38_fu_1469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2063_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_1_2_reg_2063_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln57_8_fu_1473_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_fu_1503_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_reg_2073 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2079 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2079_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2079_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_reg_2079_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2084 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2084_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2084_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_1_reg_2084_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2089 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2089_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2089_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2089_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_0_2_2_reg_2089_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_28_fu_1511_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_28_reg_2094 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_29_fu_1521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_29_reg_2100 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_30_fu_1528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_30_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_0_1_1_reg_2111 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_fu_1534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_reg_2117 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_31_reg_2117_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_32_fu_1544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_32_reg_2124 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_0_2_1_fu_1555_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_0_2_1_reg_2134 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias0_load_reg_2140 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_33_fu_1565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_33_reg_2145 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln31_fu_1572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal zext_ln31_46_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln57_29_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_45_fu_962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln57_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_44_fu_1103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln57_27_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_43_fu_1121_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln57_28_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_38_fu_1206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln57_30_fu_1288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_42_fu_1322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln57_31_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_41_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln57_32_fu_1355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_40_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln57_33_fu_1394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_39_fu_1430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln57_34_fu_1445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_37_fu_1551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_fu_1576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_fu_110 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal h_fu_114 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln33_26_fu_1379_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_118 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_27_fu_1403_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal och_fu_122 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten134_fu_126 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln31_27_fu_1196_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_310_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_cast2_fu_398_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln31_3_fu_382_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_156_fu_412_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_fu_416_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_fu_408_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl11_0_1_fu_438_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_1_fu_430_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_1_cast_fu_446_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast2_mid1_fu_504_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln31_fu_488_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_175_fu_518_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_0_mid1_fu_522_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_mid1_fu_514_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid154_fu_530_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_157_fu_424_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_170_fu_450_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln35_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln33_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl11_0_1_mid1_fu_598_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_1_mid1_fu_590_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_1_cast_mid1_fu_606_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid117_fu_610_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_37_fu_544_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_624_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_631_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_fu_635_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln33_5_fu_647_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_154_fu_638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_164_fu_650_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_165_fu_656_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_fu_668_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_fu_660_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_fu_676_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_4_fu_644_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_168_fu_692_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_fu_704_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl10_fu_696_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_0_cast_fu_712_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_mid1_fu_730_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_mid1_fu_737_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_mid1_fu_741_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid148_fu_744_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_178_fu_761_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_mid_fu_773_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_mid_fu_765_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_mid182_fu_781_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_mid184_fu_785_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_166_fu_680_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_169_fu_716_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln33_6_fu_813_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln31_29_fu_750_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid1_fu_816_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_179_fu_822_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_mid1_fu_834_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_mid1_fu_826_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_mid1_fu_842_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_mid19_fu_846_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln31_34_fu_791_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln33_fu_810_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_180_fu_865_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_0_0_mid1_fu_877_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl10_0_0_mid1_fu_869_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_0_cast_mid1_fu_885_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid115_fu_889_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_36_fu_798_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_902_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln31_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln46_cast_fu_920_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_3_fu_941_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln46_cast20_fu_917_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln33_19_fu_852_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln31_26_fu_957_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_fu_967_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_158_fu_976_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_159_fu_985_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_1_fu_989_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_fu_981_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_161_fu_1003_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_162_fu_1012_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_2_fu_1016_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast5_fu_1008_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid156_fu_1030_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_176_fu_1039_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_1_mid1_fu_1043_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_mid1_fu_1035_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid158_fu_1051_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_160_fu_997_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid160_fu_1064_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_177_fu_1073_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_2_mid1_fu_1077_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast5_mid1_fu_1069_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid162_fu_1085_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_163_fu_1024_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_25_fu_1098_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln54_1_fu_1111_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_2_fu_1144_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_171_fu_1159_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl11_0_2_fu_1178_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_2_fu_1170_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_2_cast_fu_1186_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_21_fu_1201_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp25_0_2_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_172_fu_1190_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid119_fu_1228_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp25_0_2_mid1_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl11_0_2_mid1_fu_1254_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl10_0_2_mid1_fu_1246_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl11_0_2_cast_mid1_fu_1262_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid121_fu_1266_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln31_38_fu_1221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln54_4_fu_1284_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln33_24_fu_1272_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_24_fu_1317_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln31_23_fu_1369_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln33_fu_1398_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln31_22_fu_1425_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_35_fu_1478_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln33_20_fu_1484_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln49_fu_1490_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_1495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_4_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_5_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_6_fu_1561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter6_stage4 : STD_LOGIC;
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component cnn_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage8,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage8)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    h_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    h_fu_114 <= ap_const_lv5_0;
                elsif (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    h_fu_114 <= select_ln33_26_fu_1379_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten134_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten134_fu_126 <= ap_const_lv12_0;
            elsif (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                indvar_flatten134_fu_126 <= add_ln31_27_fu_1196_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_118 <= ap_const_lv10_0;
                elsif (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_118 <= select_ln33_27_fu_1403_p3;
                end if;
            end if; 
        end if;
    end process;

    och_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    och_fu_122 <= ap_const_lv3_0;
                elsif (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    och_fu_122 <= select_ln31_30_fu_1359_p3;
                end if;
            end if; 
        end if;
    end process;

    w_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_fu_110 <= ap_const_lv5_0;
            elsif (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                w_fu_110 <= add_ln46_2_fu_1135_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln31_fu_456_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln31_reg_1657 <= add_ln31_fu_468_p2;
                and_ln31_2_reg_1710 <= and_ln31_2_fu_564_p2;
                empty_174_reg_1682 <= empty_174_fu_492_p1;
                icmp_ln33_reg_1662 <= icmp_ln33_fu_474_p2;
                indvar_flatten_load_reg_1652 <= indvar_flatten_fu_118;
                p_dup7_reg_1721 <= p_dup7_fu_570_p2;
                p_mid152_reg_1692 <= p_mid152_fu_508_p2;
                    p_shl3_mid1_reg_1687(3 downto 2) <= p_shl3_mid1_fu_496_p3(3 downto 2);
                select_ln31_33_reg_1698 <= select_ln31_33_fu_536_p3;
                select_ln31_reg_1676 <= select_ln31_fu_480_p3;
                    select_ln33_22_reg_1736(9 downto 2) <= select_ln33_22_fu_616_p3(9 downto 2);
                select_ln33_reg_1728 <= select_ln33_fu_582_p3;
                xor_ln31_reg_1705 <= xor_ln31_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln46_2_reg_1853 <= add_ln46_2_fu_1135_p2;
                    zext_ln49_reg_1858(4 downto 0) <= zext_ln49_fu_1140_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln46_reg_1771 <= add_ln46_fu_923_p2;
                add_ln65_reg_1793 <= add_ln65_fu_951_p2;
                p_mid111_reg_1753 <= p_mid111_fu_859_p2;
                    select_ln33_21_reg_1758(9 downto 2) <= select_ln33_21_fu_895_p3(9 downto 2);
                select_ln33_25_reg_1765 <= select_ln33_25_fu_910_p3;
                sext_ln49_reg_1776 <= sext_ln49_fu_929_p1;
                tmp_6_reg_1782 <= add_ln46_fu_923_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln46_reg_1771_pp0_iter1_reg <= add_ln46_reg_1771;
                add_ln65_reg_1793_pp0_iter1_reg <= add_ln65_reg_1793;
                add_ln65_reg_1793_pp0_iter2_reg <= add_ln65_reg_1793_pp0_iter1_reg;
                add_ln65_reg_1793_pp0_iter3_reg <= add_ln65_reg_1793_pp0_iter2_reg;
                add_ln65_reg_1793_pp0_iter4_reg <= add_ln65_reg_1793_pp0_iter3_reg;
                add_ln65_reg_1793_pp0_iter5_reg <= add_ln65_reg_1793_pp0_iter4_reg;
                add_ln65_reg_1793_pp0_iter6_reg <= add_ln65_reg_1793_pp0_iter5_reg;
                add_ln65_reg_1793_pp0_iter7_reg <= add_ln65_reg_1793_pp0_iter6_reg;
                bias0_load_reg_2140 <= bias0_q0;
                empty_167_reg_1743 <= empty_167_fu_686_p2;
                empty_167_reg_1743_pp0_iter1_reg <= empty_167_reg_1743;
                mul_0_1_reg_2033_pp0_iter2_reg <= mul_0_1_reg_2033;
                p_mid111_reg_1753_pp0_iter1_reg <= p_mid111_reg_1753;
                select_ln33_25_reg_1765_pp0_iter1_reg <= select_ln33_25_reg_1765;
                select_ln33_25_reg_1765_pp0_iter2_reg <= select_ln33_25_reg_1765_pp0_iter1_reg;
                select_ln49_28_reg_2094 <= select_ln49_28_fu_1511_p3;
                tmp_6_reg_1782_pp0_iter1_reg <= tmp_6_reg_1782;
                tmp_6_reg_1782_pp0_iter2_reg <= tmp_6_reg_1782_pp0_iter1_reg;
                tmp_6_reg_1782_pp0_iter3_reg <= tmp_6_reg_1782_pp0_iter2_reg;
                tmp_6_reg_1782_pp0_iter4_reg <= tmp_6_reg_1782_pp0_iter3_reg;
                tmp_6_reg_1782_pp0_iter5_reg <= tmp_6_reg_1782_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln54_5_reg_1896 <= add_ln54_5_fu_1293_p2;
                add_ln54_6_reg_1901 <= add_ln54_6_fu_1297_p2;
                add_ln54_7_reg_1906 <= add_ln54_7_fu_1302_p2;
                add_ln54_8_reg_1911 <= add_ln54_8_fu_1307_p2;
                select_ln33_23_reg_1879 <= select_ln33_23_fu_1239_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln31_2_reg_1710_pp0_iter1_reg <= and_ln31_2_reg_1710;
                empty_155_reg_1642 <= empty_155_fu_402_p2;
                empty_reg_1632 <= empty_fu_386_p1;
                h_4_reg_1615 <= h_fu_114;
                icmp_ln31_reg_1648 <= icmp_ln31_fu_456_p2;
                icmp_ln31_reg_1648_pp0_iter1_reg <= icmp_ln31_reg_1648;
                icmp_ln31_reg_1648_pp0_iter2_reg <= icmp_ln31_reg_1648_pp0_iter1_reg;
                icmp_ln31_reg_1648_pp0_iter3_reg <= icmp_ln31_reg_1648_pp0_iter2_reg;
                icmp_ln31_reg_1648_pp0_iter4_reg <= icmp_ln31_reg_1648_pp0_iter3_reg;
                icmp_ln31_reg_1648_pp0_iter5_reg <= icmp_ln31_reg_1648_pp0_iter4_reg;
                icmp_ln31_reg_1648_pp0_iter6_reg <= icmp_ln31_reg_1648_pp0_iter5_reg;
                icmp_ln33_reg_1662_pp0_iter1_reg <= icmp_ln33_reg_1662;
                indvar_flatten134_load_reg_1627 <= indvar_flatten134_fu_126;
                mul_0_0_2_reg_2008_pp0_iter2_reg <= mul_0_0_2_reg_2008;
                och_2_reg_1622 <= och_fu_122;
                    p_shl3_reg_1637(3 downto 2) <= p_shl3_fu_390_p3(3 downto 2);
                sum_3_0_2_1_reg_2134 <= sum_3_0_2_1_fu_1555_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln49_reg_1981 <= icmp_ln49_fu_1384_p2;
                select_ln31_30_reg_1961 <= select_ln31_30_fu_1359_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln49_reg_1981_pp0_iter2_reg <= icmp_ln49_reg_1981;
                icmp_ln49_reg_1981_pp0_iter3_reg <= icmp_ln49_reg_1981_pp0_iter2_reg;
                icmp_ln49_reg_1981_pp0_iter4_reg <= icmp_ln49_reg_1981_pp0_iter3_reg;
                icmp_ln49_reg_1981_pp0_iter5_reg <= icmp_ln49_reg_1981_pp0_iter4_reg;
                icmp_ln49_reg_1981_pp0_iter6_reg <= icmp_ln49_reg_1981_pp0_iter5_reg;
                select_ln31_30_reg_1961_pp0_iter2_reg <= select_ln31_30_reg_1961;
                select_ln31_30_reg_1961_pp0_iter3_reg <= select_ln31_30_reg_1961_pp0_iter2_reg;
                select_ln31_30_reg_1961_pp0_iter4_reg <= select_ln31_30_reg_1961_pp0_iter3_reg;
                select_ln31_30_reg_1961_pp0_iter5_reg <= select_ln31_30_reg_1961_pp0_iter4_reg;
                select_ln31_30_reg_1961_pp0_iter6_reg <= select_ln31_30_reg_1961_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln33_25_reg_1765 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_0_0_1_reg_1976 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_0_0_2_reg_2008 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_0_1_1_reg_2048 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_0_1_1_reg_2048_pp0_iter2_reg <= mul_0_1_1_reg_2048;
                mul_0_1_1_reg_2048_pp0_iter3_reg <= mul_0_1_1_reg_2048_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln49_reg_1981 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_0_1_2_reg_2063 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_0_1_2_reg_2063_pp0_iter2_reg <= mul_0_1_2_reg_2063;
                mul_0_1_2_reg_2063_pp0_iter3_reg <= mul_0_1_2_reg_2063_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_6_reg_1782 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_0_1_reg_2033 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (select_ln33_23_reg_1879 = ap_const_lv1_0))) then
                mul_0_2_1_reg_2084 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_0_2_1_reg_2084_pp0_iter2_reg <= mul_0_2_1_reg_2084;
                mul_0_2_1_reg_2084_pp0_iter3_reg <= mul_0_2_1_reg_2084_pp0_iter2_reg;
                mul_0_2_1_reg_2084_pp0_iter4_reg <= mul_0_2_1_reg_2084_pp0_iter3_reg;
                select_ln33_23_reg_1879_pp0_iter1_reg <= select_ln33_23_reg_1879;
                select_ln33_23_reg_1879_pp0_iter2_reg <= select_ln33_23_reg_1879_pp0_iter1_reg;
                select_ln33_23_reg_1879_pp0_iter3_reg <= select_ln33_23_reg_1879_pp0_iter2_reg;
                select_ln33_23_reg_1879_pp0_iter4_reg <= select_ln33_23_reg_1879_pp0_iter3_reg;
                select_ln33_23_reg_1879_pp0_iter5_reg <= select_ln33_23_reg_1879_pp0_iter4_reg;
                select_ln33_23_reg_1879_pp0_iter6_reg <= select_ln33_23_reg_1879_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_0_2_2_reg_2089 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_0_2_2_reg_2089_pp0_iter2_reg <= mul_0_2_2_reg_2089;
                mul_0_2_2_reg_2089_pp0_iter3_reg <= mul_0_2_2_reg_2089_pp0_iter2_reg;
                mul_0_2_2_reg_2089_pp0_iter4_reg <= mul_0_2_2_reg_2089_pp0_iter3_reg;
                mul_0_2_2_reg_2089_pp0_iter5_reg <= mul_0_2_2_reg_2089_pp0_iter4_reg;
                select_ln49_31_reg_2117 <= select_ln49_31_fu_1534_p3;
                select_ln49_31_reg_2117_pp0_iter5_reg <= select_ln49_31_reg_2117;
                select_ln49_33_reg_2145 <= select_ln49_33_fu_1565_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (select_ln33_23_reg_1879 = ap_const_lv1_0))) then
                mul_0_2_reg_2079 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_0_2_reg_2079_pp0_iter2_reg <= mul_0_2_reg_2079;
                mul_0_2_reg_2079_pp0_iter3_reg <= mul_0_2_reg_2079_pp0_iter2_reg;
                mul_0_2_reg_2079_pp0_iter4_reg <= mul_0_2_reg_2079_pp0_iter3_reg;
                select_ln49_30_reg_2106 <= select_ln49_30_fu_1528_p3;
                select_ln49_reg_2073 <= select_ln49_fu_1503_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul_reg_1946 <= grp_fu_881_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln33_23_reg_1879 = ap_const_lv1_0)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_323 <= weight0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln33_23_reg_1879 = ap_const_lv1_0)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_327 <= x_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln33_23_reg_1879 = ap_const_lv1_0)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_6_reg_1782 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (select_ln33_25_reg_1765 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_331 <= weight0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln33_23_reg_1879 = ap_const_lv1_0)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (select_ln33_25_reg_1765 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_335 <= x_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln49_reg_1981_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln33_25_reg_1765_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (select_ln33_23_reg_1879_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (select_ln33_23_reg_1879_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_339 <= grp_fu_873_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_6_reg_1782_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_343 <= grp_fu_877_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                select_ln31_31_reg_1808 <= select_ln31_31_fu_1057_p3;
                select_ln31_32_reg_1815 <= select_ln31_32_fu_1091_p3;
                    trunc_ln46_cast18_reg_1827(4 downto 0) <= trunc_ln46_cast18_fu_1108_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                select_ln49_29_reg_2100 <= select_ln49_29_fu_1521_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (select_ln33_23_reg_1879_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                select_ln49_32_reg_2124 <= select_ln49_32_fu_1544_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sum_9_0_1_1_reg_2111 <= grp_fu_877_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                weight0_load_1_reg_2023 <= weight0_q0;
            end if;
        end if;
    end process;
    p_shl3_reg_1637(1 downto 0) <= "00";
    p_shl3_mid1_reg_1687(1 downto 0) <= "00";
    select_ln33_22_reg_1736(1 downto 0) <= "00";
    select_ln33_21_reg_1758(1 downto 0) <= "00";
    trunc_ln46_cast18_reg_1827(9 downto 5) <= "00000";
    zext_ln49_reg_1858(9 downto 5) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage8_subdone, ap_block_pp0_stage4_subdone, ap_condition_exit_pp0_iter6_stage4, ap_idle_pp0_0to5, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage4) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln31_21_fu_1201_p2 <= std_logic_vector(unsigned(select_ln31_31_reg_1808) + unsigned(ap_const_lv6_1));
    add_ln31_22_fu_1425_p2 <= std_logic_vector(unsigned(select_ln31_32_reg_1815) + unsigned(ap_const_lv6_2));
    add_ln31_23_fu_1369_p2 <= std_logic_vector(unsigned(select_ln31_32_reg_1815) + unsigned(ap_const_lv6_1));
    add_ln31_24_fu_1317_p2 <= std_logic_vector(unsigned(select_ln31_31_reg_1808) + unsigned(ap_const_lv6_2));
    add_ln31_25_fu_1098_p2 <= std_logic_vector(unsigned(select_ln31_33_reg_1698) + unsigned(ap_const_lv6_2));
    add_ln31_26_fu_957_p2 <= std_logic_vector(unsigned(select_ln31_33_reg_1698) + unsigned(ap_const_lv6_1));
    add_ln31_27_fu_1196_p2 <= std_logic_vector(unsigned(indvar_flatten134_load_reg_1627) + unsigned(ap_const_lv12_1));
    add_ln31_fu_468_p2 <= std_logic_vector(unsigned(och_fu_122) + unsigned(ap_const_lv3_1));
    add_ln33_fu_1398_p2 <= std_logic_vector(unsigned(indvar_flatten_load_reg_1652) + unsigned(ap_const_lv10_1));
    add_ln46_2_fu_1135_p2 <= std_logic_vector(unsigned(select_ln33_reg_1728) + unsigned(ap_const_lv5_1));
    add_ln46_fu_923_p2 <= std_logic_vector(unsigned(trunc_ln46_cast_fu_920_p1) + unsigned(ap_const_lv6_3F));
    add_ln54_1_fu_1111_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_fu_1108_p1) + unsigned(select_ln33_21_reg_1758));
    add_ln54_2_fu_1144_p2 <= std_logic_vector(unsigned(zext_ln49_fu_1140_p1) + unsigned(select_ln33_21_reg_1758));
    add_ln54_3_fu_941_p2 <= std_logic_vector(signed(sext_ln49_fu_929_p1) + signed(select_ln33_22_reg_1736));
    add_ln54_4_fu_1284_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_reg_1827) + unsigned(select_ln33_22_reg_1736));
    add_ln54_5_fu_1293_p2 <= std_logic_vector(unsigned(zext_ln49_reg_1858) + unsigned(select_ln33_22_reg_1736));
    add_ln54_6_fu_1297_p2 <= std_logic_vector(signed(sext_ln49_reg_1776) + signed(select_ln33_24_fu_1272_p3));
    add_ln54_7_fu_1302_p2 <= std_logic_vector(unsigned(trunc_ln46_cast18_reg_1827) + unsigned(select_ln33_24_fu_1272_p3));
    add_ln54_8_fu_1307_p2 <= std_logic_vector(unsigned(zext_ln49_reg_1858) + unsigned(select_ln33_24_fu_1272_p3));
    add_ln54_fu_967_p2 <= std_logic_vector(signed(sext_ln49_reg_1776) + signed(select_ln33_21_reg_1758));
    add_ln65_fu_951_p2 <= std_logic_vector(unsigned(trunc_ln46_cast20_fu_917_p1) + unsigned(select_ln33_19_fu_852_p3));
    and_ln31_2_fu_564_p2 <= (xor_ln31_fu_552_p2 and icmp_ln35_fu_558_p2);
    and_ln31_fu_1216_p2 <= (xor_ln31_reg_1705 and cmp25_0_2_fu_1164_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage8_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage8_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage8_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage8_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_subdone, icmp_ln31_reg_1648)
    begin
        if (((icmp_ln31_reg_1648 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage4_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage4, icmp_ln31_reg_1648_pp0_iter6_reg, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln31_reg_1648_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter6_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage8;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bias0_address0 <= zext_ln31_37_fu_1551_p1(2 - 1 downto 0);

    bias0_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bias0_ce0 <= ap_const_logic_1;
        else 
            bias0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln31_37_fu_1364_p1 <= reg_323;
    bitcast_ln31_38_fu_1469_p1 <= weight0_load_1_reg_2023;
    bitcast_ln31_39_fu_1459_p1 <= reg_331;
    bitcast_ln31_40_fu_1449_p1 <= reg_323;
    bitcast_ln31_41_fu_1435_p1 <= reg_331;
    bitcast_ln31_42_fu_1345_p1 <= reg_331;
    bitcast_ln31_43_fu_1327_p1 <= reg_323;
    bitcast_ln31_44_fu_1211_p1 <= reg_331;
    bitcast_ln31_45_fu_1125_p1 <= reg_323;
    bitcast_ln31_fu_1572_p1 <= bias0_load_reg_2140;
    bitcast_ln57_1_fu_1279_p1 <= reg_335;
    bitcast_ln57_2_fu_1332_p1 <= reg_335;
    bitcast_ln57_3_fu_1350_p1 <= reg_327;
    bitcast_ln57_4_fu_1389_p1 <= reg_335;
    bitcast_ln57_5_fu_1440_p1 <= reg_327;
    bitcast_ln57_6_fu_1454_p1 <= reg_335;
    bitcast_ln57_7_fu_1464_p1 <= reg_327;
    bitcast_ln57_8_fu_1473_p1 <= reg_335;
    bitcast_ln57_fu_1130_p1 <= reg_335;
    cmp25_0_2_fu_1164_p2 <= "1" when (unsigned(empty_171_fu_1159_p2) > unsigned(ap_const_lv5_1B)) else "0";
    cmp25_0_2_mid1_fu_1233_p2 <= "1" when (unsigned(p_mid119_fu_1228_p2) > unsigned(ap_const_lv5_1B)) else "0";
    empty_154_fu_638_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_631_p1) - unsigned(p_shl3_cast_fu_635_p1));
    empty_155_fu_402_p2 <= std_logic_vector(unsigned(p_shl3_cast2_fu_398_p1) - unsigned(zext_ln31_3_fu_382_p1));
    empty_156_fu_412_p1 <= empty_155_fu_402_p2(4 - 1 downto 0);
    empty_157_fu_424_p2 <= std_logic_vector(unsigned(p_shl9_fu_416_p3) - unsigned(p_cast_fu_408_p1));
    empty_158_fu_976_p2 <= std_logic_vector(signed(empty_155_reg_1642) + signed(ap_const_lv5_1));
    empty_159_fu_985_p1 <= empty_158_fu_976_p2(4 - 1 downto 0);
    empty_160_fu_997_p2 <= std_logic_vector(unsigned(p_shl9_0_1_fu_989_p3) - unsigned(p_cast4_fu_981_p1));
    empty_161_fu_1003_p2 <= std_logic_vector(signed(empty_155_reg_1642) + signed(ap_const_lv5_2));
    empty_162_fu_1012_p1 <= empty_161_fu_1003_p2(4 - 1 downto 0);
    empty_163_fu_1024_p2 <= std_logic_vector(unsigned(p_shl9_0_2_fu_1016_p3) - unsigned(p_cast5_fu_1008_p1));
    empty_164_fu_650_p2 <= std_logic_vector(unsigned(zext_ln33_5_fu_647_p1) + unsigned(empty_154_fu_638_p2));
    empty_165_fu_656_p1 <= empty_164_fu_650_p2(7 - 1 downto 0);
    empty_166_fu_680_p2 <= std_logic_vector(unsigned(p_shl4_fu_660_p3) - unsigned(p_shl5_cast_fu_676_p1));
    empty_167_fu_686_p2 <= std_logic_vector(unsigned(zext_ln33_4_fu_644_p1) + unsigned(ap_const_lv6_3F));
    empty_168_fu_692_p1 <= empty_167_fu_686_p2(5 - 1 downto 0);
    empty_169_fu_716_p2 <= std_logic_vector(unsigned(p_shl10_fu_696_p3) - unsigned(p_shl11_0_0_cast_fu_712_p1));
    empty_170_fu_450_p2 <= std_logic_vector(unsigned(p_shl10_0_1_fu_430_p3) - unsigned(p_shl11_0_1_cast_fu_446_p1));
    empty_171_fu_1159_p2 <= std_logic_vector(unsigned(h_4_reg_1615) + unsigned(ap_const_lv5_1));
    empty_172_fu_1190_p2 <= std_logic_vector(unsigned(p_shl10_0_2_fu_1170_p3) - unsigned(p_shl11_0_2_cast_fu_1186_p1));
    empty_174_fu_492_p1 <= add_ln31_fu_468_p2(2 - 1 downto 0);
    empty_175_fu_518_p1 <= p_mid152_fu_508_p2(4 - 1 downto 0);
    empty_176_fu_1039_p1 <= p_mid156_fu_1030_p2(4 - 1 downto 0);
    empty_177_fu_1073_p1 <= p_mid160_fu_1064_p2(4 - 1 downto 0);
    empty_178_fu_761_p1 <= p_mid148_fu_744_p2(7 - 1 downto 0);
    empty_179_fu_822_p1 <= p_mid1_fu_816_p2(7 - 1 downto 0);
    empty_180_fu_865_p1 <= p_mid111_fu_859_p2(5 - 1 downto 0);
    empty_fu_386_p1 <= och_fu_122(2 - 1 downto 0);

    grp_fu_310_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, mul_reg_1946, select_ln49_reg_2073, select_ln49_28_reg_2094, sum_9_0_1_1_reg_2111, select_ln49_31_reg_2117, select_ln49_32_reg_2124, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_310_p0 <= select_ln49_32_reg_2124;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_310_p0 <= select_ln49_31_reg_2117;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_310_p0 <= sum_9_0_1_1_reg_2111;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_310_p0 <= select_ln49_28_reg_2094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_310_p0 <= select_ln49_reg_2073;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_310_p0 <= mul_reg_1946;
        else 
            grp_fu_310_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_310_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, mul_0_0_1_reg_1976, mul_0_0_2_reg_2008_pp0_iter2_reg, mul_0_1_2_reg_2063_pp0_iter3_reg, mul_0_2_reg_2079_pp0_iter4_reg, mul_0_2_1_reg_2084_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_310_p1 <= mul_0_2_1_reg_2084_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_310_p1 <= mul_0_2_reg_2079_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_310_p1 <= mul_0_1_2_reg_2063_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_310_p1 <= mul_0_0_2_reg_2008_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_310_p1 <= mul_0_0_1_reg_1976;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_310_p1 <= ap_const_lv32_0;
        else 
            grp_fu_310_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_315_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, select_ln49_29_reg_2100, select_ln49_30_reg_2106, sum_3_0_2_1_reg_2134, select_ln49_33_reg_2145, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_315_p0 <= select_ln49_33_reg_2145;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_315_p0 <= sum_3_0_2_1_reg_2134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_315_p0 <= select_ln49_30_reg_2106;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_315_p0 <= select_ln49_29_reg_2100;
        else 
            grp_fu_315_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_315_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, mul_0_1_reg_2033_pp0_iter2_reg, mul_0_1_1_reg_2048_pp0_iter3_reg, mul_0_2_2_reg_2089_pp0_iter5_reg, bitcast_ln31_fu_1572_p1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_315_p1 <= bitcast_ln31_fu_1572_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_315_p1 <= mul_0_2_2_reg_2089_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_315_p1 <= mul_0_1_1_reg_2048_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_315_p1 <= mul_0_1_reg_2033_pp0_iter2_reg;
        else 
            grp_fu_315_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, bitcast_ln57_fu_1130_p1, bitcast_ln57_1_fu_1279_p1, bitcast_ln57_2_fu_1332_p1, bitcast_ln57_3_fu_1350_p1, bitcast_ln57_4_fu_1389_p1, bitcast_ln57_5_fu_1440_p1, bitcast_ln57_6_fu_1454_p1, bitcast_ln57_7_fu_1464_p1, bitcast_ln57_8_fu_1473_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_319_p0 <= bitcast_ln57_8_fu_1473_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_319_p0 <= bitcast_ln57_7_fu_1464_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_319_p0 <= bitcast_ln57_6_fu_1454_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_319_p0 <= bitcast_ln57_5_fu_1440_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_319_p0 <= bitcast_ln57_4_fu_1389_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_319_p0 <= bitcast_ln57_3_fu_1350_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_319_p0 <= bitcast_ln57_2_fu_1332_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_319_p0 <= bitcast_ln57_1_fu_1279_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_319_p0 <= bitcast_ln57_fu_1130_p1;
        else 
            grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, bitcast_ln31_45_fu_1125_p1, bitcast_ln31_44_fu_1211_p1, bitcast_ln31_43_fu_1327_p1, bitcast_ln31_42_fu_1345_p1, bitcast_ln31_37_fu_1364_p1, bitcast_ln31_41_fu_1435_p1, bitcast_ln31_40_fu_1449_p1, bitcast_ln31_39_fu_1459_p1, bitcast_ln31_38_fu_1469_p1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_319_p1 <= bitcast_ln31_38_fu_1469_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_319_p1 <= bitcast_ln31_39_fu_1459_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_319_p1 <= bitcast_ln31_40_fu_1449_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_319_p1 <= bitcast_ln31_41_fu_1435_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_319_p1 <= bitcast_ln31_37_fu_1364_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_319_p1 <= bitcast_ln31_42_fu_1345_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_319_p1 <= bitcast_ln31_43_fu_1327_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_319_p1 <= bitcast_ln31_44_fu_1211_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_319_p1 <= bitcast_ln31_45_fu_1125_p1;
        else 
            grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_873_p_ce <= ap_const_logic_1;
    grp_fu_873_p_din0 <= grp_fu_310_p0;
    grp_fu_873_p_din1 <= grp_fu_310_p1;
    grp_fu_873_p_opcode <= ap_const_lv2_0;
    grp_fu_877_p_ce <= ap_const_logic_1;
    grp_fu_877_p_din0 <= grp_fu_315_p0;
    grp_fu_877_p_din1 <= grp_fu_315_p1;
    grp_fu_877_p_opcode <= ap_const_lv2_0;
    grp_fu_881_p_ce <= ap_const_logic_1;
    grp_fu_881_p_din0 <= grp_fu_319_p0;
    grp_fu_881_p_din1 <= grp_fu_319_p1;
    icmp_ln31_fu_456_p2 <= "1" when (indvar_flatten134_fu_126 = ap_const_lv12_C40) else "0";
    icmp_ln33_fu_474_p2 <= "1" when (indvar_flatten_fu_118 = ap_const_lv10_310) else "0";
    icmp_ln35_fu_558_p2 <= "1" when (w_fu_110 = ap_const_lv5_1C) else "0";
    icmp_ln49_fu_1384_p2 <= "1" when (unsigned(add_ln46_2_reg_1853) > unsigned(ap_const_lv5_1B)) else "0";
    or_ln31_fu_805_p2 <= (tmp_fu_722_p3 or icmp_ln33_reg_1662);
    or_ln33_fu_576_p2 <= (icmp_ln33_fu_474_p2 or and_ln31_2_fu_564_p2);
    or_ln49_4_fu_1517_p2 <= (select_ln33_25_reg_1765_pp0_iter2_reg or icmp_ln49_reg_1981_pp0_iter2_reg);
    or_ln49_5_fu_1540_p2 <= (tmp_6_reg_1782_pp0_iter5_reg or select_ln33_23_reg_1879_pp0_iter4_reg);
    or_ln49_6_fu_1561_p2 <= (select_ln33_23_reg_1879_pp0_iter6_reg or icmp_ln49_reg_1981_pp0_iter6_reg);
    or_ln49_fu_1490_p2 <= (select_ln33_20_fu_1484_p3 or add_ln46_reg_1771_pp0_iter1_reg);
        p_cast4_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_158_fu_976_p2),6));

        p_cast4_mid1_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid156_fu_1030_p2),6));

        p_cast5_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_161_fu_1003_p2),6));

        p_cast5_mid1_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid160_fu_1064_p2),6));

        p_cast_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_155_fu_402_p2),6));

        p_cast_mid1_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_mid152_fu_508_p2),6));

    p_dup7_fu_570_p2 <= std_logic_vector(unsigned(select_ln31_fu_480_p3) + unsigned(ap_const_lv5_1));
    p_mid111_fu_859_p2 <= std_logic_vector(unsigned(zext_ln33_fu_810_p1) + unsigned(ap_const_lv6_3F));
    p_mid115_fu_889_p2 <= std_logic_vector(unsigned(p_shl10_0_0_mid1_fu_869_p3) - unsigned(p_shl11_0_0_cast_mid1_fu_885_p1));
    p_mid117_fu_610_p2 <= std_logic_vector(unsigned(p_shl10_0_1_mid1_fu_590_p3) - unsigned(p_shl11_0_1_cast_mid1_fu_606_p1));
    p_mid119_fu_1228_p2 <= std_logic_vector(unsigned(select_ln31_reg_1676) + unsigned(ap_const_lv5_2));
    p_mid121_fu_1266_p2 <= std_logic_vector(unsigned(p_shl10_0_2_mid1_fu_1246_p3) - unsigned(p_shl11_0_2_cast_mid1_fu_1262_p1));
    p_mid148_fu_744_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_737_p1) - unsigned(p_shl3_cast_mid1_fu_741_p1));
    p_mid152_fu_508_p2 <= std_logic_vector(unsigned(p_shl3_cast2_mid1_fu_504_p1) - unsigned(zext_ln31_fu_488_p1));
    p_mid154_fu_530_p2 <= std_logic_vector(unsigned(p_shl9_0_0_mid1_fu_522_p3) - unsigned(p_cast_mid1_fu_514_p1));
    p_mid156_fu_1030_p2 <= std_logic_vector(signed(p_mid152_reg_1692) + signed(ap_const_lv5_1));
    p_mid158_fu_1051_p2 <= std_logic_vector(unsigned(p_shl9_0_1_mid1_fu_1043_p3) - unsigned(p_cast4_mid1_fu_1035_p1));
    p_mid160_fu_1064_p2 <= std_logic_vector(signed(p_mid152_reg_1692) + signed(ap_const_lv5_2));
    p_mid162_fu_1085_p2 <= std_logic_vector(unsigned(p_shl9_0_2_mid1_fu_1077_p3) - unsigned(p_cast5_mid1_fu_1069_p1));
    p_mid184_fu_785_p2 <= std_logic_vector(unsigned(p_shl4_mid_fu_765_p3) - unsigned(p_shl5_cast_mid182_fu_781_p1));
    p_mid19_fu_846_p2 <= std_logic_vector(unsigned(p_shl4_mid1_fu_826_p3) - unsigned(p_shl5_cast_mid1_fu_842_p1));
    p_mid1_fu_816_p2 <= std_logic_vector(unsigned(zext_ln33_6_fu_813_p1) + unsigned(select_ln31_29_fu_750_p3));
    p_shl10_0_0_mid1_fu_869_p3 <= (empty_180_fu_865_p1 & ap_const_lv5_0);
    p_shl10_0_1_fu_430_p3 <= (h_fu_114 & ap_const_lv5_0);
    p_shl10_0_1_mid1_fu_590_p3 <= (p_dup7_fu_570_p2 & ap_const_lv5_0);
    p_shl10_0_2_fu_1170_p3 <= (empty_171_fu_1159_p2 & ap_const_lv5_0);
    p_shl10_0_2_mid1_fu_1246_p3 <= (p_mid119_fu_1228_p2 & ap_const_lv5_0);
    p_shl10_fu_696_p3 <= (empty_168_fu_692_p1 & ap_const_lv5_0);
        p_shl11_0_0_cast_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl11_fu_704_p3),10));

        p_shl11_0_0_cast_mid1_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl11_0_0_mid1_fu_877_p3),10));

    p_shl11_0_0_mid1_fu_877_p3 <= (p_mid111_fu_859_p2 & ap_const_lv2_0);
    p_shl11_0_1_cast_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_1_fu_438_p3),10));
    p_shl11_0_1_cast_mid1_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_1_mid1_fu_598_p3),10));
    p_shl11_0_1_fu_438_p3 <= (h_fu_114 & ap_const_lv2_0);
    p_shl11_0_1_mid1_fu_598_p3 <= (p_dup7_fu_570_p2 & ap_const_lv2_0);
    p_shl11_0_2_cast_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_2_fu_1178_p3),10));
    p_shl11_0_2_cast_mid1_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl11_0_2_mid1_fu_1254_p3),10));
    p_shl11_0_2_fu_1178_p3 <= (empty_171_fu_1159_p2 & ap_const_lv2_0);
    p_shl11_0_2_mid1_fu_1254_p3 <= (p_mid119_fu_1228_p2 & ap_const_lv2_0);
    p_shl11_fu_704_p3 <= (empty_167_fu_686_p2 & ap_const_lv2_0);
    p_shl3_cast2_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_390_p3),5));
    p_shl3_cast2_mid1_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_fu_496_p3),5));
    p_shl3_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_reg_1637),8));
    p_shl3_cast_mid1_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_reg_1687),8));
    p_shl3_fu_390_p3 <= (empty_fu_386_p1 & ap_const_lv2_0);
    p_shl3_mid1_fu_496_p3 <= (empty_174_fu_492_p1 & ap_const_lv2_0);
    p_shl4_fu_660_p3 <= (empty_165_fu_656_p1 & ap_const_lv5_0);
    p_shl4_mid1_fu_826_p3 <= (empty_179_fu_822_p1 & ap_const_lv5_0);
    p_shl4_mid_fu_765_p3 <= (empty_178_fu_761_p1 & ap_const_lv5_0);
        p_shl5_cast_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_fu_668_p3),12));

        p_shl5_cast_mid182_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_mid_fu_773_p3),12));

        p_shl5_cast_mid1_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl5_mid1_fu_834_p3),12));

    p_shl5_fu_668_p3 <= (empty_164_fu_650_p2 & ap_const_lv2_0);
    p_shl5_mid1_fu_834_p3 <= (p_mid1_fu_816_p2 & ap_const_lv2_0);
    p_shl5_mid_fu_773_p3 <= (p_mid148_fu_744_p2 & ap_const_lv2_0);
    p_shl9_0_0_mid1_fu_522_p3 <= (empty_175_fu_518_p1 & ap_const_lv2_0);
    p_shl9_0_1_fu_989_p3 <= (empty_159_fu_985_p1 & ap_const_lv2_0);
    p_shl9_0_1_mid1_fu_1043_p3 <= (empty_176_fu_1039_p1 & ap_const_lv2_0);
    p_shl9_0_2_fu_1016_p3 <= (empty_162_fu_1012_p1 & ap_const_lv2_0);
    p_shl9_0_2_mid1_fu_1077_p3 <= (empty_177_fu_1073_p1 & ap_const_lv2_0);
    p_shl9_fu_416_p3 <= (empty_156_fu_412_p1 & ap_const_lv2_0);
    p_shl_cast_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_624_p3),8));
    p_shl_cast_mid1_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_730_p3),8));
    p_shl_fu_624_p3 <= (empty_reg_1632 & ap_const_lv5_0);
    p_shl_mid1_fu_730_p3 <= (empty_174_reg_1682 & ap_const_lv5_0);
    select_ln31_29_fu_750_p3 <= 
        p_mid148_fu_744_p2 when (icmp_ln33_reg_1662(0) = '1') else 
        empty_154_fu_638_p2;
    select_ln31_30_fu_1359_p3 <= 
        add_ln31_reg_1657 when (icmp_ln33_reg_1662(0) = '1') else 
        och_2_reg_1622;
    select_ln31_31_fu_1057_p3 <= 
        p_mid158_fu_1051_p2 when (icmp_ln33_reg_1662(0) = '1') else 
        empty_160_fu_997_p2;
    select_ln31_32_fu_1091_p3 <= 
        p_mid162_fu_1085_p2 when (icmp_ln33_reg_1662(0) = '1') else 
        empty_163_fu_1024_p2;
    select_ln31_33_fu_536_p3 <= 
        p_mid154_fu_530_p2 when (icmp_ln33_fu_474_p2(0) = '1') else 
        empty_157_fu_424_p2;
    select_ln31_34_fu_791_p3 <= 
        p_mid184_fu_785_p2 when (icmp_ln33_reg_1662(0) = '1') else 
        empty_166_fu_680_p2;
    select_ln31_35_fu_1478_p3 <= 
        ap_const_lv6_20 when (icmp_ln33_reg_1662_pp0_iter1_reg(0) = '1') else 
        empty_167_reg_1743_pp0_iter1_reg;
    select_ln31_36_fu_798_p3 <= 
        ap_const_lv10_3E4 when (icmp_ln33_reg_1662(0) = '1') else 
        empty_169_fu_716_p2;
    select_ln31_37_fu_544_p3 <= 
        ap_const_lv10_0 when (icmp_ln33_fu_474_p2(0) = '1') else 
        empty_170_fu_450_p2;
    select_ln31_38_fu_1221_p3 <= 
        ap_const_lv10_1C when (icmp_ln33_reg_1662(0) = '1') else 
        empty_172_fu_1190_p2;
    select_ln31_fu_480_p3 <= 
        ap_const_lv5_0 when (icmp_ln33_fu_474_p2(0) = '1') else 
        h_fu_114;
    select_ln33_19_fu_852_p3 <= 
        p_mid19_fu_846_p2 when (and_ln31_2_reg_1710(0) = '1') else 
        select_ln31_34_fu_791_p3;
    select_ln33_20_fu_1484_p3 <= 
        p_mid111_reg_1753_pp0_iter1_reg when (and_ln31_2_reg_1710_pp0_iter1_reg(0) = '1') else 
        select_ln31_35_fu_1478_p3;
    select_ln33_21_fu_895_p3 <= 
        p_mid115_fu_889_p2 when (and_ln31_2_reg_1710(0) = '1') else 
        select_ln31_36_fu_798_p3;
    select_ln33_22_fu_616_p3 <= 
        p_mid117_fu_610_p2 when (and_ln31_2_fu_564_p2(0) = '1') else 
        select_ln31_37_fu_544_p3;
    select_ln33_23_fu_1239_p3 <= 
        cmp25_0_2_mid1_fu_1233_p2 when (and_ln31_2_reg_1710(0) = '1') else 
        and_ln31_fu_1216_p2;
    select_ln33_24_fu_1272_p3 <= 
        p_mid121_fu_1266_p2 when (and_ln31_2_reg_1710(0) = '1') else 
        select_ln31_38_fu_1221_p3;
    select_ln33_25_fu_910_p3 <= 
        tmp_4_fu_902_p3 when (and_ln31_2_reg_1710(0) = '1') else 
        or_ln31_fu_805_p2;
    select_ln33_26_fu_1379_p3 <= 
        p_dup7_reg_1721 when (and_ln31_2_reg_1710(0) = '1') else 
        select_ln31_reg_1676;
    select_ln33_27_fu_1403_p3 <= 
        ap_const_lv10_1 when (icmp_ln33_reg_1662(0) = '1') else 
        add_ln33_fu_1398_p2;
    select_ln33_fu_582_p3 <= 
        ap_const_lv5_0 when (or_ln33_fu_576_p2(0) = '1') else 
        w_fu_110;
    select_ln49_28_fu_1511_p3 <= 
        select_ln49_reg_2073 when (select_ln33_25_reg_1765_pp0_iter1_reg(0) = '1') else 
        reg_339;
    select_ln49_29_fu_1521_p3 <= 
        select_ln49_28_reg_2094 when (or_ln49_4_fu_1517_p2(0) = '1') else 
        reg_339;
    select_ln49_30_fu_1528_p3 <= 
        select_ln49_29_reg_2100 when (tmp_6_reg_1782_pp0_iter3_reg(0) = '1') else 
        reg_343;
    select_ln49_31_fu_1534_p3 <= 
        sum_9_0_1_1_reg_2111 when (icmp_ln49_reg_1981_pp0_iter4_reg(0) = '1') else 
        reg_339;
    select_ln49_32_fu_1544_p3 <= 
        select_ln49_31_reg_2117 when (or_ln49_5_fu_1540_p2(0) = '1') else 
        reg_339;
    select_ln49_33_fu_1565_p3 <= 
        sum_3_0_2_1_reg_2134 when (or_ln49_6_fu_1561_p2(0) = '1') else 
        reg_343;
    select_ln49_fu_1503_p3 <= 
        ap_const_lv32_0 when (tmp_5_fu_1495_p3(0) = '1') else 
        reg_339;
        sext_ln49_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln46_fu_923_p2),10));

    sum_3_0_2_1_fu_1555_p3 <= 
        select_ln49_31_reg_2117_pp0_iter5_reg when (select_ln33_23_reg_1879_pp0_iter5_reg(0) = '1') else 
        reg_339;
    tmp_4_fu_902_p3 <= p_mid111_fu_859_p2(5 downto 5);
    tmp_5_fu_1495_p3 <= or_ln49_fu_1490_p2(5 downto 5);
    tmp_fu_722_p3 <= empty_167_fu_686_p2(5 downto 5);
    trunc_ln46_cast18_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1728),10));
    trunc_ln46_cast20_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1728),12));
    trunc_ln46_cast_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_reg_1728),6));

    weight0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, zext_ln31_46_fu_757_p1, ap_block_pp0_stage2, zext_ln31_45_fu_962_p1, ap_block_pp0_stage3, zext_ln31_44_fu_1103_p1, ap_block_pp0_stage4, zext_ln31_43_fu_1121_p1, ap_block_pp0_stage5, zext_ln31_38_fu_1206_p1, ap_block_pp0_stage6, zext_ln31_42_fu_1322_p1, ap_block_pp0_stage7, zext_ln31_41_fu_1341_p1, ap_block_pp0_stage8, zext_ln31_40_fu_1374_p1, ap_block_pp0_stage0, zext_ln31_39_fu_1430_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight0_address0 <= zext_ln31_39_fu_1430_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weight0_address0 <= zext_ln31_40_fu_1374_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            weight0_address0 <= zext_ln31_41_fu_1341_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            weight0_address0 <= zext_ln31_42_fu_1322_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            weight0_address0 <= zext_ln31_38_fu_1206_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            weight0_address0 <= zext_ln31_43_fu_1121_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            weight0_address0 <= zext_ln31_44_fu_1103_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            weight0_address0 <= zext_ln31_45_fu_962_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            weight0_address0 <= zext_ln31_46_fu_757_p1(6 - 1 downto 0);
        else 
            weight0_address0 <= "XXXXXX";
        end if; 
    end process;


    weight0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            weight0_ce0 <= ap_const_logic_1;
        else 
            weight0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln57_29_fu_946_p1, ap_block_pp0_stage3, zext_ln57_fu_971_p1, ap_block_pp0_stage4, zext_ln57_27_fu_1116_p1, ap_block_pp0_stage5, zext_ln57_28_fu_1149_p1, ap_block_pp0_stage6, zext_ln57_30_fu_1288_p1, ap_block_pp0_stage7, zext_ln57_31_fu_1337_p1, ap_block_pp0_stage8, zext_ln57_32_fu_1355_p1, ap_block_pp0_stage0, zext_ln57_33_fu_1394_p1, ap_block_pp0_stage1, zext_ln57_34_fu_1445_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            x_address0 <= zext_ln57_34_fu_1445_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_address0 <= zext_ln57_33_fu_1394_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            x_address0 <= zext_ln57_32_fu_1355_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            x_address0 <= zext_ln57_31_fu_1337_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            x_address0 <= zext_ln57_30_fu_1288_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            x_address0 <= zext_ln57_28_fu_1149_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            x_address0 <= zext_ln57_27_fu_1116_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            x_address0 <= zext_ln57_fu_971_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            x_address0 <= zext_ln57_29_fu_946_p1(10 - 1 downto 0);
        else 
            x_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            x_ce0 <= ap_const_logic_1;
        else 
            x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln31_fu_552_p2 <= (icmp_ln33_fu_474_p2 xor ap_const_lv1_1);
    y_address0 <= zext_ln65_fu_1576_p1(12 - 1 downto 0);

    y_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            y_ce0 <= ap_const_logic_1;
        else 
            y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y_d0 <= reg_343;

    y_we0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            y_we0 <= ap_const_logic_1;
        else 
            y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln31_37_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_30_reg_1961_pp0_iter6_reg),64));
    zext_ln31_38_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_21_fu_1201_p2),64));
    zext_ln31_39_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_22_fu_1425_p2),64));
    zext_ln31_3_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(och_fu_122),5));
    zext_ln31_40_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_23_fu_1369_p2),64));
    zext_ln31_41_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_32_reg_1815),64));
    zext_ln31_42_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_24_fu_1317_p2),64));
    zext_ln31_43_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_31_reg_1808),64));
    zext_ln31_44_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_25_fu_1098_p2),64));
    zext_ln31_45_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_26_fu_957_p2),64));
    zext_ln31_46_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_33_reg_1698),64));
    zext_ln31_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_fu_468_p2),5));
    zext_ln33_4_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_4_reg_1615),6));
    zext_ln33_5_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_4_reg_1615),8));
    zext_ln33_6_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_dup7_reg_1721),8));
    zext_ln33_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_dup7_reg_1721),6));
    zext_ln49_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_2_fu_1135_p2),10));
    zext_ln57_27_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_1_fu_1111_p2),64));
    zext_ln57_28_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_2_fu_1144_p2),64));
    zext_ln57_29_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_3_fu_941_p2),64));
    zext_ln57_30_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_4_fu_1284_p2),64));
    zext_ln57_31_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_5_reg_1896),64));
    zext_ln57_32_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_6_reg_1901),64));
    zext_ln57_33_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_7_reg_1906),64));
    zext_ln57_34_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_8_reg_1911),64));
    zext_ln57_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_fu_967_p2),64));
    zext_ln65_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_reg_1793_pp0_iter7_reg),64));
end behav;
