// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        x_address0,
        x_ce0,
        x_q0,
        weight0_0_load,
        weight0_0_load_1,
        weight0_0_load_2,
        weight0_0_load_3,
        weight0_0_load_4,
        weight0_0_load_5,
        weight0_0_load_6,
        weight0_0_load_7,
        weight0_0_load_8,
        merge_i,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_627_p_din0,
        grp_fu_627_p_din1,
        grp_fu_627_p_opcode,
        grp_fu_627_p_dout0,
        grp_fu_627_p_ce,
        grp_fu_631_p_din0,
        grp_fu_631_p_din1,
        grp_fu_631_p_opcode,
        grp_fu_631_p_dout0,
        grp_fu_631_p_ce,
        grp_fu_635_p_din0,
        grp_fu_635_p_din1,
        grp_fu_635_p_dout0,
        grp_fu_635_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] empty;
output  [9:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
input  [31:0] weight0_0_load;
input  [31:0] weight0_0_load_1;
input  [31:0] weight0_0_load_2;
input  [31:0] weight0_0_load_3;
input  [31:0] weight0_0_load_4;
input  [31:0] weight0_0_load_5;
input  [31:0] weight0_0_load_6;
input  [31:0] weight0_0_load_7;
input  [31:0] weight0_0_load_8;
input  [31:0] merge_i;
output  [11:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_627_p_din0;
output  [31:0] grp_fu_627_p_din1;
output  [1:0] grp_fu_627_p_opcode;
input  [31:0] grp_fu_627_p_dout0;
output   grp_fu_627_p_ce;
output  [31:0] grp_fu_631_p_din0;
output  [31:0] grp_fu_631_p_din1;
output  [1:0] grp_fu_631_p_opcode;
input  [31:0] grp_fu_631_p_dout0;
output   grp_fu_631_p_ce;
output  [31:0] grp_fu_635_p_din0;
output  [31:0] grp_fu_635_p_din1;
input  [31:0] grp_fu_635_p_dout0;
output   grp_fu_635_p_ce;

reg ap_idle;
reg[9:0] x_address0;
reg x_ce0;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state18_pp0_stage8_iter1;
wire    ap_block_state27_pp0_stage8_iter2;
wire    ap_block_state36_pp0_stage8_iter3;
wire    ap_block_state45_pp0_stage8_iter4;
wire    ap_block_state54_pp0_stage8_iter5;
wire    ap_block_state63_pp0_stage8_iter6;
wire    ap_block_pp0_stage8_subdone;
reg   [0:0] icmp_ln2795_reg_1041;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_283;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state21_pp0_stage2_iter2;
wire    ap_block_state30_pp0_stage2_iter3;
wire    ap_block_state39_pp0_stage2_iter4;
wire    ap_block_state48_pp0_stage2_iter5;
wire    ap_block_state57_pp0_stage2_iter6;
wire    ap_block_state66_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state22_pp0_stage3_iter2;
wire    ap_block_state31_pp0_stage3_iter3;
wire    ap_block_state40_pp0_stage3_iter4;
wire    ap_block_state49_pp0_stage3_iter5;
wire    ap_block_state58_pp0_stage3_iter6;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] select_ln2795_7_reg_1075;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state23_pp0_stage4_iter2;
wire    ap_block_state32_pp0_stage4_iter3;
wire    ap_block_state41_pp0_stage4_iter4;
wire    ap_block_state50_pp0_stage4_iter5;
wire    ap_block_state59_pp0_stage4_iter6;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state24_pp0_stage5_iter2;
wire    ap_block_state33_pp0_stage5_iter3;
wire    ap_block_state42_pp0_stage5_iter4;
wire    ap_block_state51_pp0_stage5_iter5;
wire    ap_block_state60_pp0_stage5_iter6;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] tmp_4_reg_1097;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state25_pp0_stage6_iter2;
wire    ap_block_state34_pp0_stage6_iter3;
wire    ap_block_state43_pp0_stage6_iter4;
wire    ap_block_state52_pp0_stage6_iter5;
wire    ap_block_state61_pp0_stage6_iter6;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state26_pp0_stage7_iter2;
wire    ap_block_state35_pp0_stage7_iter3;
wire    ap_block_state44_pp0_stage7_iter4;
wire    ap_block_state53_pp0_stage7_iter5;
wire    ap_block_state62_pp0_stage7_iter6;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state28_pp0_stage0_iter3;
wire    ap_block_state37_pp0_stage0_iter4;
wire    ap_block_state46_pp0_stage0_iter5;
wire    ap_block_state55_pp0_stage0_iter6;
wire    ap_block_state64_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state20_pp0_stage1_iter2;
wire    ap_block_state29_pp0_stage1_iter3;
wire    ap_block_state38_pp0_stage1_iter4;
wire    ap_block_state47_pp0_stage1_iter5;
wire    ap_block_state56_pp0_stage1_iter6;
wire    ap_block_state65_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter1_reg;
reg   [31:0] reg_287;
reg   [0:0] select_ln2795_7_reg_1075_pp0_iter1_reg;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter2_reg;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter4_reg;
reg   [0:0] icmp_ln2811_reg_1217;
reg   [0:0] icmp_ln2811_reg_1217_pp0_iter3_reg;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter5_reg;
reg   [0:0] select_ln2795_5_reg_1234;
reg   [0:0] select_ln2795_5_reg_1234_pp0_iter4_reg;
reg   [31:0] reg_291;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_1097_pp0_iter3_reg;
reg   [0:0] icmp_ln2795_reg_1041_pp0_iter6_reg;
reg   [4:0] h_3_reg_1013;
reg   [4:0] h_3_reg_1013_pp0_iter1_reg;
reg   [4:0] h_3_reg_1013_pp0_iter2_reg;
reg   [4:0] h_3_reg_1013_pp0_iter3_reg;
reg   [4:0] h_3_reg_1013_pp0_iter4_reg;
reg   [4:0] h_3_reg_1013_pp0_iter5_reg;
reg   [4:0] h_3_reg_1013_pp0_iter6_reg;
reg   [9:0] indvar_flatten_load_reg_1022;
wire   [5:0] empty_66_fu_321_p2;
reg   [5:0] empty_66_reg_1027;
reg   [5:0] empty_66_reg_1027_pp0_iter1_reg;
wire   [4:0] empty_70_fu_357_p2;
reg   [4:0] empty_70_reg_1032;
reg   [4:0] empty_70_reg_1032_pp0_iter1_reg;
reg   [4:0] empty_70_reg_1032_pp0_iter2_reg;
reg   [4:0] empty_70_reg_1032_pp0_iter3_reg;
reg   [4:0] empty_70_reg_1032_pp0_iter4_reg;
reg   [4:0] empty_70_reg_1032_pp0_iter5_reg;
reg   [4:0] empty_70_reg_1032_pp0_iter6_reg;
wire   [0:0] icmp_ln2795_fu_371_p2;
wire   [0:0] icmp_ln2797_fu_380_p2;
reg   [0:0] icmp_ln2797_reg_1045;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter1_reg;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter2_reg;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter3_reg;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter4_reg;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter5_reg;
reg   [0:0] icmp_ln2797_reg_1045_pp0_iter6_reg;
wire   [4:0] select_ln2795_fu_386_p3;
reg   [4:0] select_ln2795_reg_1055;
reg   [4:0] select_ln2795_reg_1055_pp0_iter1_reg;
reg   [4:0] select_ln2795_reg_1055_pp0_iter2_reg;
reg   [4:0] select_ln2795_reg_1055_pp0_iter3_reg;
reg   [4:0] select_ln2795_reg_1055_pp0_iter4_reg;
reg   [4:0] select_ln2795_reg_1055_pp0_iter5_reg;
reg   [4:0] select_ln2795_reg_1055_pp0_iter6_reg;
wire   [5:0] p_mid111_fu_398_p2;
reg   [5:0] p_mid111_reg_1063;
reg   [5:0] p_mid111_reg_1063_pp0_iter1_reg;
wire   [9:0] select_ln2795_3_fu_434_p3;
reg   [9:0] select_ln2795_3_reg_1068;
wire   [0:0] select_ln2795_7_fu_450_p3;
reg   [0:0] select_ln2795_7_reg_1075_pp0_iter2_reg;
wire  signed [5:0] add_ln2808_fu_461_p2;
reg  signed [5:0] add_ln2808_reg_1081;
reg  signed [5:0] add_ln2808_reg_1081_pp0_iter1_reg;
wire  signed [9:0] sext_ln2811_fu_467_p1;
reg  signed [9:0] sext_ln2811_reg_1086;
reg   [0:0] tmp_4_reg_1097_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_1097_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_1097_pp0_iter4_reg;
reg   [0:0] tmp_4_reg_1097_pp0_iter5_reg;
wire   [9:0] trunc_ln2808_cast18_fu_489_p1;
reg   [9:0] trunc_ln2808_cast18_reg_1103;
wire   [9:0] empty_69_fu_520_p2;
reg   [9:0] empty_69_reg_1114;
wire   [9:0] empty_71_fu_544_p2;
reg   [9:0] empty_71_reg_1119;
wire   [31:0] bitcast_ln2819_fu_550_p1;
wire   [4:0] add_ln2808_1_fu_555_p2;
reg   [4:0] add_ln2808_1_reg_1130;
wire   [9:0] zext_ln2811_fu_560_p1;
reg   [9:0] zext_ln2811_reg_1135;
wire   [9:0] select_ln2795_4_fu_579_p3;
reg   [9:0] select_ln2795_4_reg_1146;
wire   [31:0] bitcast_ln2819_1_fu_584_p1;
wire   [0:0] cmp25_0_2_mid1_fu_604_p2;
reg   [0:0] cmp25_0_2_mid1_reg_1162;
wire   [31:0] bitcast_ln2819_2_fu_642_p1;
wire   [9:0] add_ln2816_5_fu_656_p2;
reg   [9:0] add_ln2816_5_reg_1177;
wire   [9:0] add_ln2816_6_fu_660_p2;
reg   [9:0] add_ln2816_6_reg_1182;
wire   [9:0] add_ln2816_7_fu_665_p2;
reg   [9:0] add_ln2816_7_reg_1187;
wire   [9:0] add_ln2816_8_fu_670_p2;
reg   [9:0] add_ln2816_8_reg_1192;
reg   [31:0] mul_reg_1197;
wire   [31:0] bitcast_ln2819_3_fu_675_p1;
reg   [31:0] mul_0_0_1_reg_1212;
wire   [0:0] icmp_ln2811_fu_684_p2;
reg   [0:0] icmp_ln2811_reg_1217_pp0_iter1_reg;
reg   [0:0] icmp_ln2811_reg_1217_pp0_iter2_reg;
reg   [0:0] icmp_ln2811_reg_1217_pp0_iter4_reg;
reg   [0:0] icmp_ln2811_reg_1217_pp0_iter5_reg;
wire   [31:0] bitcast_ln2819_4_fu_689_p1;
wire   [0:0] select_ln2795_5_fu_708_p3;
reg   [0:0] select_ln2795_5_reg_1234_pp0_iter1_reg;
reg   [0:0] select_ln2795_5_reg_1234_pp0_iter2_reg;
reg   [0:0] select_ln2795_5_reg_1234_pp0_iter3_reg;
reg   [0:0] select_ln2795_5_reg_1234_pp0_iter5_reg;
reg   [31:0] mul_0_0_2_reg_1241;
reg   [31:0] mul_0_0_2_reg_1241_pp0_iter1_reg;
wire   [31:0] bitcast_ln2819_5_fu_719_p1;
reg   [31:0] mul_0_1_reg_1256;
reg   [31:0] mul_0_1_reg_1256_pp0_iter2_reg;
wire   [31:0] bitcast_ln2819_6_fu_738_p1;
reg   [31:0] mul_0_1_1_reg_1271;
reg   [31:0] mul_0_1_1_reg_1271_pp0_iter2_reg;
reg   [31:0] mul_0_1_1_reg_1271_pp0_iter3_reg;
wire   [31:0] bitcast_ln2819_7_fu_747_p1;
reg   [31:0] mul_0_1_2_reg_1281;
reg   [31:0] mul_0_1_2_reg_1281_pp0_iter2_reg;
reg   [31:0] mul_0_1_2_reg_1281_pp0_iter3_reg;
wire   [31:0] bitcast_ln2819_8_fu_752_p1;
wire   [31:0] select_ln2811_fu_775_p3;
reg   [31:0] select_ln2811_reg_1291;
reg   [31:0] mul_0_2_reg_1297;
reg   [31:0] mul_0_2_reg_1297_pp0_iter2_reg;
reg   [31:0] mul_0_2_reg_1297_pp0_iter3_reg;
reg   [31:0] mul_0_2_reg_1297_pp0_iter4_reg;
reg   [31:0] mul_0_2_1_reg_1302;
reg   [31:0] mul_0_2_1_reg_1302_pp0_iter2_reg;
reg   [31:0] mul_0_2_1_reg_1302_pp0_iter3_reg;
reg   [31:0] mul_0_2_1_reg_1302_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_1307;
reg   [31:0] mul_0_2_2_reg_1307_pp0_iter2_reg;
reg   [31:0] mul_0_2_2_reg_1307_pp0_iter3_reg;
reg   [31:0] mul_0_2_2_reg_1307_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_1307_pp0_iter5_reg;
wire   [31:0] select_ln2811_1_fu_783_p3;
reg   [31:0] select_ln2811_1_reg_1312;
wire   [31:0] select_ln2811_2_fu_793_p3;
reg   [31:0] select_ln2811_2_reg_1318;
wire   [31:0] select_ln2811_3_fu_800_p3;
reg   [31:0] select_ln2811_3_reg_1324;
reg   [31:0] sum_5_0_1_1_reg_1329;
wire   [31:0] select_ln2811_4_fu_806_p3;
reg   [31:0] select_ln2811_4_reg_1335;
reg   [31:0] select_ln2811_4_reg_1335_pp0_iter5_reg;
wire   [31:0] select_ln2811_5_fu_816_p3;
reg   [31:0] select_ln2811_5_reg_1342;
wire   [31:0] sum_2_0_2_1_fu_823_p3;
reg   [31:0] sum_2_0_2_1_reg_1347;
wire   [31:0] select_ln2811_6_fu_919_p3;
reg   [31:0] select_ln2811_6_reg_1353;
wire   [11:0] add_ln2827_fu_926_p2;
reg   [11:0] add_ln2827_reg_1358;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage5_subdone;
reg    ap_condition_exit_pp0_iter6_stage5;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] zext_ln2819_fu_476_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln2819_1_fu_497_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln2819_2_fu_569_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln2819_3_fu_594_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln2819_4_fu_651_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln2819_5_fu_680_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln2819_6_fu_694_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln2819_7_fu_724_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln2819_8_fu_743_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln2827_fu_932_p1;
reg   [4:0] w_fu_102;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_w_load;
reg   [4:0] h_fu_106;
wire   [4:0] select_ln2795_8_fu_714_p3;
reg   [4:0] ap_sig_allocacmp_h_3;
reg   [9:0] indvar_flatten_fu_110;
wire   [9:0] add_ln2795_fu_703_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] grp_fu_270_p0;
reg   [31:0] grp_fu_270_p1;
reg   [31:0] grp_fu_275_p0;
reg   [31:0] grp_fu_275_p1;
reg   [31:0] grp_fu_279_p0;
reg   [31:0] grp_fu_279_p1;
wire   [5:0] zext_ln2795_fu_317_p1;
wire   [4:0] empty_67_fu_327_p1;
wire   [7:0] p_shl11_fu_339_p3;
wire   [9:0] p_shl10_fu_331_p3;
wire  signed [9:0] p_shl11_0_0_cast_fu_347_p1;
wire   [5:0] zext_ln2795_2_fu_394_p1;
wire   [4:0] empty_74_fu_404_p1;
wire   [7:0] p_shl11_0_0_mid1_fu_416_p3;
wire   [9:0] p_shl10_0_0_mid1_fu_408_p3;
wire  signed [9:0] p_shl11_0_0_cast_mid1_fu_424_p1;
wire   [9:0] p_mid115_fu_428_p2;
wire   [9:0] empty_68_fu_351_p2;
wire   [0:0] tmp_2_fu_442_p3;
wire   [0:0] tmp_1_fu_363_p3;
wire   [5:0] trunc_ln2808_cast_fu_458_p1;
wire   [9:0] add_ln2816_fu_471_p2;
wire   [9:0] add_ln2816_1_fu_492_p2;
wire   [6:0] p_shl11_0_1_fu_509_p3;
wire   [9:0] p_shl10_0_1_fu_502_p3;
wire   [9:0] p_shl11_0_1_cast_fu_516_p1;
wire   [6:0] p_shl11_0_2_fu_533_p3;
wire   [9:0] p_shl10_0_2_fu_526_p3;
wire   [9:0] p_shl11_0_2_cast_fu_540_p1;
wire   [9:0] add_ln2816_2_fu_564_p2;
wire   [9:0] add_ln2816_3_fu_589_p2;
wire   [4:0] p_mid119_fu_599_p2;
wire   [6:0] p_shl11_0_2_mid1_fu_618_p3;
wire   [9:0] p_shl10_0_2_mid1_fu_610_p3;
wire   [9:0] p_shl11_0_2_cast_mid1_fu_626_p1;
wire   [9:0] p_mid121_fu_630_p2;
wire   [9:0] add_ln2816_4_fu_647_p2;
wire   [9:0] select_ln2795_6_fu_636_p3;
wire   [0:0] cmp25_0_2_fu_698_p2;
wire   [5:0] select_ln2795_2_fu_757_p3;
wire   [5:0] or_ln2811_fu_762_p2;
wire   [0:0] tmp_3_fu_767_p3;
wire   [0:0] or_ln2811_1_fu_789_p2;
wire   [0:0] or_ln2811_2_fu_812_p2;
wire   [7:0] zext_ln2795_1_fu_829_p1;
wire   [7:0] empty_63_fu_832_p2;
wire   [6:0] empty_64_fu_837_p1;
wire   [9:0] p_shl5_fu_849_p3;
wire   [11:0] p_shl4_fu_841_p3;
wire  signed [11:0] p_shl5_cast_fu_857_p1;
wire   [7:0] zext_ln2795_3_fu_867_p1;
wire   [7:0] p_mid1_fu_870_p2;
wire   [6:0] empty_73_fu_875_p1;
wire   [9:0] p_shl5_mid1_fu_887_p3;
wire   [11:0] p_shl4_mid1_fu_879_p3;
wire  signed [11:0] p_shl5_cast_mid1_fu_895_p1;
wire   [11:0] p_mid19_fu_899_p2;
wire   [11:0] empty_65_fu_861_p2;
wire   [0:0] or_ln2811_3_fu_915_p2;
wire   [11:0] trunc_ln2808_cast20_fu_912_p1;
wire   [11:0] select_ln2795_1_fu_905_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to5;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter6_stage5)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_fu_106 <= 5'd0;
    end else if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        h_fu_106 <= select_ln2795_8_fu_714_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_110 <= 10'd0;
    end else if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        indvar_flatten_fu_110 <= add_ln2795_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_fu_102 <= 5'd0;
    end else if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        w_fu_102 <= add_ln2808_1_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln2808_1_reg_1130 <= add_ln2808_1_fu_555_p2;
        zext_ln2811_reg_1135[4 : 0] <= zext_ln2811_fu_560_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln2808_reg_1081 <= add_ln2808_fu_461_p2;
        sext_ln2811_reg_1086 <= sext_ln2811_fu_467_p1;
        tmp_4_reg_1097 <= add_ln2808_fu_461_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln2808_reg_1081_pp0_iter1_reg <= add_ln2808_reg_1081;
        mul_0_1_1_reg_1271_pp0_iter2_reg <= mul_0_1_1_reg_1271;
        mul_0_1_1_reg_1271_pp0_iter3_reg <= mul_0_1_1_reg_1271_pp0_iter2_reg;
        tmp_4_reg_1097_pp0_iter1_reg <= tmp_4_reg_1097;
        tmp_4_reg_1097_pp0_iter2_reg <= tmp_4_reg_1097_pp0_iter1_reg;
        tmp_4_reg_1097_pp0_iter3_reg <= tmp_4_reg_1097_pp0_iter2_reg;
        tmp_4_reg_1097_pp0_iter4_reg <= tmp_4_reg_1097_pp0_iter3_reg;
        tmp_4_reg_1097_pp0_iter5_reg <= tmp_4_reg_1097_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln2816_5_reg_1177 <= add_ln2816_5_fu_656_p2;
        add_ln2816_6_reg_1182 <= add_ln2816_6_fu_660_p2;
        add_ln2816_7_reg_1187 <= add_ln2816_7_fu_665_p2;
        add_ln2816_8_reg_1192 <= add_ln2816_8_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln2795_reg_1041_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln2827_reg_1358 <= add_ln2827_fu_926_p2;
        select_ln2811_6_reg_1353 <= select_ln2811_6_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln2797_reg_1045 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        cmp25_0_2_mid1_reg_1162 <= cmp25_0_2_mid1_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_66_reg_1027 <= empty_66_fu_321_p2;
        empty_66_reg_1027_pp0_iter1_reg <= empty_66_reg_1027;
        empty_70_reg_1032 <= empty_70_fu_357_p2;
        empty_70_reg_1032_pp0_iter1_reg <= empty_70_reg_1032;
        empty_70_reg_1032_pp0_iter2_reg <= empty_70_reg_1032_pp0_iter1_reg;
        empty_70_reg_1032_pp0_iter3_reg <= empty_70_reg_1032_pp0_iter2_reg;
        empty_70_reg_1032_pp0_iter4_reg <= empty_70_reg_1032_pp0_iter3_reg;
        empty_70_reg_1032_pp0_iter5_reg <= empty_70_reg_1032_pp0_iter4_reg;
        empty_70_reg_1032_pp0_iter6_reg <= empty_70_reg_1032_pp0_iter5_reg;
        h_3_reg_1013 <= ap_sig_allocacmp_h_3;
        h_3_reg_1013_pp0_iter1_reg <= h_3_reg_1013;
        h_3_reg_1013_pp0_iter2_reg <= h_3_reg_1013_pp0_iter1_reg;
        h_3_reg_1013_pp0_iter3_reg <= h_3_reg_1013_pp0_iter2_reg;
        h_3_reg_1013_pp0_iter4_reg <= h_3_reg_1013_pp0_iter3_reg;
        h_3_reg_1013_pp0_iter5_reg <= h_3_reg_1013_pp0_iter4_reg;
        h_3_reg_1013_pp0_iter6_reg <= h_3_reg_1013_pp0_iter5_reg;
        icmp_ln2795_reg_1041 <= icmp_ln2795_fu_371_p2;
        icmp_ln2795_reg_1041_pp0_iter1_reg <= icmp_ln2795_reg_1041;
        icmp_ln2795_reg_1041_pp0_iter2_reg <= icmp_ln2795_reg_1041_pp0_iter1_reg;
        icmp_ln2795_reg_1041_pp0_iter3_reg <= icmp_ln2795_reg_1041_pp0_iter2_reg;
        icmp_ln2795_reg_1041_pp0_iter4_reg <= icmp_ln2795_reg_1041_pp0_iter3_reg;
        icmp_ln2795_reg_1041_pp0_iter5_reg <= icmp_ln2795_reg_1041_pp0_iter4_reg;
        icmp_ln2795_reg_1041_pp0_iter6_reg <= icmp_ln2795_reg_1041_pp0_iter5_reg;
        icmp_ln2797_reg_1045_pp0_iter1_reg <= icmp_ln2797_reg_1045;
        icmp_ln2797_reg_1045_pp0_iter2_reg <= icmp_ln2797_reg_1045_pp0_iter1_reg;
        icmp_ln2797_reg_1045_pp0_iter3_reg <= icmp_ln2797_reg_1045_pp0_iter2_reg;
        icmp_ln2797_reg_1045_pp0_iter4_reg <= icmp_ln2797_reg_1045_pp0_iter3_reg;
        icmp_ln2797_reg_1045_pp0_iter5_reg <= icmp_ln2797_reg_1045_pp0_iter4_reg;
        icmp_ln2797_reg_1045_pp0_iter6_reg <= icmp_ln2797_reg_1045_pp0_iter5_reg;
        indvar_flatten_load_reg_1022 <= ap_sig_allocacmp_indvar_flatten_load;
        mul_0_1_reg_1256_pp0_iter2_reg <= mul_0_1_reg_1256;
        p_mid111_reg_1063_pp0_iter1_reg <= p_mid111_reg_1063;
        select_ln2795_7_reg_1075_pp0_iter1_reg <= select_ln2795_7_reg_1075;
        select_ln2795_7_reg_1075_pp0_iter2_reg <= select_ln2795_7_reg_1075_pp0_iter1_reg;
        select_ln2795_reg_1055_pp0_iter1_reg <= select_ln2795_reg_1055;
        select_ln2795_reg_1055_pp0_iter2_reg <= select_ln2795_reg_1055_pp0_iter1_reg;
        select_ln2795_reg_1055_pp0_iter3_reg <= select_ln2795_reg_1055_pp0_iter2_reg;
        select_ln2795_reg_1055_pp0_iter4_reg <= select_ln2795_reg_1055_pp0_iter3_reg;
        select_ln2795_reg_1055_pp0_iter5_reg <= select_ln2795_reg_1055_pp0_iter4_reg;
        select_ln2795_reg_1055_pp0_iter6_reg <= select_ln2795_reg_1055_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2797_reg_1045 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        empty_69_reg_1114[9 : 2] <= empty_69_fu_520_p2[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        empty_71_reg_1119[9 : 2] <= empty_71_fu_544_p2[9 : 2];
        mul_0_2_reg_1297_pp0_iter2_reg <= mul_0_2_reg_1297;
        mul_0_2_reg_1297_pp0_iter3_reg <= mul_0_2_reg_1297_pp0_iter2_reg;
        mul_0_2_reg_1297_pp0_iter4_reg <= mul_0_2_reg_1297_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln2795_fu_371_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln2797_reg_1045 <= icmp_ln2797_fu_380_p2;
        p_mid111_reg_1063 <= p_mid111_fu_398_p2;
        select_ln2795_3_reg_1068[9 : 2] <= select_ln2795_3_fu_434_p3[9 : 2];
        select_ln2795_7_reg_1075 <= select_ln2795_7_fu_450_p3;
        select_ln2795_reg_1055 <= select_ln2795_fu_386_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        icmp_ln2811_reg_1217 <= icmp_ln2811_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        icmp_ln2811_reg_1217_pp0_iter1_reg <= icmp_ln2811_reg_1217;
        icmp_ln2811_reg_1217_pp0_iter2_reg <= icmp_ln2811_reg_1217_pp0_iter1_reg;
        icmp_ln2811_reg_1217_pp0_iter3_reg <= icmp_ln2811_reg_1217_pp0_iter2_reg;
        icmp_ln2811_reg_1217_pp0_iter4_reg <= icmp_ln2811_reg_1217_pp0_iter3_reg;
        icmp_ln2811_reg_1217_pp0_iter5_reg <= icmp_ln2811_reg_1217_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (select_ln2795_7_reg_1075 == 1'd0))) begin
        mul_0_0_1_reg_1212 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_0_0_2_reg_1241 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_0_0_2_reg_1241_pp0_iter1_reg <= mul_0_0_2_reg_1241;
        select_ln2795_5_reg_1234_pp0_iter1_reg <= select_ln2795_5_reg_1234;
        select_ln2795_5_reg_1234_pp0_iter2_reg <= select_ln2795_5_reg_1234_pp0_iter1_reg;
        select_ln2795_5_reg_1234_pp0_iter3_reg <= select_ln2795_5_reg_1234_pp0_iter2_reg;
        select_ln2795_5_reg_1234_pp0_iter4_reg <= select_ln2795_5_reg_1234_pp0_iter3_reg;
        select_ln2795_5_reg_1234_pp0_iter5_reg <= select_ln2795_5_reg_1234_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_0_1_1_reg_1271 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2811_reg_1217 == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_1_2_reg_1281 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_1_2_reg_1281_pp0_iter2_reg <= mul_0_1_2_reg_1281;
        mul_0_1_2_reg_1281_pp0_iter3_reg <= mul_0_1_2_reg_1281_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_4_reg_1097 == 1'd0))) begin
        mul_0_1_reg_1256 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln2795_5_reg_1234 == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_2_1_reg_1302 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_2_1_reg_1302_pp0_iter2_reg <= mul_0_2_1_reg_1302;
        mul_0_2_1_reg_1302_pp0_iter3_reg <= mul_0_2_1_reg_1302_pp0_iter2_reg;
        mul_0_2_1_reg_1302_pp0_iter4_reg <= mul_0_2_1_reg_1302_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_0_2_2_reg_1307 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_0_2_2_reg_1307_pp0_iter2_reg <= mul_0_2_2_reg_1307;
        mul_0_2_2_reg_1307_pp0_iter3_reg <= mul_0_2_2_reg_1307_pp0_iter2_reg;
        mul_0_2_2_reg_1307_pp0_iter4_reg <= mul_0_2_2_reg_1307_pp0_iter3_reg;
        mul_0_2_2_reg_1307_pp0_iter5_reg <= mul_0_2_2_reg_1307_pp0_iter4_reg;
        select_ln2811_4_reg_1335_pp0_iter5_reg <= select_ln2811_4_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln2795_5_reg_1234 == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_2_reg_1297 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_reg_1197 <= grp_fu_635_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (tmp_4_reg_1097 == 1'd0)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln2795_7_reg_1075 == 1'd0)) | ((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_283 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (select_ln2795_5_reg_1234_pp0_iter4_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (select_ln2795_7_reg_1075_pp0_iter1_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (select_ln2795_5_reg_1234_pp0_iter4_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln2811_reg_1217_pp0_iter3_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_287 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_4_reg_1097_pp0_iter3_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_291 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln2795_4_reg_1146[9 : 2] <= select_ln2795_4_fu_579_p3[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln2795_5_reg_1234 <= select_ln2795_5_fu_708_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln2811_1_reg_1312 <= select_ln2811_1_fu_783_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln2795_reg_1041_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        select_ln2811_2_reg_1318 <= select_ln2811_2_fu_793_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2795_reg_1041_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln2811_3_reg_1324 <= select_ln2811_3_fu_800_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln2795_reg_1041_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln2811_4_reg_1335 <= select_ln2811_4_fu_806_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (select_ln2795_5_reg_1234_pp0_iter4_reg == 1'd0) & (icmp_ln2795_reg_1041_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln2811_5_reg_1342 <= select_ln2811_5_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2795_reg_1041_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln2811_reg_1291 <= select_ln2811_fu_775_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln2795_reg_1041_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        sum_2_0_2_1_reg_1347 <= sum_2_0_2_1_fu_823_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        sum_5_0_1_1_reg_1329 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1041 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln2808_cast18_reg_1103[4 : 0] <= trunc_ln2808_cast18_fu_489_p1[4 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln2795_reg_1041 == 1'd1) & (1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln2795_reg_1041_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter6_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_h_3 = 5'd0;
    end else begin
        ap_sig_allocacmp_h_3 = h_fu_106;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_110;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_w_load = 5'd0;
    end else begin
        ap_sig_allocacmp_w_load = w_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_270_p0 = select_ln2811_5_reg_1342;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_270_p0 = select_ln2811_4_reg_1335;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_270_p0 = sum_5_0_1_1_reg_1329;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_270_p0 = select_ln2811_1_reg_1312;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_270_p0 = select_ln2811_reg_1291;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_270_p0 = mul_reg_1197;
    end else begin
        grp_fu_270_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_270_p1 = mul_0_2_1_reg_1302_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_270_p1 = mul_0_2_reg_1297_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_270_p1 = mul_0_1_2_reg_1281_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_270_p1 = mul_0_0_2_reg_1241_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_270_p1 = mul_0_0_1_reg_1212;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_270_p1 = 32'd0;
    end else begin
        grp_fu_270_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_275_p0 = select_ln2811_6_reg_1353;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_p0 = sum_2_0_2_1_reg_1347;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_275_p0 = select_ln2811_3_reg_1324;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_275_p0 = select_ln2811_2_reg_1318;
    end else begin
        grp_fu_275_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_275_p1 = merge_i;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_p1 = mul_0_2_2_reg_1307_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_275_p1 = mul_0_1_1_reg_1271_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_275_p1 = mul_0_1_reg_1256_pp0_iter2_reg;
    end else begin
        grp_fu_275_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_279_p0 = bitcast_ln2819_8_fu_752_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_279_p0 = bitcast_ln2819_7_fu_747_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p0 = bitcast_ln2819_6_fu_738_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_279_p0 = bitcast_ln2819_5_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_279_p0 = bitcast_ln2819_4_fu_689_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_279_p0 = bitcast_ln2819_3_fu_675_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_279_p0 = bitcast_ln2819_2_fu_642_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_279_p0 = bitcast_ln2819_1_fu_584_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_279_p0 = bitcast_ln2819_fu_550_p1;
    end else begin
        grp_fu_279_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_279_p1 = weight0_0_load_8;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_279_p1 = weight0_0_load_7;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p1 = weight0_0_load_6;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_279_p1 = weight0_0_load_5;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_279_p1 = weight0_0_load_4;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_279_p1 = weight0_0_load_3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_279_p1 = weight0_0_load_2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_279_p1 = weight0_0_load_1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_279_p1 = weight0_0_load;
    end else begin
        grp_fu_279_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_address0 = zext_ln2819_8_fu_743_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        x_address0 = zext_ln2819_7_fu_724_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        x_address0 = zext_ln2819_6_fu_694_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        x_address0 = zext_ln2819_5_fu_680_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        x_address0 = zext_ln2819_4_fu_651_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_address0 = zext_ln2819_3_fu_594_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_address0 = zext_ln2819_2_fu_569_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_address0 = zext_ln2819_1_fu_497_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_address0 = zext_ln2819_fu_476_p1;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter6_stage5) & (ap_idle_pp0_0to5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln2795_fu_703_p2 = (indvar_flatten_load_reg_1022 + 10'd1);

assign add_ln2808_1_fu_555_p2 = (select_ln2795_reg_1055 + 5'd1);

assign add_ln2808_fu_461_p2 = ($signed(trunc_ln2808_cast_fu_458_p1) + $signed(6'd63));

assign add_ln2816_1_fu_492_p2 = (trunc_ln2808_cast18_fu_489_p1 + select_ln2795_3_reg_1068);

assign add_ln2816_2_fu_564_p2 = (zext_ln2811_fu_560_p1 + select_ln2795_3_reg_1068);

assign add_ln2816_3_fu_589_p2 = ($signed(sext_ln2811_reg_1086) + $signed(select_ln2795_4_fu_579_p3));

assign add_ln2816_4_fu_647_p2 = (trunc_ln2808_cast18_reg_1103 + select_ln2795_4_reg_1146);

assign add_ln2816_5_fu_656_p2 = (zext_ln2811_reg_1135 + select_ln2795_4_reg_1146);

assign add_ln2816_6_fu_660_p2 = ($signed(sext_ln2811_reg_1086) + $signed(select_ln2795_6_fu_636_p3));

assign add_ln2816_7_fu_665_p2 = (trunc_ln2808_cast18_reg_1103 + select_ln2795_6_fu_636_p3);

assign add_ln2816_8_fu_670_p2 = (zext_ln2811_reg_1135 + select_ln2795_6_fu_636_p3);

assign add_ln2816_fu_471_p2 = ($signed(sext_ln2811_fu_467_p1) + $signed(select_ln2795_3_reg_1068));

assign add_ln2827_fu_926_p2 = (trunc_ln2808_cast20_fu_912_p1 + select_ln2795_1_fu_905_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign bitcast_ln2819_1_fu_584_p1 = reg_283;

assign bitcast_ln2819_2_fu_642_p1 = reg_283;

assign bitcast_ln2819_3_fu_675_p1 = reg_283;

assign bitcast_ln2819_4_fu_689_p1 = reg_283;

assign bitcast_ln2819_5_fu_719_p1 = reg_283;

assign bitcast_ln2819_6_fu_738_p1 = reg_283;

assign bitcast_ln2819_7_fu_747_p1 = reg_283;

assign bitcast_ln2819_8_fu_752_p1 = reg_283;

assign bitcast_ln2819_fu_550_p1 = reg_283;

assign cmp25_0_2_fu_698_p2 = ((empty_70_reg_1032 > 5'd27) ? 1'b1 : 1'b0);

assign cmp25_0_2_mid1_fu_604_p2 = ((p_mid119_fu_599_p2 > 5'd27) ? 1'b1 : 1'b0);

assign empty_63_fu_832_p2 = (zext_ln2795_1_fu_829_p1 + empty);

assign empty_64_fu_837_p1 = empty_63_fu_832_p2[6:0];

assign empty_65_fu_861_p2 = ($signed(p_shl4_fu_841_p3) - $signed(p_shl5_cast_fu_857_p1));

assign empty_66_fu_321_p2 = ($signed(zext_ln2795_fu_317_p1) + $signed(6'd63));

assign empty_67_fu_327_p1 = empty_66_fu_321_p2[4:0];

assign empty_68_fu_351_p2 = ($signed(p_shl10_fu_331_p3) - $signed(p_shl11_0_0_cast_fu_347_p1));

assign empty_69_fu_520_p2 = (p_shl10_0_1_fu_502_p3 - p_shl11_0_1_cast_fu_516_p1);

assign empty_70_fu_357_p2 = (ap_sig_allocacmp_h_3 + 5'd1);

assign empty_71_fu_544_p2 = (p_shl10_0_2_fu_526_p3 - p_shl11_0_2_cast_fu_540_p1);

assign empty_73_fu_875_p1 = p_mid1_fu_870_p2[6:0];

assign empty_74_fu_404_p1 = p_mid111_fu_398_p2[4:0];

assign grp_fu_627_p_ce = 1'b1;

assign grp_fu_627_p_din0 = grp_fu_270_p0;

assign grp_fu_627_p_din1 = grp_fu_270_p1;

assign grp_fu_627_p_opcode = 2'd0;

assign grp_fu_631_p_ce = 1'b1;

assign grp_fu_631_p_din0 = grp_fu_275_p0;

assign grp_fu_631_p_din1 = grp_fu_275_p1;

assign grp_fu_631_p_opcode = 2'd0;

assign grp_fu_635_p_ce = 1'b1;

assign grp_fu_635_p_din0 = grp_fu_279_p0;

assign grp_fu_635_p_din1 = grp_fu_279_p1;

assign icmp_ln2795_fu_371_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln2797_fu_380_p2 = ((ap_sig_allocacmp_w_load == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln2811_fu_684_p2 = ((add_ln2808_1_reg_1130 > 5'd27) ? 1'b1 : 1'b0);

assign or_ln2811_1_fu_789_p2 = (select_ln2795_7_reg_1075_pp0_iter2_reg | icmp_ln2811_reg_1217_pp0_iter1_reg);

assign or_ln2811_2_fu_812_p2 = (tmp_4_reg_1097_pp0_iter5_reg | select_ln2795_5_reg_1234_pp0_iter4_reg);

assign or_ln2811_3_fu_915_p2 = (select_ln2795_5_reg_1234_pp0_iter5_reg | icmp_ln2811_reg_1217_pp0_iter5_reg);

assign or_ln2811_fu_762_p2 = (select_ln2795_2_fu_757_p3 | add_ln2808_reg_1081_pp0_iter1_reg);

assign p_mid111_fu_398_p2 = ($signed(zext_ln2795_2_fu_394_p1) + $signed(6'd63));

assign p_mid115_fu_428_p2 = ($signed(p_shl10_0_0_mid1_fu_408_p3) - $signed(p_shl11_0_0_cast_mid1_fu_424_p1));

assign p_mid119_fu_599_p2 = (h_3_reg_1013 + 5'd2);

assign p_mid121_fu_630_p2 = (p_shl10_0_2_mid1_fu_610_p3 - p_shl11_0_2_cast_mid1_fu_626_p1);

assign p_mid19_fu_899_p2 = ($signed(p_shl4_mid1_fu_879_p3) - $signed(p_shl5_cast_mid1_fu_895_p1));

assign p_mid1_fu_870_p2 = (zext_ln2795_3_fu_867_p1 + empty);

assign p_shl10_0_0_mid1_fu_408_p3 = {{empty_74_fu_404_p1}, {5'd0}};

assign p_shl10_0_1_fu_502_p3 = {{h_3_reg_1013}, {5'd0}};

assign p_shl10_0_2_fu_526_p3 = {{empty_70_reg_1032}, {5'd0}};

assign p_shl10_0_2_mid1_fu_610_p3 = {{p_mid119_fu_599_p2}, {5'd0}};

assign p_shl10_fu_331_p3 = {{empty_67_fu_327_p1}, {5'd0}};

assign p_shl11_0_0_cast_fu_347_p1 = $signed(p_shl11_fu_339_p3);

assign p_shl11_0_0_cast_mid1_fu_424_p1 = $signed(p_shl11_0_0_mid1_fu_416_p3);

assign p_shl11_0_0_mid1_fu_416_p3 = {{p_mid111_fu_398_p2}, {2'd0}};

assign p_shl11_0_1_cast_fu_516_p1 = p_shl11_0_1_fu_509_p3;

assign p_shl11_0_1_fu_509_p3 = {{h_3_reg_1013}, {2'd0}};

assign p_shl11_0_2_cast_fu_540_p1 = p_shl11_0_2_fu_533_p3;

assign p_shl11_0_2_cast_mid1_fu_626_p1 = p_shl11_0_2_mid1_fu_618_p3;

assign p_shl11_0_2_fu_533_p3 = {{empty_70_reg_1032}, {2'd0}};

assign p_shl11_0_2_mid1_fu_618_p3 = {{p_mid119_fu_599_p2}, {2'd0}};

assign p_shl11_fu_339_p3 = {{empty_66_fu_321_p2}, {2'd0}};

assign p_shl4_fu_841_p3 = {{empty_64_fu_837_p1}, {5'd0}};

assign p_shl4_mid1_fu_879_p3 = {{empty_73_fu_875_p1}, {5'd0}};

assign p_shl5_cast_fu_857_p1 = $signed(p_shl5_fu_849_p3);

assign p_shl5_cast_mid1_fu_895_p1 = $signed(p_shl5_mid1_fu_887_p3);

assign p_shl5_fu_849_p3 = {{empty_63_fu_832_p2}, {2'd0}};

assign p_shl5_mid1_fu_887_p3 = {{p_mid1_fu_870_p2}, {2'd0}};

assign select_ln2795_1_fu_905_p3 = ((icmp_ln2797_reg_1045_pp0_iter6_reg[0:0] == 1'b1) ? p_mid19_fu_899_p2 : empty_65_fu_861_p2);

assign select_ln2795_2_fu_757_p3 = ((icmp_ln2797_reg_1045_pp0_iter1_reg[0:0] == 1'b1) ? p_mid111_reg_1063_pp0_iter1_reg : empty_66_reg_1027_pp0_iter1_reg);

assign select_ln2795_3_fu_434_p3 = ((icmp_ln2797_fu_380_p2[0:0] == 1'b1) ? p_mid115_fu_428_p2 : empty_68_fu_351_p2);

assign select_ln2795_4_fu_579_p3 = ((icmp_ln2797_reg_1045[0:0] == 1'b1) ? empty_71_reg_1119 : empty_69_reg_1114);

assign select_ln2795_5_fu_708_p3 = ((icmp_ln2797_reg_1045[0:0] == 1'b1) ? cmp25_0_2_mid1_reg_1162 : cmp25_0_2_fu_698_p2);

assign select_ln2795_6_fu_636_p3 = ((icmp_ln2797_reg_1045[0:0] == 1'b1) ? p_mid121_fu_630_p2 : empty_71_reg_1119);

assign select_ln2795_7_fu_450_p3 = ((icmp_ln2797_fu_380_p2[0:0] == 1'b1) ? tmp_2_fu_442_p3 : tmp_1_fu_363_p3);

assign select_ln2795_8_fu_714_p3 = ((icmp_ln2797_reg_1045[0:0] == 1'b1) ? empty_70_reg_1032 : h_3_reg_1013);

assign select_ln2795_fu_386_p3 = ((icmp_ln2797_fu_380_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_w_load);

assign select_ln2811_1_fu_783_p3 = ((select_ln2795_7_reg_1075_pp0_iter1_reg[0:0] == 1'b1) ? select_ln2811_reg_1291 : reg_287);

assign select_ln2811_2_fu_793_p3 = ((or_ln2811_1_fu_789_p2[0:0] == 1'b1) ? select_ln2811_1_reg_1312 : reg_287);

assign select_ln2811_3_fu_800_p3 = ((tmp_4_reg_1097_pp0_iter3_reg[0:0] == 1'b1) ? select_ln2811_2_reg_1318 : reg_291);

assign select_ln2811_4_fu_806_p3 = ((icmp_ln2811_reg_1217_pp0_iter3_reg[0:0] == 1'b1) ? sum_5_0_1_1_reg_1329 : reg_287);

assign select_ln2811_5_fu_816_p3 = ((or_ln2811_2_fu_812_p2[0:0] == 1'b1) ? select_ln2811_4_reg_1335 : reg_287);

assign select_ln2811_6_fu_919_p3 = ((or_ln2811_3_fu_915_p2[0:0] == 1'b1) ? sum_2_0_2_1_reg_1347 : reg_291);

assign select_ln2811_fu_775_p3 = ((tmp_3_fu_767_p3[0:0] == 1'b1) ? 32'd0 : reg_287);

assign sext_ln2811_fu_467_p1 = add_ln2808_fu_461_p2;

assign sum_2_0_2_1_fu_823_p3 = ((select_ln2795_5_reg_1234_pp0_iter4_reg[0:0] == 1'b1) ? select_ln2811_4_reg_1335_pp0_iter5_reg : reg_287);

assign tmp_1_fu_363_p3 = empty_66_fu_321_p2[32'd5];

assign tmp_2_fu_442_p3 = p_mid111_fu_398_p2[32'd5];

assign tmp_3_fu_767_p3 = or_ln2811_fu_762_p2[32'd5];

assign trunc_ln2808_cast18_fu_489_p1 = select_ln2795_reg_1055;

assign trunc_ln2808_cast20_fu_912_p1 = select_ln2795_reg_1055_pp0_iter6_reg;

assign trunc_ln2808_cast_fu_458_p1 = select_ln2795_reg_1055;

assign y_address0 = zext_ln2827_fu_932_p1;

assign y_d0 = reg_291;

assign zext_ln2795_1_fu_829_p1 = h_3_reg_1013_pp0_iter6_reg;

assign zext_ln2795_2_fu_394_p1 = empty_70_fu_357_p2;

assign zext_ln2795_3_fu_867_p1 = empty_70_reg_1032_pp0_iter6_reg;

assign zext_ln2795_fu_317_p1 = ap_sig_allocacmp_h_3;

assign zext_ln2811_fu_560_p1 = add_ln2808_1_fu_555_p2;

assign zext_ln2819_1_fu_497_p1 = add_ln2816_1_fu_492_p2;

assign zext_ln2819_2_fu_569_p1 = add_ln2816_2_fu_564_p2;

assign zext_ln2819_3_fu_594_p1 = add_ln2816_3_fu_589_p2;

assign zext_ln2819_4_fu_651_p1 = add_ln2816_4_fu_647_p2;

assign zext_ln2819_5_fu_680_p1 = add_ln2816_5_reg_1177;

assign zext_ln2819_6_fu_694_p1 = add_ln2816_6_reg_1182;

assign zext_ln2819_7_fu_724_p1 = add_ln2816_7_reg_1187;

assign zext_ln2819_8_fu_743_p1 = add_ln2816_8_reg_1192;

assign zext_ln2819_fu_476_p1 = add_ln2816_fu_471_p2;

assign zext_ln2827_fu_932_p1 = add_ln2827_reg_1358;

always @ (posedge ap_clk) begin
    select_ln2795_3_reg_1068[1:0] <= 2'b00;
    trunc_ln2808_cast18_reg_1103[9:5] <= 5'b00000;
    empty_69_reg_1114[1:0] <= 2'b00;
    empty_71_reg_1119[1:0] <= 2'b00;
    zext_ln2811_reg_1135[9:5] <= 5'b00000;
    select_ln2795_4_reg_1146[1:0] <= 2'b00;
end

endmodule //cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3
