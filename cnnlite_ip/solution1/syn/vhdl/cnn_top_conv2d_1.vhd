-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_conv2d_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    x_ce0 : OUT STD_LOGIC;
    x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    x_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    x_ce1 : OUT STD_LOGIC;
    x_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_we0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_837_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_837_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_837_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_837_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_837_p_ce : OUT STD_LOGIC;
    grp_fu_841_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_841_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_841_p_ce : OUT STD_LOGIC;
    grp_fu_845_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_845_p_ce : OUT STD_LOGIC;
    grp_fu_849_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_849_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_top_conv2d_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3DFA43FE : STD_LOGIC_VECTOR (31 downto 0) := "00111101111110100100001111111110";
    constant ap_const_lv32_3D3DA512 : STD_LOGIC_VECTOR (31 downto 0) := "00111101001111011010010100010010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_3E570A3D : STD_LOGIC_VECTOR (31 downto 0) := "00111110010101110000101000111101";
    constant ap_const_lv32_3CD5CFAB : STD_LOGIC_VECTOR (31 downto 0) := "00111100110101011100111110101011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce0 : STD_LOGIC;
    signal weight0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce1 : STD_LOGIC;
    signal weight0_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce2 : STD_LOGIC;
    signal weight0_0_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce3 : STD_LOGIC;
    signal weight0_0_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address4 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce4 : STD_LOGIC;
    signal weight0_0_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address5 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce5 : STD_LOGIC;
    signal weight0_0_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address6 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce6 : STD_LOGIC;
    signal weight0_0_q6 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address7 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce7 : STD_LOGIC;
    signal weight0_0_q7 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_address8 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight0_0_ce8 : STD_LOGIC;
    signal weight0_0_q8 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_71_fu_231_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_71_reg_485 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln2793_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl3_fu_235_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_reg_493 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_76_fu_269_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_76_reg_498 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_79_fu_297_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_79_reg_505 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_82_fu_325_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_82_reg_512 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal empty_72_fu_422_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_72_reg_564 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal merge_i_fu_466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_i_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_4_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_8_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_7_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_6_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_5_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_3_reg_599 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_2_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_1_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight0_0_load_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_idle : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_ready : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce0 : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce1 : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_ce0 : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_we0 : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_ce : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_ce : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_ce : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_ce : STD_LOGIC;
    signal grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_cast21_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2817_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_fu_349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2817_1_fu_354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_1_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_2_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_3_fu_383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_4_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2819_5_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal och_fu_66 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln2793_fu_221_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl3_cast2_fu_243_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln2793_fu_227_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_74_fu_247_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_75_fu_257_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_fu_261_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_fu_253_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_77_fu_275_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_fu_285_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_1_fu_289_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast4_fu_281_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_80_fu_303_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_81_fu_313_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl9_0_2_fu_317_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast5_fu_309_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_2_fu_344_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_5_fu_358_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_4_fu_368_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_3_fu_378_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_1_fu_388_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln2817_fu_398_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_fu_408_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_415_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_fu_419_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln9_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_2_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_1_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_73_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln9_1_i_fu_452_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln9_fu_434_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_619_ce : STD_LOGIC;
    signal grp_fu_623_ce : STD_LOGIC;
    signal grp_fu_627_ce : STD_LOGIC;
    signal grp_fu_631_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (7 downto 0);
        x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        x_ce1 : OUT STD_LOGIC;
        x_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight0_0_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        merge_i : IN STD_LOGIC_VECTOR (31 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_we0 : OUT STD_LOGIC;
        y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_619_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_619_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_619_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_619_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_619_p_ce : OUT STD_LOGIC;
        grp_fu_623_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_623_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_623_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_623_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_623_p_ce : OUT STD_LOGIC;
        grp_fu_627_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_627_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_627_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_627_p_ce : OUT STD_LOGIC;
        grp_fu_631_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_631_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_top_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_conv2d_1_weight0_0_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address4 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address5 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address6 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address7 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address8 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    weight0_0_U : component cnn_top_conv2d_1_weight0_0_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight0_0_address0,
        ce0 => weight0_0_ce0,
        q0 => weight0_0_q0,
        address1 => weight0_0_address1,
        ce1 => weight0_0_ce1,
        q1 => weight0_0_q1,
        address2 => weight0_0_address2,
        ce2 => weight0_0_ce2,
        q2 => weight0_0_q2,
        address3 => weight0_0_address3,
        ce3 => weight0_0_ce3,
        q3 => weight0_0_q3,
        address4 => weight0_0_address4,
        ce4 => weight0_0_ce4,
        q4 => weight0_0_q4,
        address5 => weight0_0_address5,
        ce5 => weight0_0_ce5,
        q5 => weight0_0_q5,
        address6 => weight0_0_address6,
        ce6 => weight0_0_ce6,
        q6 => weight0_0_q6,
        address7 => weight0_0_address7,
        ce7 => weight0_0_ce7,
        q7 => weight0_0_q7,
        address8 => weight0_0_address8,
        ce8 => weight0_0_ce8,
        q8 => weight0_0_q8);

    grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179 : component cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start,
        ap_done => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done,
        ap_idle => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_idle,
        ap_ready => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_ready,
        empty => empty_72_reg_564,
        x_address0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address0,
        x_ce0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce0,
        x_q0 => x_q0,
        x_address1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address1,
        x_ce1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce1,
        x_q1 => x_q1,
        weight0_0_load => weight0_0_load_reg_614,
        weight0_0_load_1 => weight0_0_load_1_reg_609,
        weight0_0_load_2 => weight0_0_load_2_reg_604,
        weight0_0_load_3 => weight0_0_load_3_reg_599,
        weight0_0_load_4 => weight0_0_load_4_reg_574,
        weight0_0_load_5 => weight0_0_load_5_reg_594,
        weight0_0_load_6 => weight0_0_load_6_reg_589,
        weight0_0_load_7 => weight0_0_load_7_reg_584,
        weight0_0_load_8 => weight0_0_load_8_reg_579,
        merge_i => merge_i_reg_569,
        y_address0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_address0,
        y_ce0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_ce0,
        y_we0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_we0,
        y_d0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_d0,
        grp_fu_619_p_din0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din0,
        grp_fu_619_p_din1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din1,
        grp_fu_619_p_opcode => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_opcode,
        grp_fu_619_p_dout0 => grp_fu_837_p_dout0,
        grp_fu_619_p_ce => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_ce,
        grp_fu_623_p_din0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din0,
        grp_fu_623_p_din1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din1,
        grp_fu_623_p_opcode => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_opcode,
        grp_fu_623_p_dout0 => grp_fu_841_p_dout0,
        grp_fu_623_p_ce => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_ce,
        grp_fu_627_p_din0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din0,
        grp_fu_627_p_din1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din1,
        grp_fu_627_p_dout0 => grp_fu_845_p_dout0,
        grp_fu_627_p_ce => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_ce,
        grp_fu_631_p_din0 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din0,
        grp_fu_631_p_din1 => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din1,
        grp_fu_631_p_dout0 => grp_fu_849_p_dout0,
        grp_fu_631_p_ce => grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_ready = ap_const_logic_1)) then 
                    grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    och_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                och_fu_66 <= ap_const_lv3_0;
            elsif (((icmp_ln2793_fu_215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                och_fu_66 <= add_ln2793_fu_221_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2793_fu_215_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                empty_71_reg_485 <= empty_71_fu_231_p1;
                empty_76_reg_498 <= empty_76_fu_269_p2;
                empty_79_reg_505 <= empty_79_fu_297_p2;
                empty_82_reg_512 <= empty_82_fu_325_p2;
                    p_shl3_reg_493(3 downto 2) <= p_shl3_fu_235_p3(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    empty_72_reg_564(7 downto 2) <= empty_72_fu_422_p2(7 downto 2);
                    merge_i_reg_569(11 downto 0) <= merge_i_fu_466_p3(11 downto 0);    merge_i_reg_569(19 downto 13) <= merge_i_fu_466_p3(19 downto 13);    merge_i_reg_569(25 downto 21) <= merge_i_fu_466_p3(25 downto 21);
                weight0_0_load_1_reg_609 <= weight0_0_q1;
                weight0_0_load_2_reg_604 <= weight0_0_q2;
                weight0_0_load_3_reg_599 <= weight0_0_q3;
                weight0_0_load_4_reg_574 <= weight0_0_q8;
                weight0_0_load_5_reg_594 <= weight0_0_q4;
                weight0_0_load_6_reg_589 <= weight0_0_q5;
                weight0_0_load_7_reg_584 <= weight0_0_q6;
                weight0_0_load_8_reg_579 <= weight0_0_q7;
                weight0_0_load_reg_614 <= weight0_0_q0;
            end if;
        end if;
    end process;
    p_shl3_reg_493(1 downto 0) <= "00";
    empty_72_reg_564(1 downto 0) <= "00";
    merge_i_reg_569(12) <= '0';
    merge_i_reg_569(20 downto 20) <= "1";
    merge_i_reg_569(31 downto 26) <= "001111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln2793_fu_215_p2, grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln2793_fu_215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln2793_fu_221_p2 <= std_logic_vector(unsigned(och_fu_66) + unsigned(ap_const_lv3_1));
    add_ln2817_1_fu_388_p2 <= std_logic_vector(unsigned(empty_76_reg_498) + unsigned(ap_const_lv6_2));
    add_ln2817_2_fu_344_p2 <= std_logic_vector(unsigned(empty_79_reg_505) + unsigned(ap_const_lv6_1));
    add_ln2817_3_fu_378_p2 <= std_logic_vector(unsigned(empty_79_reg_505) + unsigned(ap_const_lv6_2));
    add_ln2817_4_fu_368_p2 <= std_logic_vector(unsigned(empty_82_reg_512) + unsigned(ap_const_lv6_1));
    add_ln2817_5_fu_358_p2 <= std_logic_vector(unsigned(empty_82_reg_512) + unsigned(ap_const_lv6_2));
    add_ln2817_fu_398_p2 <= std_logic_vector(unsigned(empty_76_reg_498) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done)
    begin
        if ((grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln2793_fu_215_p2)
    begin
        if ((((icmp_ln2793_fu_215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln2793_fu_215_p2)
    begin
        if (((icmp_ln2793_fu_215_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_71_fu_231_p1 <= och_fu_66(2 - 1 downto 0);
    empty_72_fu_422_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_415_p1) - unsigned(p_shl3_cast_fu_419_p1));
    empty_73_fu_460_p2 <= (icmp_ln9_2_fu_447_p2 or icmp_ln9_1_fu_442_p2);
    empty_74_fu_247_p2 <= std_logic_vector(unsigned(p_shl3_cast2_fu_243_p1) - unsigned(zext_ln2793_fu_227_p1));
    empty_75_fu_257_p1 <= empty_74_fu_247_p2(4 - 1 downto 0);
    empty_76_fu_269_p2 <= std_logic_vector(unsigned(p_shl9_fu_261_p3) - unsigned(p_cast_fu_253_p1));
    empty_77_fu_275_p2 <= std_logic_vector(signed(empty_74_fu_247_p2) + signed(ap_const_lv5_1));
    empty_78_fu_285_p1 <= empty_77_fu_275_p2(4 - 1 downto 0);
    empty_79_fu_297_p2 <= std_logic_vector(unsigned(p_shl9_0_1_fu_289_p3) - unsigned(p_cast4_fu_281_p1));
    empty_80_fu_303_p2 <= std_logic_vector(signed(empty_74_fu_247_p2) + signed(ap_const_lv5_2));
    empty_81_fu_313_p1 <= empty_80_fu_303_p2(4 - 1 downto 0);
    empty_82_fu_325_p2 <= std_logic_vector(unsigned(p_shl9_0_2_fu_317_p3) - unsigned(p_cast5_fu_309_p1));
    grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_ap_start_reg;

    grp_fu_619_ce_assign_proc : process(grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_ce, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_619_ce <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_ce;
        else 
            grp_fu_619_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_623_ce_assign_proc : process(grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_ce, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_623_ce <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_ce;
        else 
            grp_fu_623_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_627_ce_assign_proc : process(grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_ce, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_627_ce <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_ce;
        else 
            grp_fu_627_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_631_ce_assign_proc : process(grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_ce, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_631_ce <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_ce;
        else 
            grp_fu_631_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_837_p_ce <= grp_fu_619_ce;
    grp_fu_837_p_din0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din0;
    grp_fu_837_p_din1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_619_p_din1;
    grp_fu_837_p_opcode <= ap_const_lv2_0;
    grp_fu_841_p_ce <= grp_fu_623_ce;
    grp_fu_841_p_din0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din0;
    grp_fu_841_p_din1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_623_p_din1;
    grp_fu_841_p_opcode <= ap_const_lv2_0;
    grp_fu_845_p_ce <= grp_fu_627_ce;
    grp_fu_845_p_din0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din0;
    grp_fu_845_p_din1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_627_p_din1;
    grp_fu_849_p_ce <= grp_fu_631_ce;
    grp_fu_849_p_din0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din0;
    grp_fu_849_p_din1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_grp_fu_631_p_din1;
    icmp_ln2793_fu_215_p2 <= "1" when (och_fu_66 = ap_const_lv3_4) else "0";
    icmp_ln9_1_fu_442_p2 <= "1" when (empty_71_reg_485 = ap_const_lv2_1) else "0";
    icmp_ln9_2_fu_447_p2 <= "1" when (empty_71_reg_485 = ap_const_lv2_2) else "0";
    icmp_ln9_fu_429_p2 <= "1" when (empty_71_reg_485 = ap_const_lv2_0) else "0";
    merge_i_fu_466_p3 <= 
        select_ln9_1_i_fu_452_p3 when (empty_73_fu_460_p2(0) = '1') else 
        select_ln9_fu_434_p3;
    p_cast21_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_76_reg_498),64));
        p_cast4_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_77_fu_275_p2),6));

        p_cast5_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_80_fu_303_p2),6));

        p_cast_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_74_fu_247_p2),6));

    p_shl3_cast2_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_235_p3),5));
    p_shl3_cast_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_reg_493),8));
    p_shl3_fu_235_p3 <= (empty_71_fu_231_p1 & ap_const_lv2_0);
    p_shl9_0_1_fu_289_p3 <= (empty_78_fu_285_p1 & ap_const_lv2_0);
    p_shl9_0_2_fu_317_p3 <= (empty_81_fu_313_p1 & ap_const_lv2_0);
    p_shl9_fu_261_p3 <= (empty_75_fu_257_p1 & ap_const_lv2_0);
    p_shl_cast_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_408_p3),8));
    p_shl_fu_408_p3 <= (empty_71_reg_485 & ap_const_lv5_0);
    select_ln9_1_i_fu_452_p3 <= 
        ap_const_lv32_3E570A3D when (icmp_ln9_2_fu_447_p2(0) = '1') else 
        ap_const_lv32_3CD5CFAB;
    select_ln9_fu_434_p3 <= 
        ap_const_lv32_3DFA43FE when (icmp_ln9_fu_429_p2(0) = '1') else 
        ap_const_lv32_3D3DA512;
    weight0_0_address0 <= p_cast21_fu_336_p1(6 - 1 downto 0);
    weight0_0_address1 <= zext_ln2819_5_fu_403_p1(6 - 1 downto 0);
    weight0_0_address2 <= zext_ln2819_4_fu_393_p1(6 - 1 downto 0);
    weight0_0_address3 <= zext_ln2817_fu_340_p1(6 - 1 downto 0);
    weight0_0_address4 <= zext_ln2819_3_fu_383_p1(6 - 1 downto 0);
    weight0_0_address5 <= zext_ln2817_1_fu_354_p1(6 - 1 downto 0);
    weight0_0_address6 <= zext_ln2819_2_fu_373_p1(6 - 1 downto 0);
    weight0_0_address7 <= zext_ln2819_1_fu_363_p1(6 - 1 downto 0);
    weight0_0_address8 <= zext_ln2819_fu_349_p1(6 - 1 downto 0);

    weight0_0_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce0 <= ap_const_logic_1;
        else 
            weight0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce1 <= ap_const_logic_1;
        else 
            weight0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce2_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce2 <= ap_const_logic_1;
        else 
            weight0_0_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce3_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce3 <= ap_const_logic_1;
        else 
            weight0_0_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce4_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce4 <= ap_const_logic_1;
        else 
            weight0_0_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce5_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce5 <= ap_const_logic_1;
        else 
            weight0_0_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce6_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce6 <= ap_const_logic_1;
        else 
            weight0_0_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce7_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce7 <= ap_const_logic_1;
        else 
            weight0_0_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    weight0_0_ce8_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight0_0_ce8 <= ap_const_logic_1;
        else 
            weight0_0_ce8 <= ap_const_logic_0;
        end if; 
    end process;

    x_address0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address0;
    x_address1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_address1;
    x_ce0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce0;
    x_ce1 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_x_ce1;
    y_address0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_address0;
    y_ce0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_ce0;
    y_d0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_d0;
    y_we0 <= grp_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3_fu_179_y_we0;
    zext_ln2793_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(och_fu_66),5));
    zext_ln2817_1_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_82_reg_512),64));
    zext_ln2817_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_79_reg_505),64));
    zext_ln2819_1_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_5_fu_358_p2),64));
    zext_ln2819_2_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_4_fu_368_p2),64));
    zext_ln2819_3_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_3_fu_378_p2),64));
    zext_ln2819_4_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_1_fu_388_p2),64));
    zext_ln2819_5_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_fu_398_p2),64));
    zext_ln2819_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2817_2_fu_344_p2),64));
end behav;
