// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        x_address0,
        x_ce0,
        x_q0,
        x_address1,
        x_ce1,
        x_q1,
        weight0_0_load,
        weight0_0_load_1,
        weight0_0_load_2,
        weight0_0_load_3,
        weight0_0_load_4,
        weight0_0_load_5,
        weight0_0_load_6,
        weight0_0_load_7,
        weight0_0_load_8,
        merge_i,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        grp_fu_619_p_din0,
        grp_fu_619_p_din1,
        grp_fu_619_p_opcode,
        grp_fu_619_p_dout0,
        grp_fu_619_p_ce,
        grp_fu_623_p_din0,
        grp_fu_623_p_din1,
        grp_fu_623_p_opcode,
        grp_fu_623_p_dout0,
        grp_fu_623_p_ce,
        grp_fu_627_p_din0,
        grp_fu_627_p_din1,
        grp_fu_627_p_dout0,
        grp_fu_627_p_ce,
        grp_fu_631_p_din0,
        grp_fu_631_p_din1,
        grp_fu_631_p_dout0,
        grp_fu_631_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] empty;
output  [9:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [9:0] x_address1;
output   x_ce1;
input  [31:0] x_q1;
input  [31:0] weight0_0_load;
input  [31:0] weight0_0_load_1;
input  [31:0] weight0_0_load_2;
input  [31:0] weight0_0_load_3;
input  [31:0] weight0_0_load_4;
input  [31:0] weight0_0_load_5;
input  [31:0] weight0_0_load_6;
input  [31:0] weight0_0_load_7;
input  [31:0] weight0_0_load_8;
input  [31:0] merge_i;
output  [11:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [31:0] grp_fu_619_p_din0;
output  [31:0] grp_fu_619_p_din1;
output  [1:0] grp_fu_619_p_opcode;
input  [31:0] grp_fu_619_p_dout0;
output   grp_fu_619_p_ce;
output  [31:0] grp_fu_623_p_din0;
output  [31:0] grp_fu_623_p_din1;
output  [1:0] grp_fu_623_p_opcode;
input  [31:0] grp_fu_623_p_dout0;
output   grp_fu_623_p_ce;
output  [31:0] grp_fu_627_p_din0;
output  [31:0] grp_fu_627_p_din1;
input  [31:0] grp_fu_627_p_dout0;
output   grp_fu_627_p_ce;
output  [31:0] grp_fu_631_p_din0;
output  [31:0] grp_fu_631_p_din1;
input  [31:0] grp_fu_631_p_dout0;
output   grp_fu_631_p_ce;

reg ap_idle;
reg[9:0] x_address0;
reg x_ce0;
reg[9:0] x_address1;
reg x_ce1;
reg y_ce0;
reg y_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_state55_pp0_stage4_iter10;
wire    ap_block_state60_pp0_stage4_iter11;
wire    ap_block_state65_pp0_stage4_iter12;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln2795_reg_1048;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_283;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_state53_pp0_stage2_iter10;
wire    ap_block_state58_pp0_stage2_iter11;
wire    ap_block_state63_pp0_stage2_iter12;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_state54_pp0_stage3_iter10;
wire    ap_block_state59_pp0_stage3_iter11;
wire    ap_block_state64_pp0_stage3_iter12;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_state56_pp0_stage0_iter11;
wire    ap_block_state61_pp0_stage0_iter12;
wire    ap_block_state66_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_state52_pp0_stage1_iter10;
wire    ap_block_state57_pp0_stage1_iter11;
wire    ap_block_state62_pp0_stage1_iter12;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter1_reg;
reg   [31:0] reg_288;
reg   [0:0] select_ln2795_7_reg_1082;
reg   [0:0] tmp_4_reg_1126;
reg   [31:0] reg_293;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter2_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter3_reg;
reg   [0:0] select_ln2795_7_reg_1082_pp0_iter3_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter4_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter5_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter5_reg;
reg   [31:0] reg_297;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter7_reg;
reg   [0:0] icmp_ln2811_reg_1199;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter7_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter9_reg;
reg   [0:0] select_ln2795_5_reg_1226;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter9_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter10_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter10_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter11_reg;
reg   [4:0] h_3_reg_1020;
reg   [4:0] h_3_reg_1020_pp0_iter1_reg;
reg   [4:0] h_3_reg_1020_pp0_iter2_reg;
reg   [4:0] h_3_reg_1020_pp0_iter3_reg;
reg   [4:0] h_3_reg_1020_pp0_iter4_reg;
reg   [4:0] h_3_reg_1020_pp0_iter5_reg;
reg   [4:0] h_3_reg_1020_pp0_iter6_reg;
reg   [4:0] h_3_reg_1020_pp0_iter7_reg;
reg   [4:0] h_3_reg_1020_pp0_iter8_reg;
reg   [4:0] h_3_reg_1020_pp0_iter9_reg;
reg   [4:0] h_3_reg_1020_pp0_iter10_reg;
reg   [4:0] h_3_reg_1020_pp0_iter11_reg;
reg   [9:0] indvar_flatten_load_reg_1029;
wire   [5:0] empty_62_fu_327_p2;
reg   [5:0] empty_62_reg_1034;
reg   [5:0] empty_62_reg_1034_pp0_iter1_reg;
reg   [5:0] empty_62_reg_1034_pp0_iter2_reg;
wire   [4:0] empty_66_fu_363_p2;
reg   [4:0] empty_66_reg_1039;
reg   [4:0] empty_66_reg_1039_pp0_iter1_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter2_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter3_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter4_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter5_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter6_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter7_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter8_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter9_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter10_reg;
reg   [4:0] empty_66_reg_1039_pp0_iter11_reg;
wire   [0:0] icmp_ln2795_fu_377_p2;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter6_reg;
reg   [0:0] icmp_ln2795_reg_1048_pp0_iter8_reg;
wire   [0:0] icmp_ln2797_fu_386_p2;
reg   [0:0] icmp_ln2797_reg_1052;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter1_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter2_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter3_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter4_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter5_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter6_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter7_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter8_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter9_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter10_reg;
reg   [0:0] icmp_ln2797_reg_1052_pp0_iter11_reg;
wire   [4:0] select_ln2795_fu_392_p3;
reg   [4:0] select_ln2795_reg_1062;
reg   [4:0] select_ln2795_reg_1062_pp0_iter1_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter2_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter3_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter4_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter5_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter6_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter7_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter8_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter9_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter10_reg;
reg   [4:0] select_ln2795_reg_1062_pp0_iter11_reg;
wire   [5:0] p_mid111_fu_404_p2;
reg   [5:0] p_mid111_reg_1070;
reg   [5:0] p_mid111_reg_1070_pp0_iter1_reg;
reg   [5:0] p_mid111_reg_1070_pp0_iter2_reg;
wire   [9:0] select_ln2795_3_fu_440_p3;
reg   [9:0] select_ln2795_3_reg_1075;
wire   [0:0] select_ln2795_7_fu_456_p3;
reg   [0:0] select_ln2795_7_reg_1082_pp0_iter1_reg;
reg   [0:0] select_ln2795_7_reg_1082_pp0_iter2_reg;
reg   [0:0] select_ln2795_7_reg_1082_pp0_iter4_reg;
wire   [9:0] empty_65_fu_482_p2;
reg   [9:0] empty_65_reg_1088;
wire   [9:0] empty_67_fu_506_p2;
reg   [9:0] empty_67_reg_1093;
wire   [9:0] trunc_ln2808_cast18_fu_512_p1;
reg   [9:0] trunc_ln2808_cast18_reg_1099;
wire  signed [5:0] add_ln2808_fu_518_p2;
reg  signed [5:0] add_ln2808_reg_1105;
reg  signed [5:0] add_ln2808_reg_1105_pp0_iter1_reg;
reg  signed [5:0] add_ln2808_reg_1105_pp0_iter2_reg;
wire  signed [9:0] sext_ln2811_fu_524_p1;
reg  signed [9:0] sext_ln2811_reg_1110;
reg   [0:0] tmp_4_reg_1126_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter4_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter6_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter7_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter8_reg;
reg   [0:0] tmp_4_reg_1126_pp0_iter9_reg;
wire   [9:0] select_ln2795_4_fu_556_p3;
reg   [9:0] select_ln2795_4_reg_1132;
wire   [4:0] add_ln2808_1_fu_561_p2;
reg   [4:0] add_ln2808_1_reg_1138;
wire   [9:0] zext_ln2811_fu_566_p1;
reg   [9:0] zext_ln2811_reg_1143;
wire   [0:0] cmp25_0_2_mid1_fu_600_p2;
reg   [0:0] cmp25_0_2_mid1_reg_1159;
wire   [31:0] bitcast_ln2819_fu_638_p1;
wire   [31:0] bitcast_ln2819_1_fu_643_p1;
wire   [9:0] add_ln2816_6_fu_666_p2;
reg   [9:0] add_ln2816_6_reg_1184;
wire   [9:0] add_ln2816_7_fu_671_p2;
reg   [9:0] add_ln2816_7_reg_1189;
wire   [9:0] add_ln2816_8_fu_676_p2;
reg   [9:0] add_ln2816_8_reg_1194;
wire   [0:0] icmp_ln2811_fu_691_p2;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter1_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter2_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter3_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter4_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter5_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter6_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter8_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter9_reg;
reg   [0:0] icmp_ln2811_reg_1199_pp0_iter10_reg;
wire   [31:0] bitcast_ln2819_2_fu_696_p1;
wire   [31:0] bitcast_ln2819_3_fu_701_p1;
wire   [0:0] select_ln2795_5_fu_729_p3;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter2_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter3_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter4_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter5_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter6_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter7_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter8_reg;
reg   [0:0] select_ln2795_5_reg_1226_pp0_iter11_reg;
wire   [31:0] bitcast_ln2819_4_fu_735_p1;
wire   [31:0] bitcast_ln2819_5_fu_740_p1;
reg   [31:0] mul_reg_1248;
reg   [31:0] mul_0_0_1_reg_1253;
reg   [31:0] mul_0_0_1_reg_1253_pp0_iter2_reg;
wire   [31:0] bitcast_ln2819_6_fu_749_p1;
wire   [31:0] bitcast_ln2819_7_fu_754_p1;
reg   [31:0] mul_0_0_2_reg_1268;
reg   [31:0] mul_0_0_2_reg_1268_pp0_iter2_reg;
reg   [31:0] mul_0_0_2_reg_1268_pp0_iter3_reg;
reg   [31:0] mul_0_1_reg_1273;
reg   [31:0] mul_0_1_reg_1273_pp0_iter2_reg;
reg   [31:0] mul_0_1_reg_1273_pp0_iter3_reg;
reg   [31:0] mul_0_1_reg_1273_pp0_iter4_reg;
wire   [31:0] bitcast_ln2819_8_fu_759_p1;
reg   [31:0] mul_0_1_1_reg_1283;
reg   [31:0] mul_0_1_1_reg_1283_pp0_iter2_reg;
reg   [31:0] mul_0_1_1_reg_1283_pp0_iter3_reg;
reg   [31:0] mul_0_1_1_reg_1283_pp0_iter4_reg;
reg   [31:0] mul_0_1_1_reg_1283_pp0_iter5_reg;
reg   [31:0] mul_0_1_2_reg_1288;
reg   [31:0] mul_0_1_2_reg_1288_pp0_iter2_reg;
reg   [31:0] mul_0_1_2_reg_1288_pp0_iter3_reg;
reg   [31:0] mul_0_1_2_reg_1288_pp0_iter4_reg;
reg   [31:0] mul_0_1_2_reg_1288_pp0_iter5_reg;
reg   [31:0] mul_0_1_2_reg_1288_pp0_iter6_reg;
reg   [31:0] mul_0_2_reg_1293;
reg   [31:0] mul_0_2_reg_1293_pp0_iter2_reg;
reg   [31:0] mul_0_2_reg_1293_pp0_iter3_reg;
reg   [31:0] mul_0_2_reg_1293_pp0_iter4_reg;
reg   [31:0] mul_0_2_reg_1293_pp0_iter5_reg;
reg   [31:0] mul_0_2_reg_1293_pp0_iter6_reg;
reg   [31:0] mul_0_2_reg_1293_pp0_iter7_reg;
reg   [31:0] mul_0_2_1_reg_1298;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter2_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter3_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter4_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter5_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter6_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter7_reg;
reg   [31:0] mul_0_2_1_reg_1298_pp0_iter8_reg;
reg   [31:0] mul_0_2_2_reg_1303;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter3_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter4_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter5_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter6_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter7_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter8_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter9_reg;
reg   [31:0] mul_0_2_2_reg_1303_pp0_iter10_reg;
wire   [31:0] select_ln2811_fu_782_p3;
reg   [31:0] select_ln2811_reg_1308;
reg   [31:0] select_ln2811_reg_1308_pp0_iter3_reg;
wire   [31:0] select_ln2811_1_fu_790_p3;
reg   [31:0] select_ln2811_1_reg_1314;
reg   [31:0] select_ln2811_1_reg_1314_pp0_iter4_reg;
wire   [31:0] select_ln2811_2_fu_800_p3;
reg   [31:0] select_ln2811_2_reg_1320;
reg   [31:0] select_ln2811_2_reg_1320_pp0_iter5_reg;
wire   [31:0] select_ln2811_3_fu_807_p3;
reg   [31:0] select_ln2811_3_reg_1326;
reg   [31:0] sum_5_0_1_1_reg_1331;
reg   [31:0] sum_5_0_1_1_reg_1331_pp0_iter8_reg;
wire   [31:0] select_ln2811_4_fu_813_p3;
reg   [31:0] select_ln2811_4_reg_1337;
reg   [31:0] select_ln2811_4_reg_1337_pp0_iter9_reg;
reg   [31:0] select_ln2811_4_reg_1337_pp0_iter10_reg;
wire   [31:0] select_ln2811_5_fu_823_p3;
reg   [31:0] select_ln2811_5_reg_1344;
wire   [31:0] sum_2_0_2_1_fu_830_p3;
reg   [31:0] sum_2_0_2_1_reg_1349;
reg   [31:0] sum_2_0_2_1_reg_1349_pp0_iter11_reg;
wire   [31:0] select_ln2811_6_fu_926_p3;
reg   [31:0] select_ln2811_6_reg_1355;
wire   [11:0] add_ln2827_fu_933_p2;
reg   [11:0] add_ln2827_reg_1360;
reg   [11:0] add_ln2827_reg_1360_pp0_iter12_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter11_stage4;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln2819_fu_533_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln2819_1_fu_543_p1;
wire   [63:0] zext_ln2819_2_fu_575_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln2819_3_fu_585_p1;
wire   [63:0] zext_ln2819_4_fu_652_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln2819_5_fu_661_p1;
wire   [63:0] zext_ln2819_6_fu_706_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln2819_7_fu_710_p1;
wire   [63:0] zext_ln2819_8_fu_745_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln2827_fu_939_p1;
reg   [4:0] w_fu_94;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_w_load;
reg   [4:0] h_fu_98;
wire   [4:0] select_ln2795_8_fu_686_p3;
reg   [4:0] ap_sig_allocacmp_h_3;
reg   [9:0] indvar_flatten_fu_102;
wire   [9:0] add_ln2795_fu_681_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] grp_fu_266_p0;
reg   [31:0] grp_fu_266_p1;
reg   [31:0] grp_fu_271_p0;
reg   [31:0] grp_fu_271_p1;
reg   [31:0] grp_fu_275_p0;
reg   [31:0] grp_fu_275_p1;
reg   [31:0] grp_fu_279_p0;
reg   [31:0] grp_fu_279_p1;
wire   [5:0] zext_ln2795_fu_323_p1;
wire   [4:0] empty_63_fu_333_p1;
wire   [7:0] p_shl11_fu_345_p3;
wire   [9:0] p_shl10_fu_337_p3;
wire  signed [9:0] p_shl11_0_0_cast_fu_353_p1;
wire   [5:0] zext_ln2795_2_fu_400_p1;
wire   [4:0] empty_70_fu_410_p1;
wire   [7:0] p_shl11_0_0_mid1_fu_422_p3;
wire   [9:0] p_shl10_0_0_mid1_fu_414_p3;
wire  signed [9:0] p_shl11_0_0_cast_mid1_fu_430_p1;
wire   [9:0] p_mid115_fu_434_p2;
wire   [9:0] empty_64_fu_357_p2;
wire   [0:0] tmp_2_fu_448_p3;
wire   [0:0] tmp_1_fu_369_p3;
wire   [6:0] p_shl11_0_1_fu_471_p3;
wire   [9:0] p_shl10_0_1_fu_464_p3;
wire   [9:0] p_shl11_0_1_cast_fu_478_p1;
wire   [6:0] p_shl11_0_2_fu_495_p3;
wire   [9:0] p_shl10_0_2_fu_488_p3;
wire   [9:0] p_shl11_0_2_cast_fu_502_p1;
wire   [5:0] trunc_ln2808_cast_fu_515_p1;
wire   [9:0] add_ln2816_fu_528_p2;
wire   [9:0] add_ln2816_1_fu_538_p2;
wire   [9:0] add_ln2816_2_fu_570_p2;
wire   [9:0] add_ln2816_3_fu_580_p2;
wire   [4:0] p_mid119_fu_595_p2;
wire   [6:0] p_shl11_0_2_mid1_fu_614_p3;
wire   [9:0] p_shl10_0_2_mid1_fu_606_p3;
wire   [9:0] p_shl11_0_2_cast_mid1_fu_622_p1;
wire   [9:0] p_mid121_fu_626_p2;
wire   [9:0] add_ln2816_4_fu_648_p2;
wire   [9:0] add_ln2816_5_fu_657_p2;
wire   [9:0] select_ln2795_6_fu_632_p3;
wire   [0:0] cmp25_0_2_fu_724_p2;
wire   [5:0] select_ln2795_2_fu_764_p3;
wire   [5:0] or_ln2811_fu_769_p2;
wire   [0:0] tmp_3_fu_774_p3;
wire   [0:0] or_ln2811_1_fu_796_p2;
wire   [0:0] or_ln2811_2_fu_819_p2;
wire   [7:0] zext_ln2795_1_fu_836_p1;
wire   [7:0] empty_59_fu_839_p2;
wire   [6:0] empty_60_fu_844_p1;
wire   [9:0] p_shl5_fu_856_p3;
wire   [11:0] p_shl4_fu_848_p3;
wire  signed [11:0] p_shl5_cast_fu_864_p1;
wire   [7:0] zext_ln2795_3_fu_874_p1;
wire   [7:0] p_mid1_fu_877_p2;
wire   [6:0] empty_69_fu_882_p1;
wire   [9:0] p_shl5_mid1_fu_894_p3;
wire   [11:0] p_shl4_mid1_fu_886_p3;
wire  signed [11:0] p_shl5_cast_mid1_fu_902_p1;
wire   [11:0] p_mid19_fu_906_p2;
wire   [11:0] empty_61_fu_868_p2;
wire   [0:0] or_ln2811_3_fu_922_p2;
wire   [11:0] trunc_ln2808_cast20_fu_919_p1;
wire   [11:0] select_ln2795_1_fu_912_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter12_stage0;
reg    ap_idle_pp0_0to11;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to13;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter11_stage4)) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_fu_98 <= 5'd0;
    end else if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        h_fu_98 <= select_ln2795_8_fu_686_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_102 <= 10'd0;
    end else if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        indvar_flatten_fu_102 <= add_ln2795_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_283 <= x_q0;
    end else if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_283 <= x_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_4_reg_1126 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_288 <= x_q1;
    end else if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln2795_7_reg_1082 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_288 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_fu_94 <= 5'd0;
    end else if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        w_fu_94 <= add_ln2808_1_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln2808_1_reg_1138 <= add_ln2808_1_fu_561_p2;
        select_ln2795_4_reg_1132[9 : 2] <= select_ln2795_4_fu_556_p3[9 : 2];
        zext_ln2811_reg_1143[4 : 0] <= zext_ln2811_fu_566_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln2808_reg_1105 <= add_ln2808_fu_518_p2;
        sext_ln2811_reg_1110 <= sext_ln2811_fu_524_p1;
        tmp_4_reg_1126 <= add_ln2808_fu_518_p2[32'd5];
        trunc_ln2808_cast18_reg_1099[4 : 0] <= trunc_ln2808_cast18_fu_512_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln2808_reg_1105_pp0_iter1_reg <= add_ln2808_reg_1105;
        add_ln2808_reg_1105_pp0_iter2_reg <= add_ln2808_reg_1105_pp0_iter1_reg;
        empty_67_reg_1093[9 : 2] <= empty_67_fu_506_p2[9 : 2];
        mul_0_0_1_reg_1253_pp0_iter2_reg <= mul_0_0_1_reg_1253;
        select_ln2811_4_reg_1337_pp0_iter10_reg <= select_ln2811_4_reg_1337_pp0_iter9_reg;
        select_ln2811_4_reg_1337_pp0_iter9_reg <= select_ln2811_4_reg_1337;
        tmp_4_reg_1126_pp0_iter1_reg <= tmp_4_reg_1126;
        tmp_4_reg_1126_pp0_iter2_reg <= tmp_4_reg_1126_pp0_iter1_reg;
        tmp_4_reg_1126_pp0_iter3_reg <= tmp_4_reg_1126_pp0_iter2_reg;
        tmp_4_reg_1126_pp0_iter4_reg <= tmp_4_reg_1126_pp0_iter3_reg;
        tmp_4_reg_1126_pp0_iter5_reg <= tmp_4_reg_1126_pp0_iter4_reg;
        tmp_4_reg_1126_pp0_iter6_reg <= tmp_4_reg_1126_pp0_iter5_reg;
        tmp_4_reg_1126_pp0_iter7_reg <= tmp_4_reg_1126_pp0_iter6_reg;
        tmp_4_reg_1126_pp0_iter8_reg <= tmp_4_reg_1126_pp0_iter7_reg;
        tmp_4_reg_1126_pp0_iter9_reg <= tmp_4_reg_1126_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln2816_6_reg_1184 <= add_ln2816_6_fu_666_p2;
        add_ln2816_7_reg_1189 <= add_ln2816_7_fu_671_p2;
        add_ln2816_8_reg_1194 <= add_ln2816_8_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln2795_reg_1048_pp0_iter11_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln2827_reg_1360 <= add_ln2827_fu_933_p2;
        select_ln2811_6_reg_1355 <= select_ln2811_6_fu_926_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln2827_reg_1360_pp0_iter12_reg <= add_ln2827_reg_1360;
        icmp_ln2811_reg_1199_pp0_iter10_reg <= icmp_ln2811_reg_1199_pp0_iter9_reg;
        icmp_ln2811_reg_1199_pp0_iter1_reg <= icmp_ln2811_reg_1199;
        icmp_ln2811_reg_1199_pp0_iter2_reg <= icmp_ln2811_reg_1199_pp0_iter1_reg;
        icmp_ln2811_reg_1199_pp0_iter3_reg <= icmp_ln2811_reg_1199_pp0_iter2_reg;
        icmp_ln2811_reg_1199_pp0_iter4_reg <= icmp_ln2811_reg_1199_pp0_iter3_reg;
        icmp_ln2811_reg_1199_pp0_iter5_reg <= icmp_ln2811_reg_1199_pp0_iter4_reg;
        icmp_ln2811_reg_1199_pp0_iter6_reg <= icmp_ln2811_reg_1199_pp0_iter5_reg;
        icmp_ln2811_reg_1199_pp0_iter7_reg <= icmp_ln2811_reg_1199_pp0_iter6_reg;
        icmp_ln2811_reg_1199_pp0_iter8_reg <= icmp_ln2811_reg_1199_pp0_iter7_reg;
        icmp_ln2811_reg_1199_pp0_iter9_reg <= icmp_ln2811_reg_1199_pp0_iter8_reg;
        mul_0_2_1_reg_1298_pp0_iter2_reg <= mul_0_2_1_reg_1298;
        mul_0_2_1_reg_1298_pp0_iter3_reg <= mul_0_2_1_reg_1298_pp0_iter2_reg;
        mul_0_2_1_reg_1298_pp0_iter4_reg <= mul_0_2_1_reg_1298_pp0_iter3_reg;
        mul_0_2_1_reg_1298_pp0_iter5_reg <= mul_0_2_1_reg_1298_pp0_iter4_reg;
        mul_0_2_1_reg_1298_pp0_iter6_reg <= mul_0_2_1_reg_1298_pp0_iter5_reg;
        mul_0_2_1_reg_1298_pp0_iter7_reg <= mul_0_2_1_reg_1298_pp0_iter6_reg;
        mul_0_2_1_reg_1298_pp0_iter8_reg <= mul_0_2_1_reg_1298_pp0_iter7_reg;
        mul_0_2_reg_1293_pp0_iter2_reg <= mul_0_2_reg_1293;
        mul_0_2_reg_1293_pp0_iter3_reg <= mul_0_2_reg_1293_pp0_iter2_reg;
        mul_0_2_reg_1293_pp0_iter4_reg <= mul_0_2_reg_1293_pp0_iter3_reg;
        mul_0_2_reg_1293_pp0_iter5_reg <= mul_0_2_reg_1293_pp0_iter4_reg;
        mul_0_2_reg_1293_pp0_iter6_reg <= mul_0_2_reg_1293_pp0_iter5_reg;
        mul_0_2_reg_1293_pp0_iter7_reg <= mul_0_2_reg_1293_pp0_iter6_reg;
        select_ln2811_2_reg_1320_pp0_iter5_reg <= select_ln2811_2_reg_1320;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2797_reg_1052 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        cmp25_0_2_mid1_reg_1159 <= cmp25_0_2_mid1_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_62_reg_1034 <= empty_62_fu_327_p2;
        empty_62_reg_1034_pp0_iter1_reg <= empty_62_reg_1034;
        empty_62_reg_1034_pp0_iter2_reg <= empty_62_reg_1034_pp0_iter1_reg;
        empty_66_reg_1039 <= empty_66_fu_363_p2;
        empty_66_reg_1039_pp0_iter10_reg <= empty_66_reg_1039_pp0_iter9_reg;
        empty_66_reg_1039_pp0_iter11_reg <= empty_66_reg_1039_pp0_iter10_reg;
        empty_66_reg_1039_pp0_iter1_reg <= empty_66_reg_1039;
        empty_66_reg_1039_pp0_iter2_reg <= empty_66_reg_1039_pp0_iter1_reg;
        empty_66_reg_1039_pp0_iter3_reg <= empty_66_reg_1039_pp0_iter2_reg;
        empty_66_reg_1039_pp0_iter4_reg <= empty_66_reg_1039_pp0_iter3_reg;
        empty_66_reg_1039_pp0_iter5_reg <= empty_66_reg_1039_pp0_iter4_reg;
        empty_66_reg_1039_pp0_iter6_reg <= empty_66_reg_1039_pp0_iter5_reg;
        empty_66_reg_1039_pp0_iter7_reg <= empty_66_reg_1039_pp0_iter6_reg;
        empty_66_reg_1039_pp0_iter8_reg <= empty_66_reg_1039_pp0_iter7_reg;
        empty_66_reg_1039_pp0_iter9_reg <= empty_66_reg_1039_pp0_iter8_reg;
        h_3_reg_1020 <= ap_sig_allocacmp_h_3;
        h_3_reg_1020_pp0_iter10_reg <= h_3_reg_1020_pp0_iter9_reg;
        h_3_reg_1020_pp0_iter11_reg <= h_3_reg_1020_pp0_iter10_reg;
        h_3_reg_1020_pp0_iter1_reg <= h_3_reg_1020;
        h_3_reg_1020_pp0_iter2_reg <= h_3_reg_1020_pp0_iter1_reg;
        h_3_reg_1020_pp0_iter3_reg <= h_3_reg_1020_pp0_iter2_reg;
        h_3_reg_1020_pp0_iter4_reg <= h_3_reg_1020_pp0_iter3_reg;
        h_3_reg_1020_pp0_iter5_reg <= h_3_reg_1020_pp0_iter4_reg;
        h_3_reg_1020_pp0_iter6_reg <= h_3_reg_1020_pp0_iter5_reg;
        h_3_reg_1020_pp0_iter7_reg <= h_3_reg_1020_pp0_iter6_reg;
        h_3_reg_1020_pp0_iter8_reg <= h_3_reg_1020_pp0_iter7_reg;
        h_3_reg_1020_pp0_iter9_reg <= h_3_reg_1020_pp0_iter8_reg;
        icmp_ln2795_reg_1048 <= icmp_ln2795_fu_377_p2;
        icmp_ln2795_reg_1048_pp0_iter10_reg <= icmp_ln2795_reg_1048_pp0_iter9_reg;
        icmp_ln2795_reg_1048_pp0_iter11_reg <= icmp_ln2795_reg_1048_pp0_iter10_reg;
        icmp_ln2795_reg_1048_pp0_iter1_reg <= icmp_ln2795_reg_1048;
        icmp_ln2795_reg_1048_pp0_iter2_reg <= icmp_ln2795_reg_1048_pp0_iter1_reg;
        icmp_ln2795_reg_1048_pp0_iter3_reg <= icmp_ln2795_reg_1048_pp0_iter2_reg;
        icmp_ln2795_reg_1048_pp0_iter4_reg <= icmp_ln2795_reg_1048_pp0_iter3_reg;
        icmp_ln2795_reg_1048_pp0_iter5_reg <= icmp_ln2795_reg_1048_pp0_iter4_reg;
        icmp_ln2795_reg_1048_pp0_iter6_reg <= icmp_ln2795_reg_1048_pp0_iter5_reg;
        icmp_ln2795_reg_1048_pp0_iter7_reg <= icmp_ln2795_reg_1048_pp0_iter6_reg;
        icmp_ln2795_reg_1048_pp0_iter8_reg <= icmp_ln2795_reg_1048_pp0_iter7_reg;
        icmp_ln2795_reg_1048_pp0_iter9_reg <= icmp_ln2795_reg_1048_pp0_iter8_reg;
        icmp_ln2797_reg_1052_pp0_iter10_reg <= icmp_ln2797_reg_1052_pp0_iter9_reg;
        icmp_ln2797_reg_1052_pp0_iter11_reg <= icmp_ln2797_reg_1052_pp0_iter10_reg;
        icmp_ln2797_reg_1052_pp0_iter1_reg <= icmp_ln2797_reg_1052;
        icmp_ln2797_reg_1052_pp0_iter2_reg <= icmp_ln2797_reg_1052_pp0_iter1_reg;
        icmp_ln2797_reg_1052_pp0_iter3_reg <= icmp_ln2797_reg_1052_pp0_iter2_reg;
        icmp_ln2797_reg_1052_pp0_iter4_reg <= icmp_ln2797_reg_1052_pp0_iter3_reg;
        icmp_ln2797_reg_1052_pp0_iter5_reg <= icmp_ln2797_reg_1052_pp0_iter4_reg;
        icmp_ln2797_reg_1052_pp0_iter6_reg <= icmp_ln2797_reg_1052_pp0_iter5_reg;
        icmp_ln2797_reg_1052_pp0_iter7_reg <= icmp_ln2797_reg_1052_pp0_iter6_reg;
        icmp_ln2797_reg_1052_pp0_iter8_reg <= icmp_ln2797_reg_1052_pp0_iter7_reg;
        icmp_ln2797_reg_1052_pp0_iter9_reg <= icmp_ln2797_reg_1052_pp0_iter8_reg;
        indvar_flatten_load_reg_1029 <= ap_sig_allocacmp_indvar_flatten_load;
        mul_0_2_2_reg_1303_pp0_iter10_reg <= mul_0_2_2_reg_1303_pp0_iter9_reg;
        mul_0_2_2_reg_1303_pp0_iter3_reg <= mul_0_2_2_reg_1303;
        mul_0_2_2_reg_1303_pp0_iter4_reg <= mul_0_2_2_reg_1303_pp0_iter3_reg;
        mul_0_2_2_reg_1303_pp0_iter5_reg <= mul_0_2_2_reg_1303_pp0_iter4_reg;
        mul_0_2_2_reg_1303_pp0_iter6_reg <= mul_0_2_2_reg_1303_pp0_iter5_reg;
        mul_0_2_2_reg_1303_pp0_iter7_reg <= mul_0_2_2_reg_1303_pp0_iter6_reg;
        mul_0_2_2_reg_1303_pp0_iter8_reg <= mul_0_2_2_reg_1303_pp0_iter7_reg;
        mul_0_2_2_reg_1303_pp0_iter9_reg <= mul_0_2_2_reg_1303_pp0_iter8_reg;
        p_mid111_reg_1070_pp0_iter1_reg <= p_mid111_reg_1070;
        p_mid111_reg_1070_pp0_iter2_reg <= p_mid111_reg_1070_pp0_iter1_reg;
        select_ln2795_5_reg_1226_pp0_iter10_reg <= select_ln2795_5_reg_1226_pp0_iter9_reg;
        select_ln2795_5_reg_1226_pp0_iter11_reg <= select_ln2795_5_reg_1226_pp0_iter10_reg;
        select_ln2795_5_reg_1226_pp0_iter2_reg <= select_ln2795_5_reg_1226;
        select_ln2795_5_reg_1226_pp0_iter3_reg <= select_ln2795_5_reg_1226_pp0_iter2_reg;
        select_ln2795_5_reg_1226_pp0_iter4_reg <= select_ln2795_5_reg_1226_pp0_iter3_reg;
        select_ln2795_5_reg_1226_pp0_iter5_reg <= select_ln2795_5_reg_1226_pp0_iter4_reg;
        select_ln2795_5_reg_1226_pp0_iter6_reg <= select_ln2795_5_reg_1226_pp0_iter5_reg;
        select_ln2795_5_reg_1226_pp0_iter7_reg <= select_ln2795_5_reg_1226_pp0_iter6_reg;
        select_ln2795_5_reg_1226_pp0_iter8_reg <= select_ln2795_5_reg_1226_pp0_iter7_reg;
        select_ln2795_5_reg_1226_pp0_iter9_reg <= select_ln2795_5_reg_1226_pp0_iter8_reg;
        select_ln2795_7_reg_1082_pp0_iter1_reg <= select_ln2795_7_reg_1082;
        select_ln2795_7_reg_1082_pp0_iter2_reg <= select_ln2795_7_reg_1082_pp0_iter1_reg;
        select_ln2795_7_reg_1082_pp0_iter3_reg <= select_ln2795_7_reg_1082_pp0_iter2_reg;
        select_ln2795_7_reg_1082_pp0_iter4_reg <= select_ln2795_7_reg_1082_pp0_iter3_reg;
        select_ln2795_reg_1062_pp0_iter10_reg <= select_ln2795_reg_1062_pp0_iter9_reg;
        select_ln2795_reg_1062_pp0_iter11_reg <= select_ln2795_reg_1062_pp0_iter10_reg;
        select_ln2795_reg_1062_pp0_iter1_reg <= select_ln2795_reg_1062;
        select_ln2795_reg_1062_pp0_iter2_reg <= select_ln2795_reg_1062_pp0_iter1_reg;
        select_ln2795_reg_1062_pp0_iter3_reg <= select_ln2795_reg_1062_pp0_iter2_reg;
        select_ln2795_reg_1062_pp0_iter4_reg <= select_ln2795_reg_1062_pp0_iter3_reg;
        select_ln2795_reg_1062_pp0_iter5_reg <= select_ln2795_reg_1062_pp0_iter4_reg;
        select_ln2795_reg_1062_pp0_iter6_reg <= select_ln2795_reg_1062_pp0_iter5_reg;
        select_ln2795_reg_1062_pp0_iter7_reg <= select_ln2795_reg_1062_pp0_iter6_reg;
        select_ln2795_reg_1062_pp0_iter8_reg <= select_ln2795_reg_1062_pp0_iter7_reg;
        select_ln2795_reg_1062_pp0_iter9_reg <= select_ln2795_reg_1062_pp0_iter8_reg;
        sum_5_0_1_1_reg_1331_pp0_iter8_reg <= sum_5_0_1_1_reg_1331;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln2797_reg_1052 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_65_reg_1088[9 : 2] <= empty_65_fu_482_p2[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln2795_fu_377_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln2797_reg_1052 <= icmp_ln2797_fu_386_p2;
        p_mid111_reg_1070 <= p_mid111_fu_404_p2;
        select_ln2795_3_reg_1075[9 : 2] <= select_ln2795_3_fu_440_p3[9 : 2];
        select_ln2795_7_reg_1082 <= select_ln2795_7_fu_456_p3;
        select_ln2795_reg_1062 <= select_ln2795_fu_392_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        icmp_ln2811_reg_1199 <= icmp_ln2811_fu_691_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln2795_7_reg_1082_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_0_0_1_reg_1253 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_0_2_reg_1268 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_0_2_reg_1268_pp0_iter2_reg <= mul_0_0_2_reg_1268;
        mul_0_0_2_reg_1268_pp0_iter3_reg <= mul_0_0_2_reg_1268_pp0_iter2_reg;
        mul_0_1_reg_1273_pp0_iter2_reg <= mul_0_1_reg_1273;
        mul_0_1_reg_1273_pp0_iter3_reg <= mul_0_1_reg_1273_pp0_iter2_reg;
        mul_0_1_reg_1273_pp0_iter4_reg <= mul_0_1_reg_1273_pp0_iter3_reg;
        select_ln2811_reg_1308_pp0_iter3_reg <= select_ln2811_reg_1308;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_1_1_reg_1283 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_1_1_reg_1283_pp0_iter2_reg <= mul_0_1_1_reg_1283;
        mul_0_1_1_reg_1283_pp0_iter3_reg <= mul_0_1_1_reg_1283_pp0_iter2_reg;
        mul_0_1_1_reg_1283_pp0_iter4_reg <= mul_0_1_1_reg_1283_pp0_iter3_reg;
        mul_0_1_1_reg_1283_pp0_iter5_reg <= mul_0_1_1_reg_1283_pp0_iter4_reg;
        mul_0_1_2_reg_1288_pp0_iter2_reg <= mul_0_1_2_reg_1288;
        mul_0_1_2_reg_1288_pp0_iter3_reg <= mul_0_1_2_reg_1288_pp0_iter2_reg;
        mul_0_1_2_reg_1288_pp0_iter4_reg <= mul_0_1_2_reg_1288_pp0_iter3_reg;
        mul_0_1_2_reg_1288_pp0_iter5_reg <= mul_0_1_2_reg_1288_pp0_iter4_reg;
        mul_0_1_2_reg_1288_pp0_iter6_reg <= mul_0_1_2_reg_1288_pp0_iter5_reg;
        select_ln2811_1_reg_1314_pp0_iter4_reg <= select_ln2811_1_reg_1314;
        sum_2_0_2_1_reg_1349_pp0_iter11_reg <= sum_2_0_2_1_reg_1349;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2811_reg_1199 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_0_1_2_reg_1288 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_4_reg_1126_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_1_reg_1273 <= grp_fu_631_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (select_ln2795_5_reg_1226 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_0_2_1_reg_1298 <= grp_fu_631_p_dout0;
        mul_0_2_reg_1293 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_0_2_2_reg_1303 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_reg_1248 <= grp_fu_627_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (tmp_4_reg_1126_pp0_iter5_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (select_ln2795_7_reg_1082_pp0_iter3_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_293 <= grp_fu_619_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (select_ln2795_5_reg_1226_pp0_iter9_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln2811_reg_1199_pp0_iter7_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter11_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (select_ln2795_5_reg_1226_pp0_iter10_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_297 <= grp_fu_623_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2795_reg_1048 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln2795_5_reg_1226 <= select_ln2795_5_fu_729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2795_reg_1048_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln2811_1_reg_1314 <= select_ln2811_1_fu_790_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln2795_reg_1048_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln2811_2_reg_1320 <= select_ln2811_2_fu_800_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln2795_reg_1048_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln2811_3_reg_1326 <= select_ln2811_3_fu_807_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln2795_reg_1048_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln2811_4_reg_1337 <= select_ln2811_4_fu_813_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (select_ln2795_5_reg_1226_pp0_iter9_reg == 1'd0) & (icmp_ln2795_reg_1048_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln2811_5_reg_1344 <= select_ln2811_5_fu_823_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln2795_reg_1048_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln2811_reg_1308 <= select_ln2811_fu_782_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln2795_reg_1048_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_2_0_2_1_reg_1349 <= sum_2_0_2_1_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_5_0_1_1_reg_1331 <= grp_fu_619_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln2795_reg_1048 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter11_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln2795_reg_1048_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter12_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter12_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to13 = 1'b1;
    end else begin
        ap_idle_pp0_1to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_h_3 = 5'd0;
    end else begin
        ap_sig_allocacmp_h_3 = h_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_w_load = 5'd0;
    end else begin
        ap_sig_allocacmp_w_load = w_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_266_p0 = select_ln2811_3_reg_1326;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_266_p0 = select_ln2811_2_reg_1320;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_266_p0 = select_ln2811_1_reg_1314;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_266_p0 = select_ln2811_reg_1308;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_266_p0 = mul_reg_1248;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_266_p1 = mul_0_1_1_reg_1283_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_266_p1 = mul_0_1_reg_1273_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_266_p1 = mul_0_0_2_reg_1268_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_266_p1 = mul_0_0_1_reg_1253_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_266_p1 = 32'd0;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_271_p0 = select_ln2811_6_reg_1355;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_271_p0 = sum_2_0_2_1_reg_1349;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_271_p0 = select_ln2811_5_reg_1344;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_271_p0 = select_ln2811_4_reg_1337;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_271_p0 = sum_5_0_1_1_reg_1331;
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_271_p1 = merge_i;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_271_p1 = mul_0_2_2_reg_1303_pp0_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_271_p1 = mul_0_2_1_reg_1298_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_271_p1 = mul_0_2_reg_1293_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_271_p1 = mul_0_1_2_reg_1288_pp0_iter6_reg;
    end else begin
        grp_fu_271_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_275_p0 = bitcast_ln2819_8_fu_759_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_275_p0 = bitcast_ln2819_6_fu_749_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_p0 = bitcast_ln2819_4_fu_735_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_275_p0 = bitcast_ln2819_2_fu_696_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_275_p0 = bitcast_ln2819_fu_638_p1;
    end else begin
        grp_fu_275_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_275_p1 = weight0_0_load_8;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_275_p1 = weight0_0_load_6;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_p1 = weight0_0_load_4;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_275_p1 = weight0_0_load_2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_275_p1 = weight0_0_load;
    end else begin
        grp_fu_275_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_279_p0 = bitcast_ln2819_7_fu_754_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p0 = bitcast_ln2819_5_fu_740_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_279_p0 = bitcast_ln2819_3_fu_701_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_279_p0 = bitcast_ln2819_1_fu_643_p1;
    end else begin
        grp_fu_279_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_279_p1 = weight0_0_load_7;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_p1 = weight0_0_load_5;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_279_p1 = weight0_0_load_3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_279_p1 = weight0_0_load_1;
    end else begin
        grp_fu_279_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_address0 = zext_ln2819_8_fu_745_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_address0 = zext_ln2819_6_fu_706_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        x_address0 = zext_ln2819_4_fu_652_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        x_address0 = zext_ln2819_2_fu_575_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_address0 = zext_ln2819_1_fu_543_p1;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            x_address1 = zext_ln2819_7_fu_710_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            x_address1 = zext_ln2819_5_fu_661_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            x_address1 = zext_ln2819_3_fu_585_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            x_address1 = zext_ln2819_fu_533_p1;
        end else begin
            x_address1 = 'bx;
        end
    end else begin
        x_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        x_ce1 = 1'b1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter12_stage0) & (ap_idle_pp0_0to11 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to13 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln2795_fu_681_p2 = (indvar_flatten_load_reg_1029 + 10'd1);

assign add_ln2808_1_fu_561_p2 = (select_ln2795_reg_1062 + 5'd1);

assign add_ln2808_fu_518_p2 = ($signed(trunc_ln2808_cast_fu_515_p1) + $signed(6'd63));

assign add_ln2816_1_fu_538_p2 = (trunc_ln2808_cast18_fu_512_p1 + select_ln2795_3_reg_1075);

assign add_ln2816_2_fu_570_p2 = (zext_ln2811_fu_566_p1 + select_ln2795_3_reg_1075);

assign add_ln2816_3_fu_580_p2 = ($signed(sext_ln2811_reg_1110) + $signed(select_ln2795_4_fu_556_p3));

assign add_ln2816_4_fu_648_p2 = (trunc_ln2808_cast18_reg_1099 + select_ln2795_4_reg_1132);

assign add_ln2816_5_fu_657_p2 = (zext_ln2811_reg_1143 + select_ln2795_4_reg_1132);

assign add_ln2816_6_fu_666_p2 = ($signed(sext_ln2811_reg_1110) + $signed(select_ln2795_6_fu_632_p3));

assign add_ln2816_7_fu_671_p2 = (trunc_ln2808_cast18_reg_1099 + select_ln2795_6_fu_632_p3);

assign add_ln2816_8_fu_676_p2 = (zext_ln2811_reg_1143 + select_ln2795_6_fu_632_p3);

assign add_ln2816_fu_528_p2 = ($signed(sext_ln2811_fu_524_p1) + $signed(select_ln2795_3_reg_1075));

assign add_ln2827_fu_933_p2 = (trunc_ln2808_cast20_fu_919_p1 + select_ln2795_1_fu_912_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bitcast_ln2819_1_fu_643_p1 = reg_288;

assign bitcast_ln2819_2_fu_696_p1 = reg_283;

assign bitcast_ln2819_3_fu_701_p1 = reg_288;

assign bitcast_ln2819_4_fu_735_p1 = reg_283;

assign bitcast_ln2819_5_fu_740_p1 = reg_288;

assign bitcast_ln2819_6_fu_749_p1 = reg_283;

assign bitcast_ln2819_7_fu_754_p1 = reg_288;

assign bitcast_ln2819_8_fu_759_p1 = reg_283;

assign bitcast_ln2819_fu_638_p1 = reg_283;

assign cmp25_0_2_fu_724_p2 = ((empty_66_reg_1039 > 5'd27) ? 1'b1 : 1'b0);

assign cmp25_0_2_mid1_fu_600_p2 = ((p_mid119_fu_595_p2 > 5'd27) ? 1'b1 : 1'b0);

assign empty_59_fu_839_p2 = (zext_ln2795_1_fu_836_p1 + empty);

assign empty_60_fu_844_p1 = empty_59_fu_839_p2[6:0];

assign empty_61_fu_868_p2 = ($signed(p_shl4_fu_848_p3) - $signed(p_shl5_cast_fu_864_p1));

assign empty_62_fu_327_p2 = ($signed(zext_ln2795_fu_323_p1) + $signed(6'd63));

assign empty_63_fu_333_p1 = empty_62_fu_327_p2[4:0];

assign empty_64_fu_357_p2 = ($signed(p_shl10_fu_337_p3) - $signed(p_shl11_0_0_cast_fu_353_p1));

assign empty_65_fu_482_p2 = (p_shl10_0_1_fu_464_p3 - p_shl11_0_1_cast_fu_478_p1);

assign empty_66_fu_363_p2 = (ap_sig_allocacmp_h_3 + 5'd1);

assign empty_67_fu_506_p2 = (p_shl10_0_2_fu_488_p3 - p_shl11_0_2_cast_fu_502_p1);

assign empty_69_fu_882_p1 = p_mid1_fu_877_p2[6:0];

assign empty_70_fu_410_p1 = p_mid111_fu_404_p2[4:0];

assign grp_fu_619_p_ce = 1'b1;

assign grp_fu_619_p_din0 = grp_fu_266_p0;

assign grp_fu_619_p_din1 = grp_fu_266_p1;

assign grp_fu_619_p_opcode = 2'd0;

assign grp_fu_623_p_ce = 1'b1;

assign grp_fu_623_p_din0 = grp_fu_271_p0;

assign grp_fu_623_p_din1 = grp_fu_271_p1;

assign grp_fu_623_p_opcode = 2'd0;

assign grp_fu_627_p_ce = 1'b1;

assign grp_fu_627_p_din0 = grp_fu_275_p0;

assign grp_fu_627_p_din1 = grp_fu_275_p1;

assign grp_fu_631_p_ce = 1'b1;

assign grp_fu_631_p_din0 = grp_fu_279_p0;

assign grp_fu_631_p_din1 = grp_fu_279_p1;

assign icmp_ln2795_fu_377_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln2797_fu_386_p2 = ((ap_sig_allocacmp_w_load == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln2811_fu_691_p2 = ((add_ln2808_1_reg_1138 > 5'd27) ? 1'b1 : 1'b0);

assign or_ln2811_1_fu_796_p2 = (select_ln2795_7_reg_1082_pp0_iter4_reg | icmp_ln2811_reg_1199_pp0_iter3_reg);

assign or_ln2811_2_fu_819_p2 = (tmp_4_reg_1126_pp0_iter9_reg | select_ln2795_5_reg_1226_pp0_iter9_reg);

assign or_ln2811_3_fu_922_p2 = (select_ln2795_5_reg_1226_pp0_iter11_reg | icmp_ln2811_reg_1199_pp0_iter10_reg);

assign or_ln2811_fu_769_p2 = (select_ln2795_2_fu_764_p3 | add_ln2808_reg_1105_pp0_iter2_reg);

assign p_mid111_fu_404_p2 = ($signed(zext_ln2795_2_fu_400_p1) + $signed(6'd63));

assign p_mid115_fu_434_p2 = ($signed(p_shl10_0_0_mid1_fu_414_p3) - $signed(p_shl11_0_0_cast_mid1_fu_430_p1));

assign p_mid119_fu_595_p2 = (h_3_reg_1020 + 5'd2);

assign p_mid121_fu_626_p2 = (p_shl10_0_2_mid1_fu_606_p3 - p_shl11_0_2_cast_mid1_fu_622_p1);

assign p_mid19_fu_906_p2 = ($signed(p_shl4_mid1_fu_886_p3) - $signed(p_shl5_cast_mid1_fu_902_p1));

assign p_mid1_fu_877_p2 = (zext_ln2795_3_fu_874_p1 + empty);

assign p_shl10_0_0_mid1_fu_414_p3 = {{empty_70_fu_410_p1}, {5'd0}};

assign p_shl10_0_1_fu_464_p3 = {{h_3_reg_1020}, {5'd0}};

assign p_shl10_0_2_fu_488_p3 = {{empty_66_reg_1039}, {5'd0}};

assign p_shl10_0_2_mid1_fu_606_p3 = {{p_mid119_fu_595_p2}, {5'd0}};

assign p_shl10_fu_337_p3 = {{empty_63_fu_333_p1}, {5'd0}};

assign p_shl11_0_0_cast_fu_353_p1 = $signed(p_shl11_fu_345_p3);

assign p_shl11_0_0_cast_mid1_fu_430_p1 = $signed(p_shl11_0_0_mid1_fu_422_p3);

assign p_shl11_0_0_mid1_fu_422_p3 = {{p_mid111_fu_404_p2}, {2'd0}};

assign p_shl11_0_1_cast_fu_478_p1 = p_shl11_0_1_fu_471_p3;

assign p_shl11_0_1_fu_471_p3 = {{h_3_reg_1020}, {2'd0}};

assign p_shl11_0_2_cast_fu_502_p1 = p_shl11_0_2_fu_495_p3;

assign p_shl11_0_2_cast_mid1_fu_622_p1 = p_shl11_0_2_mid1_fu_614_p3;

assign p_shl11_0_2_fu_495_p3 = {{empty_66_reg_1039}, {2'd0}};

assign p_shl11_0_2_mid1_fu_614_p3 = {{p_mid119_fu_595_p2}, {2'd0}};

assign p_shl11_fu_345_p3 = {{empty_62_fu_327_p2}, {2'd0}};

assign p_shl4_fu_848_p3 = {{empty_60_fu_844_p1}, {5'd0}};

assign p_shl4_mid1_fu_886_p3 = {{empty_69_fu_882_p1}, {5'd0}};

assign p_shl5_cast_fu_864_p1 = $signed(p_shl5_fu_856_p3);

assign p_shl5_cast_mid1_fu_902_p1 = $signed(p_shl5_mid1_fu_894_p3);

assign p_shl5_fu_856_p3 = {{empty_59_fu_839_p2}, {2'd0}};

assign p_shl5_mid1_fu_894_p3 = {{p_mid1_fu_877_p2}, {2'd0}};

assign select_ln2795_1_fu_912_p3 = ((icmp_ln2797_reg_1052_pp0_iter11_reg[0:0] == 1'b1) ? p_mid19_fu_906_p2 : empty_61_fu_868_p2);

assign select_ln2795_2_fu_764_p3 = ((icmp_ln2797_reg_1052_pp0_iter2_reg[0:0] == 1'b1) ? p_mid111_reg_1070_pp0_iter2_reg : empty_62_reg_1034_pp0_iter2_reg);

assign select_ln2795_3_fu_440_p3 = ((icmp_ln2797_fu_386_p2[0:0] == 1'b1) ? p_mid115_fu_434_p2 : empty_64_fu_357_p2);

assign select_ln2795_4_fu_556_p3 = ((icmp_ln2797_reg_1052[0:0] == 1'b1) ? empty_67_reg_1093 : empty_65_reg_1088);

assign select_ln2795_5_fu_729_p3 = ((icmp_ln2797_reg_1052[0:0] == 1'b1) ? cmp25_0_2_mid1_reg_1159 : cmp25_0_2_fu_724_p2);

assign select_ln2795_6_fu_632_p3 = ((icmp_ln2797_reg_1052[0:0] == 1'b1) ? p_mid121_fu_626_p2 : empty_67_reg_1093);

assign select_ln2795_7_fu_456_p3 = ((icmp_ln2797_fu_386_p2[0:0] == 1'b1) ? tmp_2_fu_448_p3 : tmp_1_fu_369_p3);

assign select_ln2795_8_fu_686_p3 = ((icmp_ln2797_reg_1052[0:0] == 1'b1) ? empty_66_reg_1039 : h_3_reg_1020);

assign select_ln2795_fu_392_p3 = ((icmp_ln2797_fu_386_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_w_load);

assign select_ln2811_1_fu_790_p3 = ((select_ln2795_7_reg_1082_pp0_iter3_reg[0:0] == 1'b1) ? select_ln2811_reg_1308_pp0_iter3_reg : reg_293);

assign select_ln2811_2_fu_800_p3 = ((or_ln2811_1_fu_796_p2[0:0] == 1'b1) ? select_ln2811_1_reg_1314_pp0_iter4_reg : reg_293);

assign select_ln2811_3_fu_807_p3 = ((tmp_4_reg_1126_pp0_iter5_reg[0:0] == 1'b1) ? select_ln2811_2_reg_1320_pp0_iter5_reg : reg_293);

assign select_ln2811_4_fu_813_p3 = ((icmp_ln2811_reg_1199_pp0_iter7_reg[0:0] == 1'b1) ? sum_5_0_1_1_reg_1331_pp0_iter8_reg : reg_297);

assign select_ln2811_5_fu_823_p3 = ((or_ln2811_2_fu_819_p2[0:0] == 1'b1) ? select_ln2811_4_reg_1337_pp0_iter9_reg : reg_297);

assign select_ln2811_6_fu_926_p3 = ((or_ln2811_3_fu_922_p2[0:0] == 1'b1) ? sum_2_0_2_1_reg_1349_pp0_iter11_reg : reg_297);

assign select_ln2811_fu_782_p3 = ((tmp_3_fu_774_p3[0:0] == 1'b1) ? 32'd0 : reg_293);

assign sext_ln2811_fu_524_p1 = add_ln2808_fu_518_p2;

assign sum_2_0_2_1_fu_830_p3 = ((select_ln2795_5_reg_1226_pp0_iter10_reg[0:0] == 1'b1) ? select_ln2811_4_reg_1337_pp0_iter10_reg : reg_297);

assign tmp_1_fu_369_p3 = empty_62_fu_327_p2[32'd5];

assign tmp_2_fu_448_p3 = p_mid111_fu_404_p2[32'd5];

assign tmp_3_fu_774_p3 = or_ln2811_fu_769_p2[32'd5];

assign trunc_ln2808_cast18_fu_512_p1 = select_ln2795_reg_1062;

assign trunc_ln2808_cast20_fu_919_p1 = select_ln2795_reg_1062_pp0_iter11_reg;

assign trunc_ln2808_cast_fu_515_p1 = select_ln2795_reg_1062;

assign y_address0 = zext_ln2827_fu_939_p1;

assign y_d0 = reg_297;

assign zext_ln2795_1_fu_836_p1 = h_3_reg_1020_pp0_iter11_reg;

assign zext_ln2795_2_fu_400_p1 = empty_66_fu_363_p2;

assign zext_ln2795_3_fu_874_p1 = empty_66_reg_1039_pp0_iter11_reg;

assign zext_ln2795_fu_323_p1 = ap_sig_allocacmp_h_3;

assign zext_ln2811_fu_566_p1 = add_ln2808_1_fu_561_p2;

assign zext_ln2819_1_fu_543_p1 = add_ln2816_1_fu_538_p2;

assign zext_ln2819_2_fu_575_p1 = add_ln2816_2_fu_570_p2;

assign zext_ln2819_3_fu_585_p1 = add_ln2816_3_fu_580_p2;

assign zext_ln2819_4_fu_652_p1 = add_ln2816_4_fu_648_p2;

assign zext_ln2819_5_fu_661_p1 = add_ln2816_5_fu_657_p2;

assign zext_ln2819_6_fu_706_p1 = add_ln2816_6_reg_1184;

assign zext_ln2819_7_fu_710_p1 = add_ln2816_7_reg_1189;

assign zext_ln2819_8_fu_745_p1 = add_ln2816_8_reg_1194;

assign zext_ln2819_fu_533_p1 = add_ln2816_fu_528_p2;

assign zext_ln2827_fu_939_p1 = add_ln2827_reg_1360_pp0_iter12_reg;

always @ (posedge ap_clk) begin
    select_ln2795_3_reg_1075[1:0] <= 2'b00;
    empty_65_reg_1088[1:0] <= 2'b00;
    empty_67_reg_1093[1:0] <= 2'b00;
    trunc_ln2808_cast18_reg_1099[9:5] <= 5'b00000;
    select_ln2795_4_reg_1132[1:0] <= 2'b00;
    zext_ln2811_reg_1143[9:5] <= 5'b00000;
end

endmodule //cnn_top_conv2d_1_Pipeline_VITIS_LOOP_2795_2_VITIS_LOOP_2797_3
